/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolChampionsCollectionsChampionChroma {
    #[serde(rename = "championId", skip_serializing_if = "Option::is_none")]
    pub champion_id: Option<i32>,
    #[serde(rename = "chromaPath", skip_serializing_if = "Option::is_none")]
    pub chroma_path: Option<String>,
    #[serde(rename = "colors", skip_serializing_if = "Option::is_none")]
    pub colors: Option<Vec<String>>,
    #[serde(rename = "disabled", skip_serializing_if = "Option::is_none")]
    pub disabled: Option<bool>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "lastSelected", skip_serializing_if = "Option::is_none")]
    pub last_selected: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "ownership", skip_serializing_if = "Option::is_none")]
    pub ownership: Option<crate::models::LolChampionsCollectionsOwnership>,
    #[serde(rename = "stillObtainable", skip_serializing_if = "Option::is_none")]
    pub still_obtainable: Option<bool>,
}

impl LolChampionsCollectionsChampionChroma {
    pub fn new() -> LolChampionsCollectionsChampionChroma {
        LolChampionsCollectionsChampionChroma {
            champion_id: None,
            chroma_path: None,
            colors: None,
            disabled: None,
            id: None,
            last_selected: None,
            name: None,
            ownership: None,
            still_obtainable: None,
        }
    }
}


