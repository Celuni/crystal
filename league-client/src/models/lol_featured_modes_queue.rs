/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolFeaturedModesQueue {
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<crate::models::LolFeaturedModesQueueGameCategory>,
    #[serde(rename = "gameMode", skip_serializing_if = "Option::is_none")]
    pub game_mode: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "lastToggledOffTime", skip_serializing_if = "Option::is_none")]
    pub last_toggled_off_time: Option<i64>,
    #[serde(rename = "lastToggledOnTime", skip_serializing_if = "Option::is_none")]
    pub last_toggled_on_time: Option<i64>,
    #[serde(rename = "mapId", skip_serializing_if = "Option::is_none")]
    pub map_id: Option<i32>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "queueAvailability", skip_serializing_if = "Option::is_none")]
    pub queue_availability: Option<crate::models::LolFeaturedModesQueueAvailability>,
}

impl LolFeaturedModesQueue {
    pub fn new() -> LolFeaturedModesQueue {
        LolFeaturedModesQueue {
            category: None,
            game_mode: None,
            id: None,
            last_toggled_off_time: None,
            last_toggled_on_time: None,
            map_id: None,
            name: None,
            queue_availability: None,
        }
    }
}


