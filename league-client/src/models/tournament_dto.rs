/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TournamentDto {
    #[serde(rename = "bracketFormationInitDelayMs", skip_serializing_if = "Option::is_none")]
    pub bracket_formation_init_delay_ms: Option<i64>,
    #[serde(rename = "bracketFormationIntervalMs", skip_serializing_if = "Option::is_none")]
    pub bracket_formation_interval_ms: Option<i64>,
    #[serde(rename = "bracketSize", skip_serializing_if = "Option::is_none")]
    pub bracket_size: Option<String>,
    #[serde(rename = "buyInOptions", skip_serializing_if = "Option::is_none")]
    pub buy_in_options: Option<Vec<i32>>,
    #[serde(rename = "buyInOptionsPremium", skip_serializing_if = "Option::is_none")]
    pub buy_in_options_premium: Option<Vec<i32>>,
    #[serde(rename = "entryFee", skip_serializing_if = "Option::is_none")]
    pub entry_fee: Option<i32>,
    #[serde(rename = "honorRestriction", skip_serializing_if = "Option::is_none")]
    pub honor_restriction: Option<bool>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "lastThemeOfSeason", skip_serializing_if = "Option::is_none")]
    pub last_theme_of_season: Option<bool>,
    #[serde(rename = "maxSub", skip_serializing_if = "Option::is_none")]
    pub max_sub: Option<i32>,
    #[serde(rename = "minGames", skip_serializing_if = "Option::is_none")]
    pub min_games: Option<i32>,
    #[serde(rename = "nameLocKey", skip_serializing_if = "Option::is_none")]
    pub name_loc_key: Option<String>,
    #[serde(rename = "nameLocKeySecondary", skip_serializing_if = "Option::is_none")]
    pub name_loc_key_secondary: Option<String>,
    #[serde(rename = "phases", skip_serializing_if = "Option::is_none")]
    pub phases: Option<Vec<crate::models::TournamentPhaseDto>>,
    #[serde(rename = "queueId", skip_serializing_if = "Option::is_none")]
    pub queue_id: Option<i32>,
    #[serde(rename = "rankRestriction", skip_serializing_if = "Option::is_none")]
    pub rank_restriction: Option<bool>,
    #[serde(rename = "resumeTime", skip_serializing_if = "Option::is_none")]
    pub resume_time: Option<i64>,
    #[serde(rename = "rewardConfig", skip_serializing_if = "Option::is_none")]
    pub reward_config: Option<Vec<crate::models::ClashRewardConfigClient>>,
    #[serde(rename = "rosterCreateDeadline", skip_serializing_if = "Option::is_none")]
    pub roster_create_deadline: Option<i64>,
    #[serde(rename = "rosterSize", skip_serializing_if = "Option::is_none")]
    pub roster_size: Option<i32>,
    #[serde(rename = "scheduleEndTime", skip_serializing_if = "Option::is_none")]
    pub schedule_end_time: Option<i64>,
    #[serde(rename = "scheduleTime", skip_serializing_if = "Option::is_none")]
    pub schedule_time: Option<i64>,
    #[serde(rename = "scoutingTimeMs", skip_serializing_if = "Option::is_none")]
    pub scouting_time_ms: Option<i64>,
    #[serde(rename = "smsRestriction", skip_serializing_if = "Option::is_none")]
    pub sms_restriction: Option<bool>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::TournamentStatusEnum>,
    #[serde(rename = "themeId", skip_serializing_if = "Option::is_none")]
    pub theme_id: Option<i32>,
    #[serde(rename = "tierConfigs", skip_serializing_if = "Option::is_none")]
    pub tier_configs: Option<Vec<crate::models::TierConfig>>,
    #[serde(rename = "voiceEnabled", skip_serializing_if = "Option::is_none")]
    pub voice_enabled: Option<bool>,
}

impl TournamentDto {
    pub fn new() -> TournamentDto {
        TournamentDto {
            bracket_formation_init_delay_ms: None,
            bracket_formation_interval_ms: None,
            bracket_size: None,
            buy_in_options: None,
            buy_in_options_premium: None,
            entry_fee: None,
            honor_restriction: None,
            id: None,
            last_theme_of_season: None,
            max_sub: None,
            min_games: None,
            name_loc_key: None,
            name_loc_key_secondary: None,
            phases: None,
            queue_id: None,
            rank_restriction: None,
            resume_time: None,
            reward_config: None,
            roster_create_deadline: None,
            roster_size: None,
            schedule_end_time: None,
            schedule_time: None,
            scouting_time_ms: None,
            sms_restriction: None,
            status: None,
            theme_id: None,
            tier_configs: None,
            voice_enabled: None,
        }
    }
}


