/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolMatchHistoryMatchHistoryParticipantStatistics {
    #[serde(rename = "assists", skip_serializing_if = "Option::is_none")]
    pub assists: Option<i64>,
    #[serde(rename = "causedEarlySurrender", skip_serializing_if = "Option::is_none")]
    pub caused_early_surrender: Option<bool>,
    #[serde(rename = "champLevel", skip_serializing_if = "Option::is_none")]
    pub champ_level: Option<i64>,
    #[serde(rename = "combatPlayerScore", skip_serializing_if = "Option::is_none")]
    pub combat_player_score: Option<i64>,
    #[serde(rename = "damageDealtToObjectives", skip_serializing_if = "Option::is_none")]
    pub damage_dealt_to_objectives: Option<i64>,
    #[serde(rename = "damageDealtToTurrets", skip_serializing_if = "Option::is_none")]
    pub damage_dealt_to_turrets: Option<i64>,
    #[serde(rename = "damageSelfMitigated", skip_serializing_if = "Option::is_none")]
    pub damage_self_mitigated: Option<i64>,
    #[serde(rename = "deaths", skip_serializing_if = "Option::is_none")]
    pub deaths: Option<i64>,
    #[serde(rename = "doubleKills", skip_serializing_if = "Option::is_none")]
    pub double_kills: Option<i64>,
    #[serde(rename = "earlySurrenderAccomplice", skip_serializing_if = "Option::is_none")]
    pub early_surrender_accomplice: Option<bool>,
    #[serde(rename = "firstBloodAssist", skip_serializing_if = "Option::is_none")]
    pub first_blood_assist: Option<bool>,
    #[serde(rename = "firstBloodKill", skip_serializing_if = "Option::is_none")]
    pub first_blood_kill: Option<bool>,
    #[serde(rename = "firstInhibitorAssist", skip_serializing_if = "Option::is_none")]
    pub first_inhibitor_assist: Option<bool>,
    #[serde(rename = "firstInhibitorKill", skip_serializing_if = "Option::is_none")]
    pub first_inhibitor_kill: Option<bool>,
    #[serde(rename = "firstTowerAssist", skip_serializing_if = "Option::is_none")]
    pub first_tower_assist: Option<bool>,
    #[serde(rename = "firstTowerKill", skip_serializing_if = "Option::is_none")]
    pub first_tower_kill: Option<bool>,
    #[serde(rename = "gameEndedInEarlySurrender", skip_serializing_if = "Option::is_none")]
    pub game_ended_in_early_surrender: Option<bool>,
    #[serde(rename = "gameEndedInSurrender", skip_serializing_if = "Option::is_none")]
    pub game_ended_in_surrender: Option<bool>,
    #[serde(rename = "goldEarned", skip_serializing_if = "Option::is_none")]
    pub gold_earned: Option<i64>,
    #[serde(rename = "goldSpent", skip_serializing_if = "Option::is_none")]
    pub gold_spent: Option<i64>,
    #[serde(rename = "inhibitorKills", skip_serializing_if = "Option::is_none")]
    pub inhibitor_kills: Option<i64>,
    #[serde(rename = "item0", skip_serializing_if = "Option::is_none")]
    pub item0: Option<i32>,
    #[serde(rename = "item1", skip_serializing_if = "Option::is_none")]
    pub item1: Option<i32>,
    #[serde(rename = "item2", skip_serializing_if = "Option::is_none")]
    pub item2: Option<i32>,
    #[serde(rename = "item3", skip_serializing_if = "Option::is_none")]
    pub item3: Option<i32>,
    #[serde(rename = "item4", skip_serializing_if = "Option::is_none")]
    pub item4: Option<i32>,
    #[serde(rename = "item5", skip_serializing_if = "Option::is_none")]
    pub item5: Option<i32>,
    #[serde(rename = "item6", skip_serializing_if = "Option::is_none")]
    pub item6: Option<i32>,
    #[serde(rename = "killingSprees", skip_serializing_if = "Option::is_none")]
    pub killing_sprees: Option<i64>,
    #[serde(rename = "kills", skip_serializing_if = "Option::is_none")]
    pub kills: Option<i64>,
    #[serde(rename = "largestCriticalStrike", skip_serializing_if = "Option::is_none")]
    pub largest_critical_strike: Option<i64>,
    #[serde(rename = "largestKillingSpree", skip_serializing_if = "Option::is_none")]
    pub largest_killing_spree: Option<i64>,
    #[serde(rename = "largestMultiKill", skip_serializing_if = "Option::is_none")]
    pub largest_multi_kill: Option<i64>,
    #[serde(rename = "longestTimeSpentLiving", skip_serializing_if = "Option::is_none")]
    pub longest_time_spent_living: Option<i64>,
    #[serde(rename = "magicDamageDealt", skip_serializing_if = "Option::is_none")]
    pub magic_damage_dealt: Option<i64>,
    #[serde(rename = "magicDamageDealtToChampions", skip_serializing_if = "Option::is_none")]
    pub magic_damage_dealt_to_champions: Option<i64>,
    #[serde(rename = "magicalDamageTaken", skip_serializing_if = "Option::is_none")]
    pub magical_damage_taken: Option<i64>,
    #[serde(rename = "neutralMinionsKilled", skip_serializing_if = "Option::is_none")]
    pub neutral_minions_killed: Option<i64>,
    #[serde(rename = "neutralMinionsKilledEnemyJungle", skip_serializing_if = "Option::is_none")]
    pub neutral_minions_killed_enemy_jungle: Option<i64>,
    #[serde(rename = "neutralMinionsKilledTeamJungle", skip_serializing_if = "Option::is_none")]
    pub neutral_minions_killed_team_jungle: Option<i64>,
    #[serde(rename = "objectivePlayerScore", skip_serializing_if = "Option::is_none")]
    pub objective_player_score: Option<i64>,
    #[serde(rename = "participantId", skip_serializing_if = "Option::is_none")]
    pub participant_id: Option<i32>,
    #[serde(rename = "pentaKills", skip_serializing_if = "Option::is_none")]
    pub penta_kills: Option<i64>,
    #[serde(rename = "perk0", skip_serializing_if = "Option::is_none")]
    pub perk0: Option<i64>,
    #[serde(rename = "perk0Var1", skip_serializing_if = "Option::is_none")]
    pub perk0_var1: Option<i64>,
    #[serde(rename = "perk0Var2", skip_serializing_if = "Option::is_none")]
    pub perk0_var2: Option<i64>,
    #[serde(rename = "perk0Var3", skip_serializing_if = "Option::is_none")]
    pub perk0_var3: Option<i64>,
    #[serde(rename = "perk1", skip_serializing_if = "Option::is_none")]
    pub perk1: Option<i64>,
    #[serde(rename = "perk1Var1", skip_serializing_if = "Option::is_none")]
    pub perk1_var1: Option<i64>,
    #[serde(rename = "perk1Var2", skip_serializing_if = "Option::is_none")]
    pub perk1_var2: Option<i64>,
    #[serde(rename = "perk1Var3", skip_serializing_if = "Option::is_none")]
    pub perk1_var3: Option<i64>,
    #[serde(rename = "perk2", skip_serializing_if = "Option::is_none")]
    pub perk2: Option<i64>,
    #[serde(rename = "perk2Var1", skip_serializing_if = "Option::is_none")]
    pub perk2_var1: Option<i64>,
    #[serde(rename = "perk2Var2", skip_serializing_if = "Option::is_none")]
    pub perk2_var2: Option<i64>,
    #[serde(rename = "perk2Var3", skip_serializing_if = "Option::is_none")]
    pub perk2_var3: Option<i64>,
    #[serde(rename = "perk3", skip_serializing_if = "Option::is_none")]
    pub perk3: Option<i64>,
    #[serde(rename = "perk3Var1", skip_serializing_if = "Option::is_none")]
    pub perk3_var1: Option<i64>,
    #[serde(rename = "perk3Var2", skip_serializing_if = "Option::is_none")]
    pub perk3_var2: Option<i64>,
    #[serde(rename = "perk3Var3", skip_serializing_if = "Option::is_none")]
    pub perk3_var3: Option<i64>,
    #[serde(rename = "perk4", skip_serializing_if = "Option::is_none")]
    pub perk4: Option<i64>,
    #[serde(rename = "perk4Var1", skip_serializing_if = "Option::is_none")]
    pub perk4_var1: Option<i64>,
    #[serde(rename = "perk4Var2", skip_serializing_if = "Option::is_none")]
    pub perk4_var2: Option<i64>,
    #[serde(rename = "perk4Var3", skip_serializing_if = "Option::is_none")]
    pub perk4_var3: Option<i64>,
    #[serde(rename = "perk5", skip_serializing_if = "Option::is_none")]
    pub perk5: Option<i64>,
    #[serde(rename = "perk5Var1", skip_serializing_if = "Option::is_none")]
    pub perk5_var1: Option<i64>,
    #[serde(rename = "perk5Var2", skip_serializing_if = "Option::is_none")]
    pub perk5_var2: Option<i64>,
    #[serde(rename = "perk5Var3", skip_serializing_if = "Option::is_none")]
    pub perk5_var3: Option<i64>,
    #[serde(rename = "perkPrimaryStyle", skip_serializing_if = "Option::is_none")]
    pub perk_primary_style: Option<i64>,
    #[serde(rename = "perkSubStyle", skip_serializing_if = "Option::is_none")]
    pub perk_sub_style: Option<i64>,
    #[serde(rename = "physicalDamageDealt", skip_serializing_if = "Option::is_none")]
    pub physical_damage_dealt: Option<i64>,
    #[serde(rename = "physicalDamageDealtToChampions", skip_serializing_if = "Option::is_none")]
    pub physical_damage_dealt_to_champions: Option<i64>,
    #[serde(rename = "physicalDamageTaken", skip_serializing_if = "Option::is_none")]
    pub physical_damage_taken: Option<i64>,
    #[serde(rename = "playerScore0", skip_serializing_if = "Option::is_none")]
    pub player_score0: Option<i64>,
    #[serde(rename = "playerScore1", skip_serializing_if = "Option::is_none")]
    pub player_score1: Option<i64>,
    #[serde(rename = "playerScore2", skip_serializing_if = "Option::is_none")]
    pub player_score2: Option<i64>,
    #[serde(rename = "playerScore3", skip_serializing_if = "Option::is_none")]
    pub player_score3: Option<i64>,
    #[serde(rename = "playerScore4", skip_serializing_if = "Option::is_none")]
    pub player_score4: Option<i64>,
    #[serde(rename = "playerScore5", skip_serializing_if = "Option::is_none")]
    pub player_score5: Option<i64>,
    #[serde(rename = "playerScore6", skip_serializing_if = "Option::is_none")]
    pub player_score6: Option<i64>,
    #[serde(rename = "playerScore7", skip_serializing_if = "Option::is_none")]
    pub player_score7: Option<i64>,
    #[serde(rename = "playerScore8", skip_serializing_if = "Option::is_none")]
    pub player_score8: Option<i64>,
    #[serde(rename = "playerScore9", skip_serializing_if = "Option::is_none")]
    pub player_score9: Option<i64>,
    #[serde(rename = "quadraKills", skip_serializing_if = "Option::is_none")]
    pub quadra_kills: Option<i64>,
    #[serde(rename = "sightWardsBoughtInGame", skip_serializing_if = "Option::is_none")]
    pub sight_wards_bought_in_game: Option<i64>,
    #[serde(rename = "teamEarlySurrendered", skip_serializing_if = "Option::is_none")]
    pub team_early_surrendered: Option<bool>,
    #[serde(rename = "timeCCingOthers", skip_serializing_if = "Option::is_none")]
    pub time_c_cing_others: Option<i64>,
    #[serde(rename = "totalDamageDealt", skip_serializing_if = "Option::is_none")]
    pub total_damage_dealt: Option<i64>,
    #[serde(rename = "totalDamageDealtToChampions", skip_serializing_if = "Option::is_none")]
    pub total_damage_dealt_to_champions: Option<i64>,
    #[serde(rename = "totalDamageTaken", skip_serializing_if = "Option::is_none")]
    pub total_damage_taken: Option<i64>,
    #[serde(rename = "totalHeal", skip_serializing_if = "Option::is_none")]
    pub total_heal: Option<i64>,
    #[serde(rename = "totalMinionsKilled", skip_serializing_if = "Option::is_none")]
    pub total_minions_killed: Option<i64>,
    #[serde(rename = "totalPlayerScore", skip_serializing_if = "Option::is_none")]
    pub total_player_score: Option<i64>,
    #[serde(rename = "totalScoreRank", skip_serializing_if = "Option::is_none")]
    pub total_score_rank: Option<i64>,
    #[serde(rename = "totalTimeCrowdControlDealt", skip_serializing_if = "Option::is_none")]
    pub total_time_crowd_control_dealt: Option<i64>,
    #[serde(rename = "totalUnitsHealed", skip_serializing_if = "Option::is_none")]
    pub total_units_healed: Option<i64>,
    #[serde(rename = "tripleKills", skip_serializing_if = "Option::is_none")]
    pub triple_kills: Option<i64>,
    #[serde(rename = "trueDamageDealt", skip_serializing_if = "Option::is_none")]
    pub true_damage_dealt: Option<i64>,
    #[serde(rename = "trueDamageDealtToChampions", skip_serializing_if = "Option::is_none")]
    pub true_damage_dealt_to_champions: Option<i64>,
    #[serde(rename = "trueDamageTaken", skip_serializing_if = "Option::is_none")]
    pub true_damage_taken: Option<i64>,
    #[serde(rename = "turretKills", skip_serializing_if = "Option::is_none")]
    pub turret_kills: Option<i64>,
    #[serde(rename = "unrealKills", skip_serializing_if = "Option::is_none")]
    pub unreal_kills: Option<i64>,
    #[serde(rename = "visionScore", skip_serializing_if = "Option::is_none")]
    pub vision_score: Option<i64>,
    #[serde(rename = "visionWardsBoughtInGame", skip_serializing_if = "Option::is_none")]
    pub vision_wards_bought_in_game: Option<i64>,
    #[serde(rename = "wardsKilled", skip_serializing_if = "Option::is_none")]
    pub wards_killed: Option<i64>,
    #[serde(rename = "wardsPlaced", skip_serializing_if = "Option::is_none")]
    pub wards_placed: Option<i64>,
    #[serde(rename = "win", skip_serializing_if = "Option::is_none")]
    pub win: Option<bool>,
}

impl LolMatchHistoryMatchHistoryParticipantStatistics {
    pub fn new() -> LolMatchHistoryMatchHistoryParticipantStatistics {
        LolMatchHistoryMatchHistoryParticipantStatistics {
            assists: None,
            caused_early_surrender: None,
            champ_level: None,
            combat_player_score: None,
            damage_dealt_to_objectives: None,
            damage_dealt_to_turrets: None,
            damage_self_mitigated: None,
            deaths: None,
            double_kills: None,
            early_surrender_accomplice: None,
            first_blood_assist: None,
            first_blood_kill: None,
            first_inhibitor_assist: None,
            first_inhibitor_kill: None,
            first_tower_assist: None,
            first_tower_kill: None,
            game_ended_in_early_surrender: None,
            game_ended_in_surrender: None,
            gold_earned: None,
            gold_spent: None,
            inhibitor_kills: None,
            item0: None,
            item1: None,
            item2: None,
            item3: None,
            item4: None,
            item5: None,
            item6: None,
            killing_sprees: None,
            kills: None,
            largest_critical_strike: None,
            largest_killing_spree: None,
            largest_multi_kill: None,
            longest_time_spent_living: None,
            magic_damage_dealt: None,
            magic_damage_dealt_to_champions: None,
            magical_damage_taken: None,
            neutral_minions_killed: None,
            neutral_minions_killed_enemy_jungle: None,
            neutral_minions_killed_team_jungle: None,
            objective_player_score: None,
            participant_id: None,
            penta_kills: None,
            perk0: None,
            perk0_var1: None,
            perk0_var2: None,
            perk0_var3: None,
            perk1: None,
            perk1_var1: None,
            perk1_var2: None,
            perk1_var3: None,
            perk2: None,
            perk2_var1: None,
            perk2_var2: None,
            perk2_var3: None,
            perk3: None,
            perk3_var1: None,
            perk3_var2: None,
            perk3_var3: None,
            perk4: None,
            perk4_var1: None,
            perk4_var2: None,
            perk4_var3: None,
            perk5: None,
            perk5_var1: None,
            perk5_var2: None,
            perk5_var3: None,
            perk_primary_style: None,
            perk_sub_style: None,
            physical_damage_dealt: None,
            physical_damage_dealt_to_champions: None,
            physical_damage_taken: None,
            player_score0: None,
            player_score1: None,
            player_score2: None,
            player_score3: None,
            player_score4: None,
            player_score5: None,
            player_score6: None,
            player_score7: None,
            player_score8: None,
            player_score9: None,
            quadra_kills: None,
            sight_wards_bought_in_game: None,
            team_early_surrendered: None,
            time_c_cing_others: None,
            total_damage_dealt: None,
            total_damage_dealt_to_champions: None,
            total_damage_taken: None,
            total_heal: None,
            total_minions_killed: None,
            total_player_score: None,
            total_score_rank: None,
            total_time_crowd_control_dealt: None,
            total_units_healed: None,
            triple_kills: None,
            true_damage_dealt: None,
            true_damage_dealt_to_champions: None,
            true_damage_taken: None,
            turret_kills: None,
            unreal_kills: None,
            vision_score: None,
            vision_wards_bought_in_game: None,
            wards_killed: None,
            wards_placed: None,
            win: None,
        }
    }
}


