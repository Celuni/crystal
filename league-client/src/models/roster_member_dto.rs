/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RosterMemberDto {
    #[serde(rename = "bidType", skip_serializing_if = "Option::is_none")]
    pub bid_type: Option<crate::models::TicketType>,
    #[serde(rename = "currentBid", skip_serializing_if = "Option::is_none")]
    pub current_bid: Option<i32>,
    #[serde(rename = "joinTime", skip_serializing_if = "Option::is_none")]
    pub join_time: Option<i64>,
    #[serde(rename = "pendingPremiumSpend", skip_serializing_if = "Option::is_none")]
    pub pending_premium_spend: Option<i32>,
    #[serde(rename = "pendingSpend", skip_serializing_if = "Option::is_none")]
    pub pending_spend: Option<i32>,
    #[serde(rename = "playerId", skip_serializing_if = "Option::is_none")]
    pub player_id: Option<i64>,
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<crate::models::Position>,
    #[serde(rename = "rosterId", skip_serializing_if = "Option::is_none")]
    pub roster_id: Option<i64>,
    #[serde(rename = "tier", skip_serializing_if = "Option::is_none")]
    pub tier: Option<i32>,
    #[serde(rename = "tournamentId", skip_serializing_if = "Option::is_none")]
    pub tournament_id: Option<i64>,
}

impl RosterMemberDto {
    pub fn new() -> RosterMemberDto {
        RosterMemberDto {
            bid_type: None,
            current_bid: None,
            join_time: None,
            pending_premium_spend: None,
            pending_spend: None,
            player_id: None,
            position: None,
            roster_id: None,
            tier: None,
            tournament_id: None,
        }
    }
}


