/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolLobbyLobbyMember {
    #[serde(rename = "autoFillEligible", skip_serializing_if = "Option::is_none")]
    pub auto_fill_eligible: Option<bool>,
    #[serde(rename = "autoFillProtectedForPromos", skip_serializing_if = "Option::is_none")]
    pub auto_fill_protected_for_promos: Option<bool>,
    #[serde(rename = "autoFillProtectedForSoloing", skip_serializing_if = "Option::is_none")]
    pub auto_fill_protected_for_soloing: Option<bool>,
    #[serde(rename = "autoFillProtectedForStreaking", skip_serializing_if = "Option::is_none")]
    pub auto_fill_protected_for_streaking: Option<bool>,
    #[serde(rename = "botChampionId", skip_serializing_if = "Option::is_none")]
    pub bot_champion_id: Option<i32>,
    #[serde(rename = "botDifficulty", skip_serializing_if = "Option::is_none")]
    pub bot_difficulty: Option<crate::models::LolLobbyLobbyBotDifficulty>,
    #[serde(rename = "canInviteOthers", skip_serializing_if = "Option::is_none")]
    pub can_invite_others: Option<bool>,
    #[serde(rename = "excludedPositionPreference", skip_serializing_if = "Option::is_none")]
    pub excluded_position_preference: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "isBot", skip_serializing_if = "Option::is_none")]
    pub is_bot: Option<bool>,
    #[serde(rename = "isOwner", skip_serializing_if = "Option::is_none")]
    pub is_owner: Option<bool>,
    #[serde(rename = "isSpectator", skip_serializing_if = "Option::is_none")]
    pub is_spectator: Option<bool>,
    #[serde(rename = "positionPreferences", skip_serializing_if = "Option::is_none")]
    pub position_preferences: Option<crate::models::LolLobbyLobbyPositionPreferences>,
    #[serde(rename = "showPositionExcluder", skip_serializing_if = "Option::is_none")]
    pub show_position_excluder: Option<bool>,
    #[serde(rename = "summonerInternalName", skip_serializing_if = "Option::is_none")]
    pub summoner_internal_name: Option<String>,
}

impl LolLobbyLobbyMember {
    pub fn new() -> LolLobbyLobbyMember {
        LolLobbyLobbyMember {
            auto_fill_eligible: None,
            auto_fill_protected_for_promos: None,
            auto_fill_protected_for_soloing: None,
            auto_fill_protected_for_streaking: None,
            bot_champion_id: None,
            bot_difficulty: None,
            can_invite_others: None,
            excluded_position_preference: None,
            id: None,
            is_bot: None,
            is_owner: None,
            is_spectator: None,
            position_preferences: None,
            show_position_excluder: None,
            summoner_internal_name: None,
        }
    }
}


