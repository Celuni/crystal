/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolCatalogCatalogItem {
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(rename = "bundled", skip_serializing_if = "Option::is_none")]
    pub bundled: Option<crate::models::LolCatalogBundled>,
    #[serde(rename = "iconUrl", skip_serializing_if = "Option::is_none")]
    pub icon_url: Option<String>,
    #[serde(rename = "inactiveDate", skip_serializing_if = "Option::is_none")]
    pub inactive_date: Option<String>,
    #[serde(rename = "inventoryType", skip_serializing_if = "Option::is_none")]
    pub inventory_type: Option<String>,
    #[serde(rename = "itemId", skip_serializing_if = "Option::is_none")]
    pub item_id: Option<i32>,
    #[serde(rename = "itemInstanceId", skip_serializing_if = "Option::is_none")]
    pub item_instance_id: Option<String>,
    #[serde(rename = "itemRequirements", skip_serializing_if = "Option::is_none")]
    pub item_requirements: Option<Vec<crate::models::LolCatalogItemKey>>,
    #[serde(rename = "localizations", skip_serializing_if = "Option::is_none")]
    pub localizations: Option<::std::collections::HashMap<String, crate::models::LolCatalogItemLocalization>>,
    #[serde(rename = "prices", skip_serializing_if = "Option::is_none")]
    pub prices: Option<Vec<crate::models::LolCatalogItemCost>>,
    #[serde(rename = "releaseDate", skip_serializing_if = "Option::is_none")]
    pub release_date: Option<String>,
    #[serde(rename = "sale", skip_serializing_if = "Option::is_none")]
    pub sale: Option<crate::models::LolCatalogSale>,
    #[serde(rename = "subInventoryType", skip_serializing_if = "Option::is_none")]
    pub sub_inventory_type: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
}

impl LolCatalogCatalogItem {
    pub fn new() -> LolCatalogCatalogItem {
        LolCatalogCatalogItem {
            active: None,
            bundled: None,
            icon_url: None,
            inactive_date: None,
            inventory_type: None,
            item_id: None,
            item_instance_id: None,
            item_requirements: None,
            localizations: None,
            prices: None,
            release_date: None,
            sale: None,
            sub_inventory_type: None,
            tags: None,
        }
    }
}


