/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolChampSelectChampSelectSession {
    #[serde(rename = "actions", skip_serializing_if = "Option::is_none")]
    pub actions: Option<Vec<::std::collections::HashMap<String, serde_json::Value>>>,
    #[serde(rename = "allowBattleBoost", skip_serializing_if = "Option::is_none")]
    pub allow_battle_boost: Option<bool>,
    #[serde(rename = "allowDuplicatePicks", skip_serializing_if = "Option::is_none")]
    pub allow_duplicate_picks: Option<bool>,
    #[serde(rename = "allowLockedEvents", skip_serializing_if = "Option::is_none")]
    pub allow_locked_events: Option<bool>,
    #[serde(rename = "allowRerolling", skip_serializing_if = "Option::is_none")]
    pub allow_rerolling: Option<bool>,
    #[serde(rename = "allowSkinSelection", skip_serializing_if = "Option::is_none")]
    pub allow_skin_selection: Option<bool>,
    #[serde(rename = "bans", skip_serializing_if = "Option::is_none")]
    pub bans: Option<crate::models::LolChampSelectChampSelectBannedChampions>,
    #[serde(rename = "benchChampionIds", skip_serializing_if = "Option::is_none")]
    pub bench_champion_ids: Option<Vec<i32>>,
    #[serde(rename = "benchEnabled", skip_serializing_if = "Option::is_none")]
    pub bench_enabled: Option<bool>,
    #[serde(rename = "boostableSkinCount", skip_serializing_if = "Option::is_none")]
    pub boostable_skin_count: Option<i32>,
    #[serde(rename = "chatDetails", skip_serializing_if = "Option::is_none")]
    pub chat_details: Option<crate::models::LolChampSelectChampSelectChatRoomDetails>,
    #[serde(rename = "counter", skip_serializing_if = "Option::is_none")]
    pub counter: Option<i64>,
    #[serde(rename = "entitledFeatureState", skip_serializing_if = "Option::is_none")]
    pub entitled_feature_state: Option<crate::models::LolChampSelectEntitledFeatureState>,
    #[serde(rename = "gameId", skip_serializing_if = "Option::is_none")]
    pub game_id: Option<i64>,
    #[serde(rename = "hasSimultaneousBans", skip_serializing_if = "Option::is_none")]
    pub has_simultaneous_bans: Option<bool>,
    #[serde(rename = "hasSimultaneousPicks", skip_serializing_if = "Option::is_none")]
    pub has_simultaneous_picks: Option<bool>,
    #[serde(rename = "isCustomGame", skip_serializing_if = "Option::is_none")]
    pub is_custom_game: Option<bool>,
    #[serde(rename = "isSpectating", skip_serializing_if = "Option::is_none")]
    pub is_spectating: Option<bool>,
    #[serde(rename = "localPlayerCellId", skip_serializing_if = "Option::is_none")]
    pub local_player_cell_id: Option<i64>,
    #[serde(rename = "lockedEventIndex", skip_serializing_if = "Option::is_none")]
    pub locked_event_index: Option<i32>,
    #[serde(rename = "myTeam", skip_serializing_if = "Option::is_none")]
    pub my_team: Option<Vec<crate::models::LolChampSelectChampSelectPlayerSelection>>,
    #[serde(rename = "rerollsRemaining", skip_serializing_if = "Option::is_none")]
    pub rerolls_remaining: Option<i32>,
    #[serde(rename = "skipChampionSelect", skip_serializing_if = "Option::is_none")]
    pub skip_champion_select: Option<bool>,
    #[serde(rename = "theirTeam", skip_serializing_if = "Option::is_none")]
    pub their_team: Option<Vec<crate::models::LolChampSelectChampSelectPlayerSelection>>,
    #[serde(rename = "timer", skip_serializing_if = "Option::is_none")]
    pub timer: Option<crate::models::LolChampSelectChampSelectTimer>,
    #[serde(rename = "trades", skip_serializing_if = "Option::is_none")]
    pub trades: Option<Vec<crate::models::LolChampSelectChampSelectTradeContract>>,
}

impl LolChampSelectChampSelectSession {
    pub fn new() -> LolChampSelectChampSelectSession {
        LolChampSelectChampSelectSession {
            actions: None,
            allow_battle_boost: None,
            allow_duplicate_picks: None,
            allow_locked_events: None,
            allow_rerolling: None,
            allow_skin_selection: None,
            bans: None,
            bench_champion_ids: None,
            bench_enabled: None,
            boostable_skin_count: None,
            chat_details: None,
            counter: None,
            entitled_feature_state: None,
            game_id: None,
            has_simultaneous_bans: None,
            has_simultaneous_picks: None,
            is_custom_game: None,
            is_spectating: None,
            local_player_cell_id: None,
            locked_event_index: None,
            my_team: None,
            rerolls_remaining: None,
            skip_champion_select: None,
            their_team: None,
            timer: None,
            trades: None,
        }
    }
}


