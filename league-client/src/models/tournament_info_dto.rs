/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TournamentInfoDto {
    #[serde(rename = "inviteePendingRosters", skip_serializing_if = "Option::is_none")]
    pub invitee_pending_rosters: Option<Vec<crate::models::PendingRosterDto>>,
    #[serde(rename = "pendingRoster", skip_serializing_if = "Option::is_none")]
    pub pending_roster: Option<crate::models::PendingRosterDto>,
    #[serde(rename = "roster", skip_serializing_if = "Option::is_none")]
    pub roster: Option<crate::models::RosterDto>,
    #[serde(rename = "subRosters", skip_serializing_if = "Option::is_none")]
    pub sub_rosters: Option<Vec<crate::models::RosterDto>>,
    #[serde(rename = "themeVp", skip_serializing_if = "Option::is_none")]
    pub theme_vp: Option<i32>,
    #[serde(rename = "tournament", skip_serializing_if = "Option::is_none")]
    pub tournament: Option<crate::models::TournamentDto>,
}

impl TournamentInfoDto {
    pub fn new() -> TournamentInfoDto {
        TournamentInfoDto {
            invitee_pending_rosters: None,
            pending_roster: None,
            roster: None,
            sub_rosters: None,
            theme_vp: None,
            tournament: None,
        }
    }
}


