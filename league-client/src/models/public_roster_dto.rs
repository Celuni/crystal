/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicRosterDto {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "logo", skip_serializing_if = "Option::is_none")]
    pub logo: Option<i32>,
    #[serde(rename = "logoColor", skip_serializing_if = "Option::is_none")]
    pub logo_color: Option<i32>,
    #[serde(rename = "memberIds", skip_serializing_if = "Option::is_none")]
    pub member_ids: Option<Vec<i64>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "phasesSubs", skip_serializing_if = "Option::is_none")]
    pub phases_subs: Option<Vec<crate::models::PublicPhaseSubsDto>>,
    #[serde(rename = "shortName", skip_serializing_if = "Option::is_none")]
    pub short_name: Option<String>,
    #[serde(rename = "tournamentId", skip_serializing_if = "Option::is_none")]
    pub tournament_id: Option<i64>,
}

impl PublicRosterDto {
    pub fn new() -> PublicRosterDto {
        PublicRosterDto {
            id: None,
            logo: None,
            logo_color: None,
            member_ids: None,
            name: None,
            phases_subs: None,
            short_name: None,
            tournament_id: None,
        }
    }
}


