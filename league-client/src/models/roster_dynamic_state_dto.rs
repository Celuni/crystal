/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RosterDynamicStateDto {
    #[serde(rename = "members", skip_serializing_if = "Option::is_none")]
    pub members: Option<Vec<crate::models::PhaseInMember>>,
    #[serde(rename = "phaseCheckinStates", skip_serializing_if = "Option::is_none")]
    pub phase_checkin_states: Option<Vec<i64>>,
    #[serde(rename = "phaseRosterSubs", skip_serializing_if = "Option::is_none")]
    pub phase_roster_subs: Option<Vec<crate::models::PhaseRosterSubDto>>,
    #[serde(rename = "rosterId", skip_serializing_if = "Option::is_none")]
    pub roster_id: Option<i64>,
    #[serde(rename = "subbedMemberIds", skip_serializing_if = "Option::is_none")]
    pub subbed_member_ids: Option<Vec<i64>>,
    #[serde(rename = "ticketOffers", skip_serializing_if = "Option::is_none")]
    pub ticket_offers: Option<Vec<crate::models::TicketOfferDto>>,
    #[serde(rename = "tournamentId", skip_serializing_if = "Option::is_none")]
    pub tournament_id: Option<i64>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i32>,
    #[serde(rename = "withdraw", skip_serializing_if = "Option::is_none")]
    pub withdraw: Option<crate::models::RosterWithdraw>,
}

impl RosterDynamicStateDto {
    pub fn new() -> RosterDynamicStateDto {
        RosterDynamicStateDto {
            members: None,
            phase_checkin_states: None,
            phase_roster_subs: None,
            roster_id: None,
            subbed_member_ids: None,
            ticket_offers: None,
            tournament_id: None,
            version: None,
            withdraw: None,
        }
    }
}


