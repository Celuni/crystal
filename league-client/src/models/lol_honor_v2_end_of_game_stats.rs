/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolHonorV2EndOfGameStats {
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<i64>,
    #[serde(rename = "championId", skip_serializing_if = "Option::is_none")]
    pub champion_id: Option<i32>,
    #[serde(rename = "difficulty", skip_serializing_if = "Option::is_none")]
    pub difficulty: Option<String>,
    #[serde(rename = "gameEndedInEarlySurrender", skip_serializing_if = "Option::is_none")]
    pub game_ended_in_early_surrender: Option<bool>,
    #[serde(rename = "gameId", skip_serializing_if = "Option::is_none")]
    pub game_id: Option<i64>,
    #[serde(rename = "gameLength", skip_serializing_if = "Option::is_none")]
    pub game_length: Option<i32>,
    #[serde(rename = "gameMode", skip_serializing_if = "Option::is_none")]
    pub game_mode: Option<String>,
    #[serde(rename = "gameMutators", skip_serializing_if = "Option::is_none")]
    pub game_mutators: Option<Vec<String>>,
    #[serde(rename = "gameType", skip_serializing_if = "Option::is_none")]
    pub game_type: Option<String>,
    #[serde(rename = "imbalancedTeamsNoPoints", skip_serializing_if = "Option::is_none")]
    pub imbalanced_teams_no_points: Option<bool>,
    #[serde(rename = "invalid", skip_serializing_if = "Option::is_none")]
    pub invalid: Option<bool>,
    #[serde(rename = "myTeamStatus", skip_serializing_if = "Option::is_none")]
    pub my_team_status: Option<String>,
    #[serde(rename = "queueType", skip_serializing_if = "Option::is_none")]
    pub queue_type: Option<String>,
    #[serde(rename = "ranked", skip_serializing_if = "Option::is_none")]
    pub ranked: Option<bool>,
    #[serde(rename = "reportGameId", skip_serializing_if = "Option::is_none")]
    pub report_game_id: Option<i64>,
    #[serde(rename = "summonerId", skip_serializing_if = "Option::is_none")]
    pub summoner_id: Option<i64>,
    #[serde(rename = "summonerName", skip_serializing_if = "Option::is_none")]
    pub summoner_name: Option<String>,
    #[serde(rename = "teams", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Vec<crate::models::LolHonorV2EndOfGameTeam>>,
}

impl LolHonorV2EndOfGameStats {
    pub fn new() -> LolHonorV2EndOfGameStats {
        LolHonorV2EndOfGameStats {
            account_id: None,
            champion_id: None,
            difficulty: None,
            game_ended_in_early_surrender: None,
            game_id: None,
            game_length: None,
            game_mode: None,
            game_mutators: None,
            game_type: None,
            imbalanced_teams_no_points: None,
            invalid: None,
            my_team_status: None,
            queue_type: None,
            ranked: None,
            report_game_id: None,
            summoner_id: None,
            summoner_name: None,
            teams: None,
        }
    }
}


