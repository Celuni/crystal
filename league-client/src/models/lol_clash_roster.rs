/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolClashRoster {
    #[serde(rename = "availableLogos", skip_serializing_if = "Option::is_none")]
    pub available_logos: Option<Vec<crate::models::RewardLogo>>,
    #[serde(rename = "captainSummonerId", skip_serializing_if = "Option::is_none")]
    pub captain_summoner_id: Option<i64>,
    #[serde(rename = "currentBracketWins", skip_serializing_if = "Option::is_none")]
    pub current_bracket_wins: Option<i32>,
    #[serde(rename = "highTierVariance", skip_serializing_if = "Option::is_none")]
    pub high_tier_variance: Option<bool>,
    #[serde(rename = "iconColorId", skip_serializing_if = "Option::is_none")]
    pub icon_color_id: Option<i32>,
    #[serde(rename = "iconId", skip_serializing_if = "Option::is_none")]
    pub icon_id: Option<i32>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "invitationId", skip_serializing_if = "Option::is_none")]
    pub invitation_id: Option<String>,
    #[serde(rename = "isActiveInCurrentPhase", skip_serializing_if = "Option::is_none")]
    pub is_active_in_current_phase: Option<bool>,
    #[serde(rename = "isClashBanned", skip_serializing_if = "Option::is_none")]
    pub is_clash_banned: Option<bool>,
    #[serde(rename = "isCurrentBracketComplete", skip_serializing_if = "Option::is_none")]
    pub is_current_bracket_complete: Option<bool>,
    #[serde(rename = "isEliminated", skip_serializing_if = "Option::is_none")]
    pub is_eliminated: Option<bool>,
    #[serde(rename = "isRegistered", skip_serializing_if = "Option::is_none")]
    pub is_registered: Option<bool>,
    #[serde(rename = "losses", skip_serializing_if = "Option::is_none")]
    pub losses: Option<i32>,
    #[serde(rename = "members", skip_serializing_if = "Option::is_none")]
    pub members: Option<Vec<crate::models::LolClashRosterMember>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "numCompletedPeriods", skip_serializing_if = "Option::is_none")]
    pub num_completed_periods: Option<i32>,
    #[serde(rename = "phaseInfos", skip_serializing_if = "Option::is_none")]
    pub phase_infos: Option<Vec<crate::models::LolClashRosterPhaseInfo>>,
    #[serde(rename = "points", skip_serializing_if = "Option::is_none")]
    pub points: Option<i32>,
    #[serde(rename = "shortName", skip_serializing_if = "Option::is_none")]
    pub short_name: Option<String>,
    #[serde(rename = "suggestedInvites", skip_serializing_if = "Option::is_none")]
    pub suggested_invites: Option<Vec<crate::models::LolClashSuggestedInvite>>,
    #[serde(rename = "tier", skip_serializing_if = "Option::is_none")]
    pub tier: Option<i32>,
    #[serde(rename = "tournamentId", skip_serializing_if = "Option::is_none")]
    pub tournament_id: Option<i64>,
    #[serde(rename = "wins", skip_serializing_if = "Option::is_none")]
    pub wins: Option<i32>,
    #[serde(rename = "withdraw", skip_serializing_if = "Option::is_none")]
    pub withdraw: Option<crate::models::RosterWithdraw>,
}

impl LolClashRoster {
    pub fn new() -> LolClashRoster {
        LolClashRoster {
            available_logos: None,
            captain_summoner_id: None,
            current_bracket_wins: None,
            high_tier_variance: None,
            icon_color_id: None,
            icon_id: None,
            id: None,
            invitation_id: None,
            is_active_in_current_phase: None,
            is_clash_banned: None,
            is_current_bracket_complete: None,
            is_eliminated: None,
            is_registered: None,
            losses: None,
            members: None,
            name: None,
            num_completed_periods: None,
            phase_infos: None,
            points: None,
            short_name: None,
            suggested_invites: None,
            tier: None,
            tournament_id: None,
            wins: None,
            withdraw: None,
        }
    }
}


