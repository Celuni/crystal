/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LcdsInvitationRequest {
    #[serde(rename = "gameMetaData", skip_serializing_if = "Option::is_none")]
    pub game_meta_data: Option<String>,
    #[serde(rename = "invitationId", skip_serializing_if = "Option::is_none")]
    pub invitation_id: Option<String>,
    #[serde(rename = "invitationState", skip_serializing_if = "Option::is_none")]
    pub invitation_state: Option<crate::models::LcdsInvitationState>,
    #[serde(rename = "invitePayload", skip_serializing_if = "Option::is_none")]
    pub invite_payload: Option<String>,
    #[serde(rename = "inviteType", skip_serializing_if = "Option::is_none")]
    pub invite_type: Option<String>,
    #[serde(rename = "inviter", skip_serializing_if = "Option::is_none")]
    pub inviter: Option<crate::models::LcdsInviter>,
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<crate::models::LcdsPlayer>,
}

impl LcdsInvitationRequest {
    pub fn new() -> LcdsInvitationRequest {
        LcdsInvitationRequest {
            game_meta_data: None,
            invitation_id: None,
            invitation_state: None,
            invite_payload: None,
            invite_type: None,
            inviter: None,
            owner: None,
        }
    }
}


