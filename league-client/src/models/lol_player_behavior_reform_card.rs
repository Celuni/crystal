/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolPlayerBehaviorReformCard {
    #[serde(rename = "chatLogs", skip_serializing_if = "Option::is_none")]
    pub chat_logs: Option<Vec<String>>,
    #[serde(rename = "gameIds", skip_serializing_if = "Option::is_none")]
    pub game_ids: Option<Vec<i64>>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "playerFacingMessage", skip_serializing_if = "Option::is_none")]
    pub player_facing_message: Option<String>,
    #[serde(rename = "punishmentLengthGames", skip_serializing_if = "Option::is_none")]
    pub punishment_length_games: Option<i64>,
    #[serde(rename = "punishmentLengthTime", skip_serializing_if = "Option::is_none")]
    pub punishment_length_time: Option<i64>,
    #[serde(rename = "punishmentType", skip_serializing_if = "Option::is_none")]
    pub punishment_type: Option<String>,
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    #[serde(rename = "restrictedChatGamesRemaining", skip_serializing_if = "Option::is_none")]
    pub restricted_chat_games_remaining: Option<i64>,
    #[serde(rename = "timeWhenPunishmentExpires", skip_serializing_if = "Option::is_none")]
    pub time_when_punishment_expires: Option<i64>,
}

impl LolPlayerBehaviorReformCard {
    pub fn new() -> LolPlayerBehaviorReformCard {
        LolPlayerBehaviorReformCard {
            chat_logs: None,
            game_ids: None,
            id: None,
            player_facing_message: None,
            punishment_length_games: None,
            punishment_length_time: None,
            punishment_type: None,
            reason: None,
            restricted_chat_games_remaining: None,
            time_when_punishment_expires: None,
        }
    }
}


