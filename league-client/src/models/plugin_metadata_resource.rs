/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PluginMetadataResource {
    #[serde(rename = "app", skip_serializing_if = "Option::is_none")]
    pub app: Option<String>,
    #[serde(rename = "feature", skip_serializing_if = "Option::is_none")]
    pub feature: Option<String>,
    #[serde(rename = "globalAssetBundles", skip_serializing_if = "Option::is_none")]
    pub global_asset_bundles: Option<Vec<String>>,
    #[serde(rename = "hasBundledAssets", skip_serializing_if = "Option::is_none")]
    pub has_bundled_assets: Option<bool>,
    #[serde(rename = "implements", skip_serializing_if = "Option::is_none")]
    pub implements: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "mock", skip_serializing_if = "Option::is_none")]
    pub mock: Option<String>,
    #[serde(rename = "perLocaleAssetBundles", skip_serializing_if = "Option::is_none")]
    pub per_locale_asset_bundles: Option<::std::collections::HashMap<String, ::std::collections::HashMap<String, serde_json::Value>>>,
    #[serde(rename = "subtype", skip_serializing_if = "Option::is_none")]
    pub subtype: Option<String>,
    #[serde(rename = "threading", skip_serializing_if = "Option::is_none")]
    pub threading: Option<crate::models::PluginThreadingModel>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
}

impl PluginMetadataResource {
    pub fn new() -> PluginMetadataResource {
        PluginMetadataResource {
            app: None,
            feature: None,
            global_asset_bundles: None,
            has_bundled_assets: None,
            implements: None,
            mock: None,
            per_locale_asset_bundles: None,
            subtype: None,
            threading: None,
            _type: None,
        }
    }
}


