/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolEndOfGameChampionMasteryUpdate {
    #[serde(rename = "bonusPointsGained", skip_serializing_if = "Option::is_none")]
    pub bonus_points_gained: Option<i64>,
    #[serde(rename = "championId", skip_serializing_if = "Option::is_none")]
    pub champion_id: Option<i32>,
    #[serde(rename = "gameId", skip_serializing_if = "Option::is_none")]
    pub game_id: Option<i64>,
    #[serde(rename = "grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<String>,
    #[serde(rename = "hasLeveledUp", skip_serializing_if = "Option::is_none")]
    pub has_leveled_up: Option<bool>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<i64>,
    #[serde(rename = "levelUpList", skip_serializing_if = "Option::is_none")]
    pub level_up_list: Option<Vec<crate::models::LolEndOfGameChampionMasteryMini>>,
    #[serde(rename = "memberGrades", skip_serializing_if = "Option::is_none")]
    pub member_grades: Option<Vec<crate::models::LolEndOfGameChampionMasteryGrade>>,
    #[serde(rename = "playerId", skip_serializing_if = "Option::is_none")]
    pub player_id: Option<i64>,
    #[serde(rename = "pointsBeforeGame", skip_serializing_if = "Option::is_none")]
    pub points_before_game: Option<i64>,
    #[serde(rename = "pointsGained", skip_serializing_if = "Option::is_none")]
    pub points_gained: Option<i64>,
    #[serde(rename = "pointsGainedIndividualContribution", skip_serializing_if = "Option::is_none")]
    pub points_gained_individual_contribution: Option<i64>,
    #[serde(rename = "pointsSinceLastLevelBeforeGame", skip_serializing_if = "Option::is_none")]
    pub points_since_last_level_before_game: Option<i64>,
    #[serde(rename = "pointsUntilNextLevelAfterGame", skip_serializing_if = "Option::is_none")]
    pub points_until_next_level_after_game: Option<i64>,
    #[serde(rename = "pointsUntilNextLevelBeforeGame", skip_serializing_if = "Option::is_none")]
    pub points_until_next_level_before_game: Option<i64>,
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<i64>,
}

impl LolEndOfGameChampionMasteryUpdate {
    pub fn new() -> LolEndOfGameChampionMasteryUpdate {
        LolEndOfGameChampionMasteryUpdate {
            bonus_points_gained: None,
            champion_id: None,
            game_id: None,
            grade: None,
            has_leveled_up: None,
            id: None,
            level: None,
            level_up_list: None,
            member_grades: None,
            player_id: None,
            points_before_game: None,
            points_gained: None,
            points_gained_individual_contribution: None,
            points_since_last_level_before_game: None,
            points_until_next_level_after_game: None,
            points_until_next_level_before_game: None,
            score: None,
        }
    }
}


