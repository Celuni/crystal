/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SeriesDto {
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i64>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "displayType", skip_serializing_if = "Option::is_none")]
    pub display_type: Option<String>,
    #[serde(rename = "eligibilityType", skip_serializing_if = "Option::is_none")]
    pub eligibility_type: Option<String>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<i64>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "internalName", skip_serializing_if = "Option::is_none")]
    pub internal_name: Option<String>,
    #[serde(rename = "lastUpdatedTimestamp", skip_serializing_if = "Option::is_none")]
    pub last_updated_timestamp: Option<i64>,
    #[serde(rename = "media", skip_serializing_if = "Option::is_none")]
    pub media: Option<crate::models::SeriesMediaDto>,
    #[serde(rename = "optInButtonText", skip_serializing_if = "Option::is_none")]
    pub opt_in_button_text: Option<String>,
    #[serde(rename = "optOutButtonText", skip_serializing_if = "Option::is_none")]
    pub opt_out_button_text: Option<String>,
    #[serde(rename = "parentInternalName", skip_serializing_if = "Option::is_none")]
    pub parent_internal_name: Option<String>,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<i64>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "viewed", skip_serializing_if = "Option::is_none")]
    pub viewed: Option<bool>,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<crate::models::AlertDto>>,
}

impl SeriesDto {
    pub fn new() -> SeriesDto {
        SeriesDto {
            created_date: None,
            description: None,
            display_type: None,
            eligibility_type: None,
            end_date: None,
            id: None,
            internal_name: None,
            last_updated_timestamp: None,
            media: None,
            opt_in_button_text: None,
            opt_out_button_text: None,
            parent_internal_name: None,
            start_date: None,
            status: None,
            tags: None,
            title: None,
            _type: None,
            viewed: None,
            warnings: None,
        }
    }
}


