/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LolClashTournament {
    #[serde(rename = "allowRosterCreation", skip_serializing_if = "Option::is_none")]
    pub allow_roster_creation: Option<bool>,
    #[serde(rename = "bracketFormationInitDelayMs", skip_serializing_if = "Option::is_none")]
    pub bracket_formation_init_delay_ms: Option<i64>,
    #[serde(rename = "bracketFormationIntervalMs", skip_serializing_if = "Option::is_none")]
    pub bracket_formation_interval_ms: Option<i64>,
    #[serde(rename = "bracketSize", skip_serializing_if = "Option::is_none")]
    pub bracket_size: Option<String>,
    #[serde(rename = "buyInOptions", skip_serializing_if = "Option::is_none")]
    pub buy_in_options: Option<Vec<i32>>,
    #[serde(rename = "buyInOptionsPremium", skip_serializing_if = "Option::is_none")]
    pub buy_in_options_premium: Option<Vec<i32>>,
    #[serde(rename = "endTimeMs", skip_serializing_if = "Option::is_none")]
    pub end_time_ms: Option<i64>,
    #[serde(rename = "entryFee", skip_serializing_if = "Option::is_none")]
    pub entry_fee: Option<i32>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "isHonorRestrictionEnabled", skip_serializing_if = "Option::is_none")]
    pub is_honor_restriction_enabled: Option<bool>,
    #[serde(rename = "isRankedRestrictionEnabled", skip_serializing_if = "Option::is_none")]
    pub is_ranked_restriction_enabled: Option<bool>,
    #[serde(rename = "isSmsRestrictionEnabled", skip_serializing_if = "Option::is_none")]
    pub is_sms_restriction_enabled: Option<bool>,
    #[serde(rename = "lastThemeOfSeason", skip_serializing_if = "Option::is_none")]
    pub last_theme_of_season: Option<bool>,
    #[serde(rename = "maxSubstitutes", skip_serializing_if = "Option::is_none")]
    pub max_substitutes: Option<i32>,
    #[serde(rename = "nameLocKey", skip_serializing_if = "Option::is_none")]
    pub name_loc_key: Option<String>,
    #[serde(rename = "nameLocKeySecondary", skip_serializing_if = "Option::is_none")]
    pub name_loc_key_secondary: Option<String>,
    #[serde(rename = "phases", skip_serializing_if = "Option::is_none")]
    pub phases: Option<Vec<crate::models::LolClashTournamentPhase>>,
    #[serde(rename = "resumeTime", skip_serializing_if = "Option::is_none")]
    pub resume_time: Option<i64>,
    #[serde(rename = "rewardConfig", skip_serializing_if = "Option::is_none")]
    pub reward_config: Option<Vec<crate::models::ClashRewardConfigClient>>,
    #[serde(rename = "rosterCreateDeadline", skip_serializing_if = "Option::is_none")]
    pub roster_create_deadline: Option<i64>,
    #[serde(rename = "rosterSize", skip_serializing_if = "Option::is_none")]
    pub roster_size: Option<i32>,
    #[serde(rename = "scoutingDurationMs", skip_serializing_if = "Option::is_none")]
    pub scouting_duration_ms: Option<i64>,
    #[serde(rename = "startTimeMs", skip_serializing_if = "Option::is_none")]
    pub start_time_ms: Option<i64>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::TournamentStatusEnum>,
    #[serde(rename = "themeId", skip_serializing_if = "Option::is_none")]
    pub theme_id: Option<i32>,
    #[serde(rename = "tierConfigs", skip_serializing_if = "Option::is_none")]
    pub tier_configs: Option<Vec<crate::models::TierConfig>>,
}

impl LolClashTournament {
    pub fn new() -> LolClashTournament {
        LolClashTournament {
            allow_roster_creation: None,
            bracket_formation_init_delay_ms: None,
            bracket_formation_interval_ms: None,
            bracket_size: None,
            buy_in_options: None,
            buy_in_options_premium: None,
            end_time_ms: None,
            entry_fee: None,
            id: None,
            is_honor_restriction_enabled: None,
            is_ranked_restriction_enabled: None,
            is_sms_restriction_enabled: None,
            last_theme_of_season: None,
            max_substitutes: None,
            name_loc_key: None,
            name_loc_key_secondary: None,
            phases: None,
            resume_time: None,
            reward_config: None,
            roster_create_deadline: None,
            roster_size: None,
            scouting_duration_ms: None,
            start_time_ms: None,
            status: None,
            theme_id: None,
            tier_configs: None,
        }
    }
}


