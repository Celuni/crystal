/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;
#[allow(unused_imports)]
use std::option::Option;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct PluginLolKrShutdownLawApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> PluginLolKrShutdownLawApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> PluginLolKrShutdownLawApiClient<C> {
        PluginLolKrShutdownLawApiClient {
            configuration,
        }
    }
}

pub trait PluginLolKrShutdownLawApi {
    fn get_lol_kr_shutdown_law_v1_custom_status(&self, ) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawQueueShutdownStatus, Error = Error<serde_json::Value>>>;
    fn get_lol_kr_shutdown_law_v1_disabled_queues(&self, ) -> Box<dyn Future<Item = Vec<i32>, Error = Error<serde_json::Value>>>;
    fn get_lol_kr_shutdown_law_v1_notification(&self, ) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawShutdownLawNotification, Error = Error<serde_json::Value>>>;
    fn get_lol_kr_shutdown_law_v1_queue_status_by_queue_id(&self, queue_id: i32) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawQueueShutdownStatus, Error = Error<serde_json::Value>>>;
    fn get_lol_kr_shutdown_law_v1_rating_screen(&self, ) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawRatingScreenInfo, Error = Error<serde_json::Value>>>;
    fn get_lol_kr_shutdown_law_v1_status(&self, ) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawAllQueueShutdownStatus, Error = Error<serde_json::Value>>>;
    fn post_lol_kr_shutdown_law_v1_rating_screen_acknowledge(&self, ) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
}

impl<C: hyper::client::Connect>PluginLolKrShutdownLawApi for PluginLolKrShutdownLawApiClient<C> {
    fn get_lol_kr_shutdown_law_v1_custom_status(&self, ) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawQueueShutdownStatus, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-kr-shutdown-law/v1/custom-status".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_kr_shutdown_law_v1_disabled_queues(&self, ) -> Box<dyn Future<Item = Vec<i32>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-kr-shutdown-law/v1/disabled-queues".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_kr_shutdown_law_v1_notification(&self, ) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawShutdownLawNotification, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-kr-shutdown-law/v1/notification".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_kr_shutdown_law_v1_queue_status_by_queue_id(&self, queue_id: i32) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawQueueShutdownStatus, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-kr-shutdown-law/v1/queue-status/{queue_id}".to_string())
        ;
        req = req.with_path_param("queue_id".to_string(), queue_id.to_string());

        req.execute(self.configuration.borrow())
    }

    fn get_lol_kr_shutdown_law_v1_rating_screen(&self, ) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawRatingScreenInfo, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-kr-shutdown-law/v1/rating-screen".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_kr_shutdown_law_v1_status(&self, ) -> Box<dyn Future<Item = crate::models::LolKrShutdownLawAllQueueShutdownStatus, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-kr-shutdown-law/v1/status".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn post_lol_kr_shutdown_law_v1_rating_screen_acknowledge(&self, ) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Post, "/lol-kr-shutdown-law/v1/rating-screen/acknowledge".to_string())
        ;
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

}
