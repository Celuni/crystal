/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;
#[allow(unused_imports)]
use std::option::Option;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct PluginLolGameClientChatApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> PluginLolGameClientChatApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> PluginLolGameClientChatApiClient<C> {
        PluginLolGameClientChatApiClient {
            configuration,
        }
    }
}

pub trait PluginLolGameClientChatApi {
    fn get_lol_game_client_chat_v1_buddies(&self, ) -> Box<dyn Future<Item = Vec<String>, Error = Error<serde_json::Value>>>;
    fn get_lol_game_client_chat_v1_ignored_summoners(&self, ) -> Box<dyn Future<Item = Vec<i64>, Error = Error<serde_json::Value>>>;
    fn get_lol_game_client_chat_v1_muted_summoners(&self, ) -> Box<dyn Future<Item = Vec<i64>, Error = Error<serde_json::Value>>>;
    fn post_lol_game_client_chat_v1_instant_messages(&self, summoner_name: &str, message: &str) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
    fn post_lol_game_client_chat_v1_party_messages(&self, message: &str) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
}

impl<C: hyper::client::Connect>PluginLolGameClientChatApi for PluginLolGameClientChatApiClient<C> {
    fn get_lol_game_client_chat_v1_buddies(&self, ) -> Box<dyn Future<Item = Vec<String>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-game-client-chat/v1/buddies".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_game_client_chat_v1_ignored_summoners(&self, ) -> Box<dyn Future<Item = Vec<i64>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-game-client-chat/v1/ignored-summoners".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_game_client_chat_v1_muted_summoners(&self, ) -> Box<dyn Future<Item = Vec<i64>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-game-client-chat/v1/muted-summoners".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn post_lol_game_client_chat_v1_instant_messages(&self, summoner_name: &str, message: &str) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Post, "/lol-game-client-chat/v1/instant-messages".to_string())
        ;
        req = req.with_query_param("summonerName".to_string(), summoner_name.to_string());
        req = req.with_query_param("message".to_string(), message.to_string());
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

    fn post_lol_game_client_chat_v1_party_messages(&self, message: &str) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Post, "/lol-game-client-chat/v1/party-messages".to_string())
        ;
        req = req.with_query_param("message".to_string(), message.to_string());
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

}
