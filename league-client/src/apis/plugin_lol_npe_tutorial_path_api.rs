/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;
#[allow(unused_imports)]
use std::option::Option;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct PluginLolNpeTutorialPathApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> PluginLolNpeTutorialPathApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> PluginLolNpeTutorialPathApiClient<C> {
        PluginLolNpeTutorialPathApiClient {
            configuration,
        }
    }
}

pub trait PluginLolNpeTutorialPathApi {
    fn get_lol_npe_tutorial_path_v1_rewards_champ(&self, ) -> Box<dyn Future<Item = crate::models::LolNpeTutorialPathCollectionsChampion, Error = Error<serde_json::Value>>>;
    fn get_lol_npe_tutorial_path_v1_settings(&self, ) -> Box<dyn Future<Item = crate::models::LolNpeTutorialPathAccountSettingsTutorial, Error = Error<serde_json::Value>>>;
    fn get_lol_npe_tutorial_path_v1_tutorials(&self, ) -> Box<dyn Future<Item = Vec<crate::models::LolNpeTutorialPathTutorial>, Error = Error<serde_json::Value>>>;
    fn patch_lol_npe_tutorial_path_v1_tutorials_init(&self, ) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
    fn put_lol_npe_tutorial_path_v1_settings(&self, settings: crate::models::LolNpeTutorialPathAccountSettingsTutorial) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
    fn put_lol_npe_tutorial_path_v1_tutorials_by_tutorial_id_view(&self, tutorial_id: &str) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
}

impl<C: hyper::client::Connect>PluginLolNpeTutorialPathApi for PluginLolNpeTutorialPathApiClient<C> {
    fn get_lol_npe_tutorial_path_v1_rewards_champ(&self, ) -> Box<dyn Future<Item = crate::models::LolNpeTutorialPathCollectionsChampion, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-npe-tutorial-path/v1/rewards/champ".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_npe_tutorial_path_v1_settings(&self, ) -> Box<dyn Future<Item = crate::models::LolNpeTutorialPathAccountSettingsTutorial, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-npe-tutorial-path/v1/settings".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_npe_tutorial_path_v1_tutorials(&self, ) -> Box<dyn Future<Item = Vec<crate::models::LolNpeTutorialPathTutorial>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-npe-tutorial-path/v1/tutorials".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn patch_lol_npe_tutorial_path_v1_tutorials_init(&self, ) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Patch, "/lol-npe-tutorial-path/v1/tutorials/init".to_string())
        ;
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

    fn put_lol_npe_tutorial_path_v1_settings(&self, settings: crate::models::LolNpeTutorialPathAccountSettingsTutorial) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Put, "/lol-npe-tutorial-path/v1/settings".to_string())
        ;
        req = req.with_body_param(settings);
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

    fn put_lol_npe_tutorial_path_v1_tutorials_by_tutorial_id_view(&self, tutorial_id: &str) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Put, "/lol-npe-tutorial-path/v1/tutorials/{tutorialId}/view".to_string())
        ;
        req = req.with_path_param("tutorialId".to_string(), tutorial_id.to_string());
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

}
