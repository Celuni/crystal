/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;
#[allow(unused_imports)]
use std::option::Option;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct PluginLolStatstonesApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> PluginLolStatstonesApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> PluginLolStatstonesApiClient<C> {
        PluginLolStatstonesApiClient {
            configuration,
        }
    }
}

pub trait PluginLolStatstonesApi {
    fn delete_lol_statstones_v1_eog_notifications(&self, ) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
    fn delete_lol_statstones_v1_eog_notifications_by_key(&self, key: i32) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
    fn delete_lol_statstones_v1_vignette_notifications(&self, ) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
    fn delete_lol_statstones_v1_vignette_notifications_by_key(&self, key: i32) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>>;
    fn get_lol_statstones_v1_eog_notifications(&self, ) -> Box<dyn Future<Item = Vec<serde_json::Value>, Error = Error<serde_json::Value>>>;
    fn get_lol_statstones_v1_featured_champion_statstones_by_champion_item_id(&self, champion_item_id: i32) -> Box<dyn Future<Item = Vec<crate::models::LolStatstonesStatstone>, Error = Error<serde_json::Value>>>;
    fn get_lol_statstones_v1_profile_summary_by_puuid(&self, puuid: &str) -> Box<dyn Future<Item = Vec<crate::models::LolStatstonesProfileStatstoneSummary>, Error = Error<serde_json::Value>>>;
    fn get_lol_statstones_v1_statstone_by_content_id_owned(&self, content_id: &str) -> Box<dyn Future<Item = bool, Error = Error<serde_json::Value>>>;
    fn get_lol_statstones_v1_statstones_enabled_queue_ids(&self, ) -> Box<dyn Future<Item = Vec<i32>, Error = Error<serde_json::Value>>>;
    fn get_lol_statstones_v1_vignette_notifications(&self, ) -> Box<dyn Future<Item = Vec<serde_json::Value>, Error = Error<serde_json::Value>>>;
    fn get_lol_statstones_v2_player_statstones_self_by_champion_item_id(&self, champion_item_id: i32) -> Box<dyn Future<Item = Vec<crate::models::LolStatstonesStatstoneSet>, Error = Error<serde_json::Value>>>;
    fn get_lol_statstones_v2_player_summary_self(&self, ) -> Box<dyn Future<Item = Vec<crate::models::LolStatstonesChampionStatstoneSummary>, Error = Error<serde_json::Value>>>;
    fn post_lol_statstones_v1_featured_champion_statstones_by_champion_item_id_by_statstone_id(&self, champion_item_id: i32, statstone_id: &str, featured_info: crate::models::LolStatstonesStatstoneFeaturedRequest) -> Box<dyn Future<Item = ::std::collections::HashMap<String, serde_json::Value>, Error = Error<serde_json::Value>>>;
}

impl<C: hyper::client::Connect>PluginLolStatstonesApi for PluginLolStatstonesApiClient<C> {
    fn delete_lol_statstones_v1_eog_notifications(&self, ) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Delete, "/lol-statstones/v1/eog-notifications".to_string())
        ;
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

    fn delete_lol_statstones_v1_eog_notifications_by_key(&self, key: i32) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Delete, "/lol-statstones/v1/eog-notifications/{key}".to_string())
        ;
        req = req.with_path_param("key".to_string(), key.to_string());
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

    fn delete_lol_statstones_v1_vignette_notifications(&self, ) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Delete, "/lol-statstones/v1/vignette-notifications".to_string())
        ;
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

    fn delete_lol_statstones_v1_vignette_notifications_by_key(&self, key: i32) -> Box<dyn Future<Item = (), Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Delete, "/lol-statstones/v1/vignette-notifications/{key}".to_string())
        ;
        req = req.with_path_param("key".to_string(), key.to_string());
        req = req.returns_nothing();

        req.execute(self.configuration.borrow())
    }

    fn get_lol_statstones_v1_eog_notifications(&self, ) -> Box<dyn Future<Item = Vec<serde_json::Value>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-statstones/v1/eog-notifications".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_statstones_v1_featured_champion_statstones_by_champion_item_id(&self, champion_item_id: i32) -> Box<dyn Future<Item = Vec<crate::models::LolStatstonesStatstone>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-statstones/v1/featured-champion-statstones/{championItemId}".to_string())
        ;
        req = req.with_path_param("championItemId".to_string(), champion_item_id.to_string());

        req.execute(self.configuration.borrow())
    }

    fn get_lol_statstones_v1_profile_summary_by_puuid(&self, puuid: &str) -> Box<dyn Future<Item = Vec<crate::models::LolStatstonesProfileStatstoneSummary>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-statstones/v1/profile-summary/{puuid}".to_string())
        ;
        req = req.with_path_param("puuid".to_string(), puuid.to_string());

        req.execute(self.configuration.borrow())
    }

    fn get_lol_statstones_v1_statstone_by_content_id_owned(&self, content_id: &str) -> Box<dyn Future<Item = bool, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-statstones/v1/statstone/{contentId}/owned".to_string())
        ;
        req = req.with_path_param("contentId".to_string(), content_id.to_string());

        req.execute(self.configuration.borrow())
    }

    fn get_lol_statstones_v1_statstones_enabled_queue_ids(&self, ) -> Box<dyn Future<Item = Vec<i32>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-statstones/v1/statstones-enabled-queue-ids".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_statstones_v1_vignette_notifications(&self, ) -> Box<dyn Future<Item = Vec<serde_json::Value>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-statstones/v1/vignette-notifications".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_statstones_v2_player_statstones_self_by_champion_item_id(&self, champion_item_id: i32) -> Box<dyn Future<Item = Vec<crate::models::LolStatstonesStatstoneSet>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-statstones/v2/player-statstones-self/{championItemId}".to_string())
        ;
        req = req.with_path_param("championItemId".to_string(), champion_item_id.to_string());

        req.execute(self.configuration.borrow())
    }

    fn get_lol_statstones_v2_player_summary_self(&self, ) -> Box<dyn Future<Item = Vec<crate::models::LolStatstonesChampionStatstoneSummary>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-statstones/v2/player-summary-self".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn post_lol_statstones_v1_featured_champion_statstones_by_champion_item_id_by_statstone_id(&self, champion_item_id: i32, statstone_id: &str, featured_info: crate::models::LolStatstonesStatstoneFeaturedRequest) -> Box<dyn Future<Item = ::std::collections::HashMap<String, serde_json::Value>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Post, "/lol-statstones/v1/featured-champion-statstones/{championItemId}/{statstoneId}".to_string())
        ;
        req = req.with_path_param("championItemId".to_string(), champion_item_id.to_string());
        req = req.with_path_param("statstoneId".to_string(), statstone_id.to_string());
        req = req.with_body_param(featured_info);

        req.execute(self.configuration.borrow())
    }

}
