/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;
#[allow(unused_imports)]
use std::option::Option;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct PluginLolPersonalizedOffersApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> PluginLolPersonalizedOffersApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> PluginLolPersonalizedOffersApiClient<C> {
        PluginLolPersonalizedOffersApiClient {
            configuration,
        }
    }
}

pub trait PluginLolPersonalizedOffersApi {
    fn get_lol_personalized_offers_v1_offers(&self, ) -> Box<dyn Future<Item = Vec<crate::models::LolPersonalizedOffersUiOffer>, Error = Error<serde_json::Value>>>;
    fn get_lol_personalized_offers_v1_status(&self, ) -> Box<dyn Future<Item = crate::models::LolPersonalizedOffersUiStatus, Error = Error<serde_json::Value>>>;
    fn get_lol_personalized_offers_v1_themed(&self, ) -> Box<dyn Future<Item = bool, Error = Error<serde_json::Value>>>;
    fn post_lol_personalized_offers_v1_offers_by_id_purchase(&self, id: &str) -> Box<dyn Future<Item = crate::models::LolPersonalizedOffersPurchaseResponse, Error = Error<serde_json::Value>>>;
    fn post_lol_personalized_offers_v1_offers_by_id_reveal(&self, id: &str) -> Box<dyn Future<Item = Vec<crate::models::LolPersonalizedOffersUiOffer>, Error = Error<serde_json::Value>>>;
    fn post_lol_personalized_offers_v1_offers_purchase(&self, offer_requests: crate::models::LolPersonalizedOffersOfferRequests) -> Box<dyn Future<Item = crate::models::LolPersonalizedOffersPurchaseResponse, Error = Error<serde_json::Value>>>;
    fn post_lol_personalized_offers_v1_offers_reveal(&self, offer_ids: crate::models::LolPersonalizedOffersOfferIds) -> Box<dyn Future<Item = Vec<crate::models::LolPersonalizedOffersUiOffer>, Error = Error<serde_json::Value>>>;
}

impl<C: hyper::client::Connect>PluginLolPersonalizedOffersApi for PluginLolPersonalizedOffersApiClient<C> {
    fn get_lol_personalized_offers_v1_offers(&self, ) -> Box<dyn Future<Item = Vec<crate::models::LolPersonalizedOffersUiOffer>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-personalized-offers/v1/offers".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_personalized_offers_v1_status(&self, ) -> Box<dyn Future<Item = crate::models::LolPersonalizedOffersUiStatus, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-personalized-offers/v1/status".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn get_lol_personalized_offers_v1_themed(&self, ) -> Box<dyn Future<Item = bool, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Get, "/lol-personalized-offers/v1/themed".to_string())
        ;

        req.execute(self.configuration.borrow())
    }

    fn post_lol_personalized_offers_v1_offers_by_id_purchase(&self, id: &str) -> Box<dyn Future<Item = crate::models::LolPersonalizedOffersPurchaseResponse, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Post, "/lol-personalized-offers/v1/offers/{id}/purchase".to_string())
        ;
        req = req.with_path_param("id".to_string(), id.to_string());

        req.execute(self.configuration.borrow())
    }

    fn post_lol_personalized_offers_v1_offers_by_id_reveal(&self, id: &str) -> Box<dyn Future<Item = Vec<crate::models::LolPersonalizedOffersUiOffer>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Post, "/lol-personalized-offers/v1/offers/{id}/reveal".to_string())
        ;
        req = req.with_path_param("id".to_string(), id.to_string());

        req.execute(self.configuration.borrow())
    }

    fn post_lol_personalized_offers_v1_offers_purchase(&self, offer_requests: crate::models::LolPersonalizedOffersOfferRequests) -> Box<dyn Future<Item = crate::models::LolPersonalizedOffersPurchaseResponse, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Post, "/lol-personalized-offers/v1/offers/purchase".to_string())
        ;
        req = req.with_body_param(offer_requests);

        req.execute(self.configuration.borrow())
    }

    fn post_lol_personalized_offers_v1_offers_reveal(&self, offer_ids: crate::models::LolPersonalizedOffersOfferIds) -> Box<dyn Future<Item = Vec<crate::models::LolPersonalizedOffersUiOffer>, Error = Error<serde_json::Value>>> {
        let mut req = __internal_request::Request::new(hyper::Method::Post, "/lol-personalized-offers/v1/offers/reveal".to_string())
        ;
        req = req.with_body_param(offer_ids);

        req.execute(self.configuration.borrow())
    }

}
