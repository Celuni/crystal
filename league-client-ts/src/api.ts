// tslint:disable
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ActiveBoostsLcdsStoreFulfillmentNotification
 */
export interface ActiveBoostsLcdsStoreFulfillmentNotification {
  /**
   *
   * @type {object}
   * @memberof ActiveBoostsLcdsStoreFulfillmentNotification
   */
  data?: object;
  /**
   *
   * @type {string}
   * @memberof ActiveBoostsLcdsStoreFulfillmentNotification
   */
  inventoryType?: string;
}
/**
 *
 * @export
 * @interface ActiveBoostsLcdsSummonerActiveBoostsDTO
 */
export interface ActiveBoostsLcdsSummonerActiveBoostsDTO {
  /**
   *
   * @type {number}
   * @memberof ActiveBoostsLcdsSummonerActiveBoostsDTO
   */
  ipBoostEndDate?: number;
  /**
   *
   * @type {number}
   * @memberof ActiveBoostsLcdsSummonerActiveBoostsDTO
   */
  ipBoostPerWinCount?: number;
  /**
   *
   * @type {number}
   * @memberof ActiveBoostsLcdsSummonerActiveBoostsDTO
   */
  ipLoyaltyBoost?: number;
  /**
   *
   * @type {number}
   * @memberof ActiveBoostsLcdsSummonerActiveBoostsDTO
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof ActiveBoostsLcdsSummonerActiveBoostsDTO
   */
  xpBoostEndDate?: number;
  /**
   *
   * @type {number}
   * @memberof ActiveBoostsLcdsSummonerActiveBoostsDTO
   */
  xpBoostPerWinCount?: number;
  /**
   *
   * @type {number}
   * @memberof ActiveBoostsLcdsSummonerActiveBoostsDTO
   */
  xpLoyaltyBoost?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum AggregationType {
  None = 'none',
  Sum = 'sum',
  Average = 'average',
}

/**
 *
 * @export
 * @interface AlertDTO
 */
export interface AlertDTO {
  /**
   *
   * @type {number}
   * @memberof AlertDTO
   */
  alertTime?: number;
}
/**
 *
 * @export
 * @interface AllPublicSummonerDataDTO
 */
export interface AllPublicSummonerDataDTO {
  /**
   *
   * @type {BasePublicSummonerDTO}
   * @memberof AllPublicSummonerDataDTO
   */
  summoner?: BasePublicSummonerDTO;
  /**
   *
   * @type {SummonerLevelAndPoints}
   * @memberof AllPublicSummonerDataDTO
   */
  summonerLevelAndPoints?: SummonerLevelAndPoints;
}
/**
 *
 * @export
 * @interface AllSummonerData
 */
export interface AllSummonerData {
  /**
   *
   * @type {PrivateSummonerDTO}
   * @memberof AllSummonerData
   */
  summoner?: PrivateSummonerDTO;
  /**
   *
   * @type {SummonerLevelAndPoints}
   * @memberof AllSummonerData
   */
  summonerLevelAndPoints?: SummonerLevelAndPoints;
}
/**
 *
 * @export
 * @interface BannedChampion
 */
export interface BannedChampion {
  /**
   *
   * @type {number}
   * @memberof BannedChampion
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof BannedChampion
   */
  pickTurn?: number;
  /**
   *
   * @type {number}
   * @memberof BannedChampion
   */
  teamId?: number;
}
/**
 *
 * @export
 * @interface BasePlayerDTO
 */
export interface BasePlayerDTO {
  /**
   *
   * @type {number}
   * @memberof BasePlayerDTO
   */
  code?: number;
  /**
   *
   * @type {MatchedPlayerDTO}
   * @memberof BasePlayerDTO
   */
  data?: MatchedPlayerDTO;
  /**
   *
   * @type {string}
   * @memberof BasePlayerDTO
   */
  message?: string;
}
/**
 *
 * @export
 * @interface BasePublicSummonerDTO
 */
export interface BasePublicSummonerDTO {
  /**
   *
   * @type {number}
   * @memberof BasePublicSummonerDTO
   */
  acctId?: number;
  /**
   *
   * @type {string}
   * @memberof BasePublicSummonerDTO
   */
  internalName?: string;
  /**
   *
   * @type {string}
   * @memberof BasePublicSummonerDTO
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof BasePublicSummonerDTO
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof BasePublicSummonerDTO
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof BasePublicSummonerDTO
   */
  sumId?: number;
}
/**
 * User Experience Settings Operating System Information
 * @export
 * @interface BasicOperatingSystemInfo
 */
export interface BasicOperatingSystemInfo {
  /**
   *
   * @type {string}
   * @memberof BasicOperatingSystemInfo
   */
  edition?: string;
  /**
   *
   * @type {string}
   * @memberof BasicOperatingSystemInfo
   */
  platform?: string;
  /**
   *
   * @type {string}
   * @memberof BasicOperatingSystemInfo
   */
  versionMajor?: string;
  /**
   *
   * @type {string}
   * @memberof BasicOperatingSystemInfo
   */
  versionMinor?: string;
}
/**
 * User Experience Settings System Information
 * @export
 * @interface BasicSystemInfo
 */
export interface BasicSystemInfo {
  /**
   *
   * @type {BasicOperatingSystemInfo}
   * @memberof BasicSystemInfo
   */
  operatingSystem?: BasicOperatingSystemInfo;
  /**
   *
   * @type {number}
   * @memberof BasicSystemInfo
   */
  physicalMemory?: number;
  /**
   *
   * @type {number}
   * @memberof BasicSystemInfo
   */
  physicalProcessorCores?: number;
  /**
   *
   * @type {number}
   * @memberof BasicSystemInfo
   */
  processorSpeed?: number;
}
/**
 * Represents a cancelled asynchronous operation.
 * @export
 * @interface BindingAsyncCancelEvent
 */
export interface BindingAsyncCancelEvent {
  /**
   * Asynchronous operation token
   * @type {number}
   * @memberof BindingAsyncCancelEvent
   */
  asyncToken?: number;
}
/**
 * Represents a failed asynchronous operation.
 * @export
 * @interface BindingAsyncFailureEvent
 */
export interface BindingAsyncFailureEvent {
  /**
   * Asynchronous operation token
   * @type {number}
   * @memberof BindingAsyncFailureEvent
   */
  asyncToken?: number;
  /**
   * Error message
   * @type {string}
   * @memberof BindingAsyncFailureEvent
   */
  error?: string;
}
/**
 * Possible states of an asynchronous operation.
 * @export
 * @enum {string}
 */
export enum BindingAsyncState {
  None = 'None',
  Running = 'Running',
  Cancelling = 'Cancelling',
  Cancelled = 'Cancelled',
  Succeeded = 'Succeeded',
  Failed = 'Failed',
}

/**
 * Represents the parameters of a call to a provided callback.
 * @export
 * @interface BindingCallbackEvent
 */
export interface BindingCallbackEvent {
  /**
   * ID of the callback being invoked
   * @type {number}
   * @memberof BindingCallbackEvent
   */
  id?: number;
  /**
   * Callback parameters
   * @type {Array<object>}
   * @memberof BindingCallbackEvent
   */
  parameters?: Array<object>;
}
/**
 * Describes the exposed native API.
 * @export
 * @interface BindingFullApiHelp
 */
export interface BindingFullApiHelp {
  /**
   *
   * @type {Array<BindingFullEventHelp>}
   * @memberof BindingFullApiHelp
   */
  events?: Array<BindingFullEventHelp>;
  /**
   *
   * @type {Array<BindingFullFunctionHelp>}
   * @memberof BindingFullApiHelp
   */
  functions?: Array<BindingFullFunctionHelp>;
  /**
   *
   * @type {Array<BindingFullTypeHelp>}
   * @memberof BindingFullApiHelp
   */
  types?: Array<BindingFullTypeHelp>;
}
/**
 * Describes a function parameter.
 * @export
 * @interface BindingFullArgumentHelp
 */
export interface BindingFullArgumentHelp {
  /**
   *
   * @type {string}
   * @memberof BindingFullArgumentHelp
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullArgumentHelp
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof BindingFullArgumentHelp
   */
  optional?: boolean;
  /**
   *
   * @type {BindingFullTypeIdentifier}
   * @memberof BindingFullArgumentHelp
   */
  type?: BindingFullTypeIdentifier;
}
/**
 * Describes an enumerator.
 * @export
 * @interface BindingFullEnumValueHelp
 */
export interface BindingFullEnumValueHelp {
  /**
   *
   * @type {string}
   * @memberof BindingFullEnumValueHelp
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullEnumValueHelp
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof BindingFullEnumValueHelp
   */
  value?: number;
}
/**
 * Describes an event.
 * @export
 * @interface BindingFullEventHelp
 */
export interface BindingFullEventHelp {
  /**
   *
   * @type {string}
   * @memberof BindingFullEventHelp
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullEventHelp
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullEventHelp
   */
  nameSpace?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof BindingFullEventHelp
   */
  tags?: Array<string>;
  /**
   *
   * @type {BindingFullTypeIdentifier}
   * @memberof BindingFullEventHelp
   */
  type?: BindingFullTypeIdentifier;
}
/**
 * Describes a member of a struct.
 * @export
 * @interface BindingFullFieldHelp
 */
export interface BindingFullFieldHelp {
  /**
   *
   * @type {string}
   * @memberof BindingFullFieldHelp
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullFieldHelp
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof BindingFullFieldHelp
   */
  offset?: number;
  /**
   *
   * @type {boolean}
   * @memberof BindingFullFieldHelp
   */
  optional?: boolean;
  /**
   *
   * @type {BindingFullTypeIdentifier}
   * @memberof BindingFullFieldHelp
   */
  type?: BindingFullTypeIdentifier;
}
/**
 * Describes a function.
 * @export
 * @interface BindingFullFunctionHelp
 */
export interface BindingFullFunctionHelp {
  /**
   *
   * @type {Array<BindingFullArgumentHelp>}
   * @memberof BindingFullFunctionHelp
   */
  arguments?: Array<BindingFullArgumentHelp>;
  /**
   *
   * @type {string}
   * @memberof BindingFullFunctionHelp
   */
  async?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullFunctionHelp
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullFunctionHelp
   */
  help?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullFunctionHelp
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullFunctionHelp
   */
  nameSpace?: string;
  /**
   *
   * @type {BindingFullTypeIdentifier}
   * @memberof BindingFullFunctionHelp
   */
  returns?: BindingFullTypeIdentifier;
  /**
   *
   * @type {Array<string>}
   * @memberof BindingFullFunctionHelp
   */
  tags?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof BindingFullFunctionHelp
   */
  threadSafe?: boolean;
}
/**
 * Describes a struct or enum type.
 * @export
 * @interface BindingFullTypeHelp
 */
export interface BindingFullTypeHelp {
  /**
   *
   * @type {string}
   * @memberof BindingFullTypeHelp
   */
  description?: string;
  /**
   *
   * @type {Array<BindingFullFieldHelp>}
   * @memberof BindingFullTypeHelp
   */
  fields?: Array<BindingFullFieldHelp>;
  /**
   *
   * @type {string}
   * @memberof BindingFullTypeHelp
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullTypeHelp
   */
  nameSpace?: string;
  /**
   *
   * @type {number}
   * @memberof BindingFullTypeHelp
   */
  size?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof BindingFullTypeHelp
   */
  tags?: Array<string>;
  /**
   *
   * @type {Array<BindingFullEnumValueHelp>}
   * @memberof BindingFullTypeHelp
   */
  values?: Array<BindingFullEnumValueHelp>;
}
/**
 * Describes the type of a value.
 * @export
 * @interface BindingFullTypeIdentifier
 */
export interface BindingFullTypeIdentifier {
  /**
   *
   * @type {string}
   * @memberof BindingFullTypeIdentifier
   */
  elementType?: string;
  /**
   *
   * @type {string}
   * @memberof BindingFullTypeIdentifier
   */
  type?: string;
}
/**
 * Represents generic data for an asynchronous event.
 * @export
 * @interface BindingGenericAsyncEvent
 */
export interface BindingGenericAsyncEvent {
  /**
   * Asynchronous operation token
   * @type {number}
   * @memberof BindingGenericAsyncEvent
   */
  asyncToken?: number;
  /**
   * Event data
   * @type {object}
   * @memberof BindingGenericAsyncEvent
   */
  data?: object;
}
/**
 * Represents generic data for an event.
 * @export
 * @interface BindingGenericEvent
 */
export interface BindingGenericEvent {
  /**
   * Event data
   * @type {object}
   * @memberof BindingGenericEvent
   */
  data?: object;
}
/**
 * Help format for binding functions and types.
 * @export
 * @enum {string}
 */
export enum BindingHelpFormat {
  Full = 'Full',
  Epytext = 'Epytext',
}

/**
 *
 * @export
 * @interface BoostTeamSkinRentalDTO
 */
export interface BoostTeamSkinRentalDTO {
  /**
   *
   * @type {Array<number>}
   * @memberof BoostTeamSkinRentalDTO
   */
  availableSkins?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof BoostTeamSkinRentalDTO
   */
  ipReward?: number;
  /**
   *
   * @type {number}
   * @memberof BoostTeamSkinRentalDTO
   */
  ipRewardForPurchaser?: number;
  /**
   *
   * @type {number}
   * @memberof BoostTeamSkinRentalDTO
   */
  price?: number;
  /**
   *
   * @type {string}
   * @memberof BoostTeamSkinRentalDTO
   */
  skinUnlockMode?: string;
  /**
   *
   * @type {string}
   * @memberof BoostTeamSkinRentalDTO
   */
  summonerName?: string;
  /**
   *
   * @type {boolean}
   * @memberof BoostTeamSkinRentalDTO
   */
  unlocked?: boolean;
}
/**
 *
 * @export
 * @interface Bracket
 */
export interface Bracket {
  /**
   *
   * @type {number}
   * @memberof Bracket
   */
  id?: number;
  /**
   *
   * @type {Array<BracketMatch>}
   * @memberof Bracket
   */
  matches?: Array<BracketMatch>;
  /**
   *
   * @type {number}
   * @memberof Bracket
   */
  phaseId?: number;
  /**
   *
   * @type {Array<BracketRoster>}
   * @memberof Bracket
   */
  rosters?: Array<BracketRoster>;
  /**
   *
   * @type {number}
   * @memberof Bracket
   */
  size?: number;
  /**
   *
   * @type {number}
   * @memberof Bracket
   */
  tournamentId?: number;
  /**
   *
   * @type {number}
   * @memberof Bracket
   */
  version?: number;
}
/**
 *
 * @export
 * @interface BracketMatch
 */
export interface BracketMatch {
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  failRosterStatus?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  forfeitRosterId?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  gameStartTime?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  highestPossiblePosition?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof BracketMatch
   */
  loserBracket?: boolean;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  lowestPossiblePosition?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  order?: number;
  /**
   *
   * @type {string}
   * @memberof BracketMatch
   */
  resultHistory?: string;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  rosterId1?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  rosterId2?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  round?: number;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  roundStartTime?: number;
  /**
   *
   * @type {ClientBracketMatchStatus}
   * @memberof BracketMatch
   */
  status?: ClientBracketMatchStatus;
  /**
   *
   * @type {number}
   * @memberof BracketMatch
   */
  winnerId?: number;
}
/**
 *
 * @export
 * @interface BracketRoster
 */
export interface BracketRoster {
  /**
   *
   * @type {number}
   * @memberof BracketRoster
   */
  logo?: number;
  /**
   *
   * @type {number}
   * @memberof BracketRoster
   */
  logoColor?: number;
  /**
   *
   * @type {string}
   * @memberof BracketRoster
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof BracketRoster
   */
  rosterId?: number;
  /**
   *
   * @type {string}
   * @memberof BracketRoster
   */
  shortName?: string;
}
/**
 *
 * @export
 * @interface BuildInfo
 */
export interface BuildInfo {
  /**
   *
   * @type {string}
   * @memberof BuildInfo
   */
  branch?: string;
  /**
   *
   * @type {string}
   * @memberof BuildInfo
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof BuildInfo
   */
  patchlineVisibleName?: string;
  /**
   *
   * @type {string}
   * @memberof BuildInfo
   */
  version?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum CapacityEnum {
  LOW = 'LOW',
  MEDIUM = 'MEDIUM',
  HIGH = 'HIGH',
  FULL = 'FULL',
}

/**
 *
 * @export
 * @interface ChampSelectLcdsGameDTO
 */
export interface ChampSelectLcdsGameDTO {
  /**
   *
   * @type {Array<BannedChampion>}
   * @memberof ChampSelectLcdsGameDTO
   */
  bannedChampions?: Array<BannedChampion>;
  /**
   *
   * @type {Array<string>}
   * @memberof ChampSelectLcdsGameDTO
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsGameDTO
   */
  gameState?: string;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsGameDTO
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsGameDTO
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsGameDTO
   */
  optimisticLock?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsGameDTO
   */
  pickTurn?: number;
  /**
   *
   * @type {Array<ChampSelectLcdsPlayerChampionSelectionDTO>}
   * @memberof ChampSelectLcdsGameDTO
   */
  playerChampionSelections?: Array<ChampSelectLcdsPlayerChampionSelectionDTO>;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsGameDTO
   */
  queueTypeName?: string;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsGameDTO
   */
  roomName?: string;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsGameDTO
   */
  roomPassword?: string;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsGameDTO
   */
  spectatorDelay?: number;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsGameDTO
   */
  statusOfParticipants?: string;
  /**
   *
   * @type {Array<object>}
   * @memberof ChampSelectLcdsGameDTO
   */
  teamOne?: Array<object>;
  /**
   *
   * @type {Array<object>}
   * @memberof ChampSelectLcdsGameDTO
   */
  teamTwo?: Array<object>;
}
/**
 *
 * @export
 * @interface ChampSelectLcdsGameTimerDTO
 */
export interface ChampSelectLcdsGameTimerDTO {
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsGameTimerDTO
   */
  currentGameState?: string;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsGameTimerDTO
   */
  remainingTimeInMillis?: number;
}
/**
 *
 * @export
 * @interface ChampSelectLcdsObfuscatedParticipant
 */
export interface ChampSelectLcdsObfuscatedParticipant {
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsObfuscatedParticipant
   */
  gameUniqueId?: number;
}
/**
 *
 * @export
 * @interface ChampSelectLcdsPlayerChampionSelectionDTO
 */
export interface ChampSelectLcdsPlayerChampionSelectionDTO {
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPlayerChampionSelectionDTO
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPlayerChampionSelectionDTO
   */
  selectedSkinIndex?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPlayerChampionSelectionDTO
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPlayerChampionSelectionDTO
   */
  spell2Id?: number;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsPlayerChampionSelectionDTO
   */
  summonerInternalName?: string;
}
/**
 *
 * @export
 * @interface ChampSelectLcdsPlayerParticipant
 */
export interface ChampSelectLcdsPlayerParticipant {
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPlayerParticipant
   */
  pickMode?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPlayerParticipant
   */
  pickTurn?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPlayerParticipant
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsPlayerParticipant
   */
  summonerInternalName?: string;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsPlayerParticipant
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface ChampSelectLcdsPointSummary
 */
export interface ChampSelectLcdsPointSummary {
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPointSummary
   */
  currentPoints?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPointSummary
   */
  maxRolls?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPointSummary
   */
  numberOfRolls?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPointSummary
   */
  pointsCostToRoll?: number;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsPointSummary
   */
  pointsToNextRoll?: number;
}
/**
 *
 * @export
 * @interface ChampSelectLcdsPotentialTradersDTO
 */
export interface ChampSelectLcdsPotentialTradersDTO {
  /**
   *
   * @type {Array<string>}
   * @memberof ChampSelectLcdsPotentialTradersDTO
   */
  potentialTraders?: Array<string>;
}
/**
 *
 * @export
 * @interface ChampSelectLcdsRollResult
 */
export interface ChampSelectLcdsRollResult {
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsRollResult
   */
  championId?: number;
  /**
   *
   * @type {ChampSelectLcdsPointSummary}
   * @memberof ChampSelectLcdsRollResult
   */
  pointSummary?: ChampSelectLcdsPointSummary;
}
/**
 *
 * @export
 * @interface ChampSelectLcdsTradeContractDTO
 */
export interface ChampSelectLcdsTradeContractDTO {
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsTradeContractDTO
   */
  requesterChampionId?: number;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsTradeContractDTO
   */
  requesterInternalSummonerName?: string;
  /**
   *
   * @type {number}
   * @memberof ChampSelectLcdsTradeContractDTO
   */
  responderChampionId?: number;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsTradeContractDTO
   */
  responderInternalSummonerName?: string;
  /**
   *
   * @type {string}
   * @memberof ChampSelectLcdsTradeContractDTO
   */
  state?: string;
}
/**
 *
 * @export
 * @interface ChampionMasteryPublicDTO
 */
export interface ChampionMasteryPublicDTO {
  /**
   *
   * @type {number}
   * @memberof ChampionMasteryPublicDTO
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof ChampionMasteryPublicDTO
   */
  championLevel?: number;
  /**
   *
   * @type {number}
   * @memberof ChampionMasteryPublicDTO
   */
  championPoints?: number;
}
/**
 *
 * @export
 * @interface ChampionScoutingDTO
 */
export interface ChampionScoutingDTO {
  /**
   *
   * @type {number}
   * @memberof ChampionScoutingDTO
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof ChampionScoutingDTO
   */
  gameCount?: number;
  /**
   *
   * @type {number}
   * @memberof ChampionScoutingDTO
   */
  kda?: number;
  /**
   *
   * @type {number}
   * @memberof ChampionScoutingDTO
   */
  winCount?: number;
}
/**
 *
 * @export
 * @interface ClashEventData
 */
export interface ClashEventData {
  /**
   *
   * @type {number}
   * @memberof ClashEventData
   */
  bracket?: number;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  earnedDate?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof ClashEventData
   */
  playerUUIDs?: Array<string>;
  /**
   *
   * @type {ClashRewardSpec}
   * @memberof ClashEventData
   */
  rewardSpec?: ClashRewardSpec;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  rewardType?: string;
  /**
   *
   * @type {number}
   * @memberof ClashEventData
   */
  rosterId?: number;
  /**
   *
   * @type {number}
   * @memberof ClashEventData
   */
  seasonId?: number;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  teamLogoChromaId?: string;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  teamLogoName?: string;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  teamName?: string;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  teamShortName?: string;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  theme?: string;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  tier?: string;
  /**
   *
   * @type {number}
   * @memberof ClashEventData
   */
  tournamentId?: number;
  /**
   *
   * @type {string}
   * @memberof ClashEventData
   */
  tournamentName?: string;
}
/**
 *
 * @export
 * @interface ClashOfflineNotification
 */
export interface ClashOfflineNotification {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof ClashOfflineNotification
   */
  metaData?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof ClashOfflineNotification
   */
  reason?: string;
  /**
   *
   * @type {number}
   * @memberof ClashOfflineNotification
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface ClashRewardConfigClient
 */
export interface ClashRewardConfigClient {
  /**
   *
   * @type {Array<ClashRewardConfigEntry>}
   * @memberof ClashRewardConfigClient
   */
  entries?: Array<ClashRewardConfigEntry>;
  /**
   *
   * @type {boolean}
   * @memberof ClashRewardConfigClient
   */
  grantToSub?: boolean;
  /**
   *
   * @type {Array<ClashRewardKeyType>}
   * @memberof ClashRewardConfigClient
   */
  keyDef?: Array<ClashRewardKeyType>;
  /**
   *
   * @type {string}
   * @memberof ClashRewardConfigClient
   */
  name?: string;
}
/**
 *
 * @export
 * @interface ClashRewardConfigEntry
 */
export interface ClashRewardConfigEntry {
  /**
   *
   * @type {string}
   * @memberof ClashRewardConfigEntry
   */
  key?: string;
  /**
   *
   * @type {Array<ClashRewardOutput>}
   * @memberof ClashRewardConfigEntry
   */
  vals?: Array<ClashRewardOutput>;
}
/**
 *
 * @export
 * @interface ClashRewardDefinition
 */
export interface ClashRewardDefinition {
  /**
   *
   * @type {ClashRewardSpec}
   * @memberof ClashRewardDefinition
   */
  rewardSpec?: ClashRewardSpec;
  /**
   *
   * @type {ClashRewardType}
   * @memberof ClashRewardDefinition
   */
  rewardType?: ClashRewardType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ClashRewardKeyType {
  TIER = 'TIER',
  CUP = 'CUP',
  TICKETCOUNT = 'TICKET_COUNT',
  TICKETTYPE = 'TICKET_TYPE',
  LOWESTPOSITION = 'LOWEST_POSITION',
  TOURNAMENTWINPOS = 'TOURNAMENT_WIN_POS',
  WINS = 'WINS',
  POINTS = 'POINTS',
  THEMEVP = 'THEME_VP',
  SEASONVP = 'SEASON_VP',
  SEASONFLAGCOUNT = 'SEASON_FLAG_COUNT',
  TOCSTATE = 'TOC_STATE',
}

/**
 *
 * @export
 * @interface ClashRewardOutput
 */
export interface ClashRewardOutput {
  /**
   *
   * @type {ClashRewardDefinition}
   * @memberof ClashRewardOutput
   */
  alternative?: ClashRewardDefinition;
  /**
   *
   * @type {ClashRewardTime}
   * @memberof ClashRewardOutput
   */
  grant?: ClashRewardTime;
  /**
   *
   * @type {ClashRewardDefinition}
   * @memberof ClashRewardOutput
   */
  primary?: ClashRewardDefinition;
  /**
   *
   * @type {ClashRewardTime}
   * @memberof ClashRewardOutput
   */
  show?: ClashRewardTime;
}
/**
 *
 * @export
 * @interface ClashRewardSpec
 */
export interface ClashRewardSpec {
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  bracket?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  cup?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  gem?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  level?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  pedestal?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  quantity?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  seasonId?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  theme?: string;
  /**
   *
   * @type {string}
   * @memberof ClashRewardSpec
   */
  tier?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ClashRewardTime {
  NONE = 'NONE',
  EOG = 'EOG',
  EOB = 'EOB',
  EOT = 'EOT',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum ClashRewardType {
  TROPHY = 'TROPHY',
  FLAG = 'FLAG',
  FRAME = 'FRAME',
  LOGO = 'LOGO',
  LOOT = 'LOOT',
  VP = 'VP',
  TOC = 'TOC',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum ClientBracketMatchStatus {
  UPCOMING = 'UPCOMING',
  STARTED = 'STARTED',
  COMPLETED = 'COMPLETED',
}

/**
 *
 * @export
 * @interface ClientConfigAuthenticatedConnection
 */
export interface ClientConfigAuthenticatedConnection {
  /**
   *
   * @type {string}
   * @memberof ClientConfigAuthenticatedConnection
   */
  authToken?: string;
  /**
   *
   * @type {number}
   * @memberof ClientConfigAuthenticatedConnection
   */
  connectionId?: number;
  /**
   *
   * @type {boolean}
   * @memberof ClientConfigAuthenticatedConnection
   */
  subscribed?: boolean;
}
/**
 *
 * @export
 * @interface ClientConfigBuildInfo
 */
export interface ClientConfigBuildInfo {
  /**
   *
   * @type {string}
   * @memberof ClientConfigBuildInfo
   */
  branch?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigBuildInfo
   */
  branchFull?: string;
  /**
   *
   * @type {number}
   * @memberof ClientConfigBuildInfo
   */
  codeBuildId?: number;
  /**
   *
   * @type {number}
   * @memberof ClientConfigBuildInfo
   */
  contentBuildId?: number;
  /**
   *
   * @type {string}
   * @memberof ClientConfigBuildInfo
   */
  gameBranch?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigBuildInfo
   */
  gameBranchFull?: string;
  /**
   *
   * @type {number}
   * @memberof ClientConfigBuildInfo
   */
  gameDataBuildId?: number;
  /**
   *
   * @type {string}
   * @memberof ClientConfigBuildInfo
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigBuildInfo
   */
  patchlineVisibleName?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigBuildInfo
   */
  version?: string;
}
/**
 *
 * @export
 * @interface ClientConfigClientConfig
 */
export interface ClientConfigClientConfig {
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof ClientConfigClientConfig
   */
  data?: { [key: string]: object };
  /**
   *
   * @type {ClientConfigConfigParams}
   * @memberof ClientConfigClientConfig
   */
  params?: ClientConfigConfigParams;
  /**
   *
   * @type {number}
   * @memberof ClientConfigClientConfig
   */
  updateTime?: number;
}
/**
 *
 * @export
 * @interface ClientConfigConfigNamespaceUpdate
 */
export interface ClientConfigConfigNamespaceUpdate {
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfigConfigNamespaceUpdate
   */
  player?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfigConfigNamespaceUpdate
   */
  _public?: Array<string>;
}
/**
 *
 * @export
 * @interface ClientConfigConfigParams
 */
export interface ClientConfigConfigParams {
  /**
   *
   * @type {string}
   * @memberof ClientConfigConfigParams
   */
  appName?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigConfigParams
   */
  namespace?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigConfigParams
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigConfigParams
   */
  region?: string;
  /**
   *
   * @type {ClientConfigConfigType}
   * @memberof ClientConfigConfigParams
   */
  type?: ClientConfigConfigType;
  /**
   *
   * @type {string}
   * @memberof ClientConfigConfigParams
   */
  version?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ClientConfigConfigReadinessEnum {
  NotReady = 'NotReady',
  Ready = 'Ready',
  Disabled = 'Disabled',
}

/**
 *
 * @export
 * @interface ClientConfigConfigStatus
 */
export interface ClientConfigConfigStatus {
  /**
   *
   * @type {ClientConfigConfigReadinessEnum}
   * @memberof ClientConfigConfigStatus
   */
  readiness?: ClientConfigConfigReadinessEnum;
  /**
   *
   * @type {number}
   * @memberof ClientConfigConfigStatus
   */
  updateId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ClientConfigConfigType {
  Public = 'public',
  Player = 'player',
}

/**
 *
 * @export
 * @interface ClientConfigDataPaths
 */
export interface ClientConfigDataPaths {
  /**
   *
   * @type {string}
   * @memberof ClientConfigDataPaths
   */
  configRoot?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigDataPaths
   */
  dataRoot?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigDataPaths
   */
  localSettingsPath?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigDataPaths
   */
  privateSettingsPath?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigDataPaths
   */
  userDataRoot?: string;
}
/**
 *
 * @export
 * @interface ClientConfigDepInjectorEntitlements
 */
export interface ClientConfigDepInjectorEntitlements {
  /**
   *
   * @type {string}
   * @memberof ClientConfigDepInjectorEntitlements
   */
  accessToken?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfigDepInjectorEntitlements
   */
  entitlements?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof ClientConfigDepInjectorEntitlements
   */
  issuer?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigDepInjectorEntitlements
   */
  subject?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigDepInjectorEntitlements
   */
  token?: string;
}
/**
 *
 * @export
 * @interface ClientConfigDepInjectorEntitlementsUpdate
 */
export interface ClientConfigDepInjectorEntitlementsUpdate {
  /**
   *
   * @type {ClientConfigDepInjectorEntitlements}
   * @memberof ClientConfigDepInjectorEntitlementsUpdate
   */
  EntitlementsTokenResource?: ClientConfigDepInjectorEntitlements;
  /**
   *
   * @type {ClientConfigDepInjectorEntitlementsUpdateType}
   * @memberof ClientConfigDepInjectorEntitlementsUpdate
   */
  EntitlementsUpdateType?: ClientConfigDepInjectorEntitlementsUpdateType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ClientConfigDepInjectorEntitlementsUpdateType {
  Create = 'Create',
  Update = 'Update',
  Delete = 'Delete',
}

/**
 *
 * @export
 * @interface ClientConfigEntitlements
 */
export interface ClientConfigEntitlements {
  /**
   *
   * @type {string}
   * @memberof ClientConfigEntitlements
   */
  accessToken?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfigEntitlements
   */
  entitlements?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof ClientConfigEntitlements
   */
  issuer?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigEntitlements
   */
  subject?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigEntitlements
   */
  token?: string;
}
/**
 *
 * @export
 * @interface ClientConfigEntitlementsUpdate
 */
export interface ClientConfigEntitlementsUpdate {
  /**
   *
   * @type {ClientConfigEntitlements}
   * @memberof ClientConfigEntitlementsUpdate
   */
  EntitlementsTokenResource?: ClientConfigEntitlements;
  /**
   *
   * @type {ClientConfigUpdateType}
   * @memberof ClientConfigEntitlementsUpdate
   */
  UpdateType?: ClientConfigUpdateType;
}
/**
 *
 * @export
 * @interface ClientConfigSession
 */
export interface ClientConfigSession {
  /**
   *
   * @type {Array<ClientConfigAuthenticatedConnection>}
   * @memberof ClientConfigSession
   */
  connections?: Array<ClientConfigAuthenticatedConnection>;
  /**
   *
   * @type {boolean}
   * @memberof ClientConfigSession
   */
  isInternal?: boolean;
  /**
   *
   * @type {string}
   * @memberof ClientConfigSession
   */
  patchlineId?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigSession
   */
  productId?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigSession
   */
  version?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ClientConfigUpdateType {
  Create = 'Create',
  Update = 'Update',
  Delete = 'Delete',
}

/**
 *
 * @export
 * @interface ClientDynamicConfig
 */
export interface ClientDynamicConfig {
  /**
   *
   * @type {boolean}
   * @memberof ClientDynamicConfig
   */
  compressed?: boolean;
  /**
   *
   * @type {string}
   * @memberof ClientDynamicConfig
   */
  configs?: string;
  /**
   *
   * @type {boolean}
   * @memberof ClientDynamicConfig
   */
  delta?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ClientRequestError {
  ALREADYINGAME = 'ALREADY_IN_GAME',
  ALREADYMEMBER = 'ALREADY_MEMBER',
  ALREADYINVITED = 'ALREADY_INVITED',
  ALREADYSUGGESTED = 'ALREADY_SUGGESTED',
  ALREADYDECLINEWITHDRAW = 'ALREADY_DECLINE_WITHDRAW',
  ALREADYVOTEWITHDRAW = 'ALREADY_VOTE_WITHDRAW',
  ALREADYINPHASE = 'ALREADY_IN_PHASE',
  CAPTAINNOTALLOWED = 'CAPTAIN_NOT_ALLOWED',
  CANNOTSUB = 'CANNOT_SUB',
  CLASHBANNED = 'CLASH_BANNED',
  CLASHBANNEDINVITEE = 'CLASH_BANNED_INVITEE',
  ELIGIBILITYSERVERERROR = 'ELIGIBILITY_SERVER_ERROR',
  FAILINVITE = 'FAIL_INVITE',
  FAILSUGGESTINVITE = 'FAIL_SUGGESTINVITE',
  HONORINELIGIBILITY = 'HONOR_INELIGIBILITY',
  LOGONOTALLOWED = 'LOGO_NOT_ALLOWED',
  LOGOCOLORNOTALLOWED = 'LOGOCOLOR_NOT_ALLOWED',
  INOTHERROSTER = 'IN_OTHER_ROSTER',
  INOTHERPENDINGROSTER = 'IN_OTHER_PENDINGROSTER',
  INOTHERPENDINGSUB = 'IN_OTHER_PENDINGSUB',
  INOTHERPHASEOFPERIOD = 'IN_OTHER_PHASE_OF_PERIOD',
  INACTIVEREGISTRATION = 'INACTIVE_REGISTRATION',
  INACTIVEPHASE = 'INACTIVE_PHASE',
  INTERNALERROR = 'INTERNAL_ERROR',
  INVALIDROSTER = 'INVALID_ROSTER',
  INVALIDBUYBACK = 'INVALID_BUY_BACK',
  INVALIDSUB = 'INVALID_SUB',
  INVALIDTOURNAMENT = 'INVALID_TOURNAMENT',
  INVALIDPHASE = 'INVALID_PHASE',
  INVALIDINVITEE = 'INVALID_INVITEE',
  INVALIDROSTERMEMBERSIZE = 'INVALID_ROSTER_MEMBER_SIZE',
  INVALIDPOSITION = 'INVALID_POSITION',
  INVALIDLOGO = 'INVALID_LOGO',
  INVALIDLOGOCOLOR = 'INVALID_LOGOCOLOR',
  INVALIDNAME = 'INVALID_NAME',
  INVALIDSHORTNAME = 'INVALID_SHORTNAME',
  INVALIDCHECKELIGIBILITYSIZE = 'INVALID_CHECKELIGIBILITY_SIZE',
  INVALIDBRACKET = 'INVALID_BRACKET',
  INVALIDMATCHID = 'INVALID_MATCHID',
  INVALIDPLAYER = 'INVALID_PLAYER',
  INVALIDTier = 'INVALID_Tier',
  INVALIDWITHDRAW = 'INVALID_WITHDRAW',
  INVALIDMATCHSTATUSFORGAMEEND = 'INVALID_MATCHSTATUS_FORGAMEEND',
  INVALIDREWARDCONFIGNAME = 'INVALID_REWARD_CONFIG_NAME',
  INVALIDSEASON = 'INVALID_SEASON',
  MAXINVITED = 'MAX_INVITED',
  MAXSUBED = 'MAX_SUBED',
  MAXROSTERFETCHSIZE = 'MAX_ROSTER_FETCHSIZE',
  MAXSUBSIZE = 'MAX_SUB_SIZE',
  SUBINOTHERROSTER = 'SUB_IN_OTHER_ROSTER',
  NOSAMEPLAYER = 'NO_SAME_PLAYER',
  NOAVAILABLEPHASE = 'NO_AVAILABLE_PHASE',
  NOTCAPTAIN = 'NOT_CAPTAIN',
  NOTMEMBER = 'NOT_MEMBER',
  NOTINVITEE = 'NOT_INVITEE',
  NOTSEEDINTOLEAGUE = 'NOT_SEED_INTO_LEAGUE',
  NOTENOUGHTICKETS = 'NOT_ENOUGH_TICKETS',
  NOTALLOWEDDELETETOURNAMENT = 'NOT_ALLOWED_DELETE_TOURNAMENT',
  NOTALLOWEDDELETETOURNAMENTREWARDCONFIG = 'NOT_ALLOWED_DELETE_TOURNAMENT_REWARD_CONFIG',
  NOPERMISSION = 'NO_PERMISSION',
  NOMORERECOMMEND = 'NO_MORE_RECOMMEND',
  OVERSUGGESTIONINVITE = 'OVER_SUGGESTION_INVITE',
  OVERINVITE = 'OVER_INVITE',
  PENDINGROSTERNOTREADY = 'PENDING_ROSTER_NOT_READY',
  PENDINGROSTERFULL = 'PENDING_ROSTER_FULL',
  PENDINGROSTERCLOSE = 'PENDING_ROSTER_CLOSE',
  PHASECANCELLED = 'PHASE_CANCELLED',
  PHASEFULL = 'PHASE_FULL',
  ROSTERELIMINATED = 'ROSTER_ELIMINATED',
  ROSTERDISBANDNOTALLOWED = 'ROSTER_DISBAND_NOT_ALLOWED',
  SUGGESTINVITEENOTEXIST = 'SUGGEST_INVITEE_NOT_EXIST',
  SMSNOTVERIFIED = 'SMS_NOT_VERIFIED',
  TICKETALREADYSET = 'TICKET_ALREADY_SET',
  TICKETOFFERNOTEXIST = 'TICKET_OFFER_NOT_EXIST',
  TICKETOFFERINVALIDCOUNT = 'TICKET_OFFER_INVALID_COUNT',
  TICKETNOTSET = 'TICKET_NOT_SET',
  VOICENOTAVAILABLE = 'VOICE_NOT_AVAILABLE',
  WITHDRAWNOTALLOWED = 'WITHDRAW_NOT_ALLOWED',
  WITHDRAWCANCELNOTALLOWED = 'WITHDRAW_CANCEL_NOT_ALLOWED',
  WITHDRAWLOCKOUT = 'WITHDRAW_LOCKOUT',
}

/**
 *
 * @export
 * @interface CollectionsLcdsChampionDTO
 */
export interface CollectionsLcdsChampionDTO {
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionDTO
   */
  active?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionDTO
   */
  botEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionDTO
   */
  championId?: number;
  /**
   *
   * @type {Array<CollectionsLcdsChampionSkinDTO>}
   * @memberof CollectionsLcdsChampionDTO
   */
  championSkins?: Array<CollectionsLcdsChampionSkinDTO>;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionDTO
   */
  endDate?: number;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionDTO
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionDTO
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionDTO
   */
  owned?: boolean;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionDTO
   */
  purchaseDate?: number;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionDTO
   */
  purchased?: number;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionDTO
   */
  rankedPlayEnabled?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof CollectionsLcdsChampionDTO
   */
  sources?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionDTO
   */
  winCountRemaining?: number;
}
/**
 *
 * @export
 * @interface CollectionsLcdsChampionSkinDTO
 */
export interface CollectionsLcdsChampionSkinDTO {
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  endDate?: number;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  lastSelected?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  owned?: boolean;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  purchaseDate?: number;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  skinId?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  sources?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  stillObtainable?: boolean;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsChampionSkinDTO
   */
  winCountRemaining?: number;
}
/**
 *
 * @export
 * @interface CollectionsLcdsClientDynamicConfigurationNotification
 */
export interface CollectionsLcdsClientDynamicConfigurationNotification {
  /**
   *
   * @type {string}
   * @memberof CollectionsLcdsClientDynamicConfigurationNotification
   */
  configs?: string;
  /**
   *
   * @type {boolean}
   * @memberof CollectionsLcdsClientDynamicConfigurationNotification
   */
  delta?: boolean;
}
/**
 *
 * @export
 * @interface CollectionsLcdsRentalUpdateNotification
 */
export interface CollectionsLcdsRentalUpdateNotification {
  /**
   *
   * @type {object}
   * @memberof CollectionsLcdsRentalUpdateNotification
   */
  data?: object;
  /**
   *
   * @type {string}
   * @memberof CollectionsLcdsRentalUpdateNotification
   */
  inventoryType?: string;
}
/**
 *
 * @export
 * @interface CollectionsLcdsSimpleMessage
 */
export interface CollectionsLcdsSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof CollectionsLcdsSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof CollectionsLcdsSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof CollectionsLcdsSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface CollectionsLcdsStoreFulfillmentNotification
 */
export interface CollectionsLcdsStoreFulfillmentNotification {
  /**
   *
   * @type {object}
   * @memberof CollectionsLcdsStoreFulfillmentNotification
   */
  data?: object;
  /**
   *
   * @type {string}
   * @memberof CollectionsLcdsStoreFulfillmentNotification
   */
  inventoryType?: string;
}
/**
 *
 * @export
 * @interface CollectionsLcdsSummonerIcon
 */
export interface CollectionsLcdsSummonerIcon {
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsSummonerIcon
   */
  iconId?: number;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsSummonerIcon
   */
  purchaseDate?: number;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsSummonerIcon
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface CollectionsLcdsSummonerIconInventoryDTO
 */
export interface CollectionsLcdsSummonerIconInventoryDTO {
  /**
   *
   * @type {string}
   * @memberof CollectionsLcdsSummonerIconInventoryDTO
   */
  dateString?: string;
  /**
   *
   * @type {Array<CollectionsLcdsSummonerIcon>}
   * @memberof CollectionsLcdsSummonerIconInventoryDTO
   */
  summonerIcons?: Array<CollectionsLcdsSummonerIcon>;
  /**
   *
   * @type {number}
   * @memberof CollectionsLcdsSummonerIconInventoryDTO
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface ContentItemIdentifier
 */
export interface ContentItemIdentifier {
  /**
   *
   * @type {string}
   * @memberof ContentItemIdentifier
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof ContentItemIdentifier
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface Cookie
 */
export interface Cookie {
  /**
   *
   * @type {string}
   * @memberof Cookie
   */
  domain?: string;
  /**
   *
   * @type {number}
   * @memberof Cookie
   */
  expires?: number;
  /**
   *
   * @type {boolean}
   * @memberof Cookie
   */
  httponly?: boolean;
  /**
   *
   * @type {string}
   * @memberof Cookie
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof Cookie
   */
  path?: string;
  /**
   *
   * @type {boolean}
   * @memberof Cookie
   */
  secure?: boolean;
  /**
   *
   * @type {string}
   * @memberof Cookie
   */
  url?: string;
  /**
   *
   * @type {string}
   * @memberof Cookie
   */
  value?: string;
}
/**
 *
 * @export
 * @interface CraftLootRefTransactionDTO
 */
export interface CraftLootRefTransactionDTO {
  /**
   *
   * @type {Array<LootNameRefId>}
   * @memberof CraftLootRefTransactionDTO
   */
  lootNameRefIds?: Array<LootNameRefId>;
  /**
   *
   * @type {string}
   * @memberof CraftLootRefTransactionDTO
   */
  recipeName?: string;
  /**
   *
   * @type {number}
   * @memberof CraftLootRefTransactionDTO
   */
  repeat?: number;
}
/**
 *
 * @export
 * @interface CrashReportingEnvironment
 */
export interface CrashReportingEnvironment {
  /**
   *
   * @type {string}
   * @memberof CrashReportingEnvironment
   */
  environment?: string;
  /**
   *
   * @type {string}
   * @memberof CrashReportingEnvironment
   */
  userId?: string;
  /**
   *
   * @type {string}
   * @memberof CrashReportingEnvironment
   */
  userName?: string;
}
/**
 *
 * @export
 * @interface DownloadUrlRequestV2
 */
export interface DownloadUrlRequestV2 {
  /**
   *
   * @type {number}
   * @memberof DownloadUrlRequestV2
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof DownloadUrlRequestV2
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface DownloadUrlResponseV2
 */
export interface DownloadUrlResponseV2 {
  /**
   *
   * @type {string}
   * @memberof DownloadUrlResponseV2
   */
  url?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ElevationAction {
  FixBrokenPermissions = 'FixBrokenPermissions',
}

/**
 *
 * @export
 * @interface ElevationRequest
 */
export interface ElevationRequest {
  /**
   *
   * @type {ElevationAction}
   * @memberof ElevationRequest
   */
  action?: ElevationAction;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsClientReportV1
 */
export interface EndOfGameLcdsClientReportV1 {
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsClientReportV1
   */
  comments?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsClientReportV1
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsClientReportV1
   */
  offenderSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsClientReportV1
   */
  offenses?: string;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsEndOfGameStats
 */
export interface EndOfGameLcdsEndOfGameStats {
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  basePoints?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  battleBoostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  boostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  boostXpEarned?: number;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  causedEarlySurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  coOpVsAiMinutesLeftToday?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  coOpVsAiMsecsUntilReset?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  completionBonusPoints?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  customMinutesLeftToday?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  customMsecsUntilReset?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  difficulty?: string;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  earlySurrenderAccomplice?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  elo?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  eloChange?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  experienceEarned?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  experienceTotal?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  firstWinBonus?: number;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  gameEndedInEarlySurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  gameLength?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  gameMode?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  gameType?: string;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  imbalancedTeamsNoPoints?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  invalid?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  ipEarned?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  ipTotal?: number;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  leveledUp?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  loyaltyBoostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  loyaltyBoostXpEarned?: number;
  /**
   *
   * @type {EndOfGameLcdsTeamInfo}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  myTeamInfo?: EndOfGameLcdsTeamInfo;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  myTeamStatus?: string;
  /**
   *
   * @type {Array<EndOfGameLcdsSpell>}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  newSpells?: Array<EndOfGameLcdsSpell>;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  odinBonusIp?: number;
  /**
   *
   * @type {EndOfGameLcdsTeamInfo}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  otherTeamInfo?: EndOfGameLcdsTeamInfo;
  /**
   *
   * @type {Array<EndOfGameLcdsPlayerParticipantStatsSummary>}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  otherTeamPlayerParticipantStats?: Array<
    EndOfGameLcdsPlayerParticipantStatsSummary
  >;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  partyRewardsBonusIpEarned?: number;
  /**
   *
   * @type {Array<EndOfGameLcdsPointsPenalty>}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  pointsPenalties?: Array<EndOfGameLcdsPointsPenalty>;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  previousLevel?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  previousXpTotal?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  queueBonusEarned?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  queueType?: string;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  ranked?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  reportGameId?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  roomName?: string;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  roomPassword?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  rpEarned?: number;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  sendStatsToTournamentProvider?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  skinId?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  skinIndex?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  talentPointsGained?: number;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  teamEarlySurrendered?: boolean;
  /**
   *
   * @type {Array<EndOfGameLcdsPlayerParticipantStatsSummary>}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  teamPlayerParticipantStats?: Array<
    EndOfGameLcdsPlayerParticipantStatsSummary
  >;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  timeUntilNextFirstWinBonus?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsEndOfGameStats
   */
  userId?: number;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsHarassmentReport
 */
export interface EndOfGameLcdsHarassmentReport {
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsHarassmentReport
   */
  comment?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsHarassmentReport
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsHarassmentReport
   */
  offense?: string;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsHarassmentReport
   */
  reportSource?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsHarassmentReport
   */
  reportedSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsHarassmentReport
   */
  reportingSummonerId?: number;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsPlayerParticipantStatsSummary
 */
export interface EndOfGameLcdsPlayerParticipantStatsSummary {
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  botPlayer?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  detectedTeamPosition?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  elo?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  eloChange?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  gameId?: number;
  /**
   *
   * @type {boolean}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  leaver?: boolean;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  leaves?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  level?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  losses?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  selectedPosition?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  skinIndex?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  skinName?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  spell2Id?: number;
  /**
   *
   * @type {Array<EndOfGameLcdsRawStatDTO>}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  statistics?: Array<EndOfGameLcdsRawStatDTO>;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  teamId?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  userId?: number;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPlayerParticipantStatsSummary
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsPointsPenalty
 */
export interface EndOfGameLcdsPointsPenalty {
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsPointsPenalty
   */
  penalty?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsPointsPenalty
   */
  type?: string;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsRawStatDTO
 */
export interface EndOfGameLcdsRawStatDTO {
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsRawStatDTO
   */
  statTypeName?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsRawStatDTO
   */
  value?: number;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsSpell
 */
export interface EndOfGameLcdsSpell {
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsSpell
   */
  spellId?: number;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsTeamId
 */
export interface EndOfGameLcdsTeamId {
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsTeamId
   */
  fullId?: string;
}
/**
 *
 * @export
 * @interface EndOfGameLcdsTeamInfo
 */
export interface EndOfGameLcdsTeamInfo {
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsTeamInfo
   */
  memberStatusString?: string;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsTeamInfo
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof EndOfGameLcdsTeamInfo
   */
  secondsUntilEligibleForDeletion?: number;
  /**
   *
   * @type {string}
   * @memberof EndOfGameLcdsTeamInfo
   */
  tag?: string;
  /**
   *
   * @type {EndOfGameLcdsTeamId}
   * @memberof EndOfGameLcdsTeamInfo
   */
  teamId?: EndOfGameLcdsTeamId;
}
/**
 *
 * @export
 * @interface EntitlementsToken
 */
export interface EntitlementsToken {
  /**
   *
   * @type {string}
   * @memberof EntitlementsToken
   */
  accessToken?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof EntitlementsToken
   */
  entitlements?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof EntitlementsToken
   */
  issuer?: string;
  /**
   *
   * @type {string}
   * @memberof EntitlementsToken
   */
  subject?: string;
  /**
   *
   * @type {string}
   * @memberof EntitlementsToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface EogLcdsGameDTO
 */
export interface EogLcdsGameDTO {
  /**
   *
   * @type {Array<BannedChampion>}
   * @memberof EogLcdsGameDTO
   */
  bannedChampions?: Array<BannedChampion>;
  /**
   *
   * @type {string}
   * @memberof EogLcdsGameDTO
   */
  gameState?: string;
  /**
   *
   * @type {number}
   * @memberof EogLcdsGameDTO
   */
  id?: number;
  /**
   *
   * @type {Array<PlayerParticipant>}
   * @memberof EogLcdsGameDTO
   */
  teamOne?: Array<PlayerParticipant>;
  /**
   *
   * @type {Array<PlayerParticipant>}
   * @memberof EogLcdsGameDTO
   */
  teamTwo?: Array<PlayerParticipant>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ExternalPluginsAvailability {
  NotAvailable = 'NotAvailable',
  Preparing = 'Preparing',
  Connected = 'Connected',
  Recovering = 'Recovering',
  Error = 'Error',
}

/**
 *
 * @export
 * @interface ExternalPluginsResource
 */
export interface ExternalPluginsResource {
  /**
   *
   * @type {string}
   * @memberof ExternalPluginsResource
   */
  errorString?: string;
  /**
   *
   * @type {ExternalPluginsAvailability}
   * @memberof ExternalPluginsResource
   */
  state?: ExternalPluginsAvailability;
}
/**
 *
 * @export
 * @interface FailedInvite
 */
export interface FailedInvite {
  /**
   *
   * @type {ClientRequestError}
   * @memberof FailedInvite
   */
  exception?: ClientRequestError;
  /**
   *
   * @type {number}
   * @memberof FailedInvite
   */
  playerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum GameQueuesLcdsAllowSpectators {
  NONE = 'NONE',
  LOBBYONLY = 'LOBBYONLY',
  DROPINONLY = 'DROPINONLY',
  ALL = 'ALL',
}

/**
 *
 * @export
 * @interface GameQueuesLcdsGameQueueConfig
 */
export interface GameQueuesLcdsGameQueueConfig {
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  blockedMinutesThreshold?: number;
  /**
   *
   * @type {boolean}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  botsCanSpawnOnBlueSide?: boolean;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  cacheName?: string;
  /**
   *
   * @type {boolean}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  disallowFreeChampions?: boolean;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  gameMode?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  gameTypeConfigId?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  lastToggledOffTime?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  lastToggledOnTime?: number;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  mapSelectionAlgorithm?: string;
  /**
   *
   * @type {GameQueuesLcdsMatchingThrottleConfig}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  matchingThrottleConfig?: GameQueuesLcdsMatchingThrottleConfig;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  maxLevel?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  maxSummonerLevelForFirstWinOfTheDay?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  maximumParticipantListSize?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  minLevel?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  minimumParticipantListSize?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  minimumQueueDodgeDelayTime?: number;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  numPlayersPerTeam?: number;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  pointsConfigKey?: string;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  queueBonusKey?: string;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  queueState?: string;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  queueStateString?: string;
  /**
   *
   * @type {boolean}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  randomizeTeamSizes?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  ranked?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  removalFromGameAllowed?: boolean;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  removalFromGameDelayMinutes?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  supportedMapIds?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  teamOnly?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  thresholdEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  thresholdSize?: number;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsGameQueueConfig
   */
  typeString?: string;
}
/**
 *
 * @export
 * @interface GameQueuesLcdsMatchingThrottleConfig
 */
export interface GameQueuesLcdsMatchingThrottleConfig {
  /**
   *
   * @type {string}
   * @memberof GameQueuesLcdsMatchingThrottleConfig
   */
  cacheName?: string;
  /**
   *
   * @type {number}
   * @memberof GameQueuesLcdsMatchingThrottleConfig
   */
  limit?: number;
}
/**
 *
 * @export
 * @interface GameflowLcdsGameDTO
 */
export interface GameflowLcdsGameDTO {
  /**
   *
   * @type {string}
   * @memberof GameflowLcdsGameDTO
   */
  gameMode?: string;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsGameDTO
   */
  gameQueueConfigId?: number;
  /**
   *
   * @type {string}
   * @memberof GameflowLcdsGameDTO
   */
  gameState?: string;
  /**
   *
   * @type {string}
   * @memberof GameflowLcdsGameDTO
   */
  gameType?: string;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsGameDTO
   */
  gameTypeConfigId?: number;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsGameDTO
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsGameDTO
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsGameDTO
   */
  maxNumPlayers?: number;
  /**
   *
   * @type {Array<object>}
   * @memberof GameflowLcdsGameDTO
   */
  playerChampionSelections?: Array<object>;
  /**
   *
   * @type {string}
   * @memberof GameflowLcdsGameDTO
   */
  queueTypeName?: string;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsGameDTO
   */
  spectatorDelay?: number;
  /**
   *
   * @type {Array<object>}
   * @memberof GameflowLcdsGameDTO
   */
  teamOne?: Array<object>;
  /**
   *
   * @type {Array<object>}
   * @memberof GameflowLcdsGameDTO
   */
  teamTwo?: Array<object>;
}
/**
 *
 * @export
 * @interface GameflowLcdsPlayerCredentialsDto
 */
export interface GameflowLcdsPlayerCredentialsDto {
  /**
   *
   * @type {string}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  encryptionKey?: string;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  gameId?: number;
  /**
   *
   * @type {boolean}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  observer?: boolean;
  /**
   *
   * @type {string}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  observerEncryptionKey?: string;
  /**
   *
   * @type {string}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  observerServerIp?: string;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  observerServerPort?: number;
  /**
   *
   * @type {string}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  serverIp?: string;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  serverPort?: number;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsPlayerCredentialsDto
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface GameflowLcdsReconnectInfoDto
 */
export interface GameflowLcdsReconnectInfoDto {
  /**
   *
   * @type {GameflowLcdsGameDTO}
   * @memberof GameflowLcdsReconnectInfoDto
   */
  game?: GameflowLcdsGameDTO;
  /**
   *
   * @type {GameflowLcdsPlayerCredentialsDto}
   * @memberof GameflowLcdsReconnectInfoDto
   */
  playerCredentials?: GameflowLcdsPlayerCredentialsDto;
  /**
   *
   * @type {number}
   * @memberof GameflowLcdsReconnectInfoDto
   */
  reconnectDelay?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatAudioPropertiesResource
 */
export interface GcloudVoiceChatAudioPropertiesResource {
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  fastEnergyMeter?: number;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  isLoopbackEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  isMicActive?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  isSpeakerActive?: boolean;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  micEnergy?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  micVolume?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  noiseFloorMeter?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  speakerEnergy?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  speakerVolume?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatAudioPropertiesResource
   */
  speechThresholdMeter?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatCallStatsResource
 */
export interface GcloudVoiceChatCallStatsResource {
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  callId?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  captureDeviceConsecutivelyReadCount?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  codecName?: string;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  currentBars?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  currentOpusBandwidth?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  currentOpusBitRate?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  currentOpusComplexity?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  currentOpusMaxPacketSize?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  currentOpusVbrMode?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  incomingDiscarded?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  incomingOutOfTime?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  incomingPacketloss?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  incomingReceived?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  lastLatencyMeasured?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  latencyMeasurementCount?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  latencyPacketsDropped?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  latencyPacketsLost?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  latencyPacketsMalformed?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  latencyPacketsNegativeLatency?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  latencyPacketsSent?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  latencySum?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  maxLatency?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  minLatency?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  outgoingSent?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  plcOn?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  plcSyntheticFrames?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  rFactor?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  renderDeviceErrors?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  renderDeviceOverruns?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  renderDeviceUnderruns?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  sampleIntervalBegin?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCallStatsResource
   */
  sampleIntervalEnd?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatCodecSettingsResource
 */
export interface GcloudVoiceChatCodecSettingsResource {
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCodecSettingsResource
   */
  codecBandwidth?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCodecSettingsResource
   */
  codecBitrate?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCodecSettingsResource
   */
  codecComplexity?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatCodecSettingsResource
   */
  codecVbrMode?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatConfigResource
 */
export interface GcloudVoiceChatConfigResource {
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatConfigResource
   */
  accessTokenUri?: string;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatConfigResource
   */
  authTokenUri?: string;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatConfigResource
   */
  jwt2gvtUrl?: string;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatConfigResource
   */
  logLevel?: number;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatConfigResource
   */
  logLevelName?: string;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatConfigResource
   */
  logsPath?: string;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatConfigResource
   */
  provider?: string;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatConfigResource
   */
  useExternalAuth?: boolean;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatConfigResource
   */
  voiceDomain?: string;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatConfigResource
   */
  voiceServerUri?: string;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatDeviceResource
 */
export interface GcloudVoiceChatDeviceResource {
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatDeviceResource
   */
  handle?: string;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatDeviceResource
   */
  is_current_device?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatDeviceResource
   */
  is_default?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatDeviceResource
   */
  is_effective_device?: boolean;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatDeviceResource
   */
  name?: string;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatParticipantResource
 */
export interface GcloudVoiceChatParticipantResource {
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatParticipantResource
   */
  energy?: number;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatParticipantResource
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatParticipantResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatParticipantResource
   */
  isSpeaking?: boolean;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatParticipantResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatParticipantResource
   */
  speakingTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatParticipantResource
   */
  uri?: string;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatParticipantResource
   */
  volume?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatPushToTalkResource
 */
export interface GcloudVoiceChatPushToTalkResource {
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatPushToTalkResource
   */
  pttEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatPushToTalkResource
   */
  pttKeyBinding?: string;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatRsoAuthorizationResource
 */
export interface GcloudVoiceChatRsoAuthorizationResource {
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatRsoAuthorizationResource
   */
  currentAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatRsoAuthorizationResource
   */
  currentPlatformId?: string;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatRsoAuthorizationResource
   */
  subject?: string;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatSessionResource
 */
export interface GcloudVoiceChatSessionResource {
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatSessionResource
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatSessionResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatSessionResource
   */
  isTransmitEnabled?: boolean;
  /**
   *
   * @type {Array<GcloudVoiceChatParticipantResource>}
   * @memberof GcloudVoiceChatSessionResource
   */
  participants?: Array<GcloudVoiceChatParticipantResource>;
  /**
   *
   * @type {GcloudVoiceChatSessionStatus}
   * @memberof GcloudVoiceChatSessionResource
   */
  status?: GcloudVoiceChatSessionStatus;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatSessionResource
   */
  volume?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum GcloudVoiceChatSessionStatus {
  Active = 'active',
  OnHold = 'onHold',
}

/**
 *
 * @export
 * @interface GcloudVoiceChatSettingsResource
 */
export interface GcloudVoiceChatSettingsResource {
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatSettingsResource
   */
  currentCaptureDeviceHandle?: string;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatSettingsResource
   */
  currentRenderDeviceHandle?: string;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatSettingsResource
   */
  localMicMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatSettingsResource
   */
  loopbackEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatSettingsResource
   */
  micLevel?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatSettingsResource
   */
  speakerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatSettingsResource
   */
  vadHangoverTime?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatSettingsResource
   */
  vadSensitivity?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatStateResource
 */
export interface GcloudVoiceChatStateResource {
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatStateResource
   */
  connected?: boolean;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatUpdateCodecSettingsResource
 */
export interface GcloudVoiceChatUpdateCodecSettingsResource {
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateCodecSettingsResource
   */
  codecBandwidth?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateCodecSettingsResource
   */
  codecBitrate?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateCodecSettingsResource
   */
  codecComplexity?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateCodecSettingsResource
   */
  codecVbrMode?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatUpdateParticipantResource
 */
export interface GcloudVoiceChatUpdateParticipantResource {
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatUpdateParticipantResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateParticipantResource
   */
  volume?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatUpdateSettingsResource
 */
export interface GcloudVoiceChatUpdateSettingsResource {
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatUpdateSettingsResource
   */
  currentCaptureDeviceHandle?: string;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatUpdateSettingsResource
   */
  currentRenderDeviceHandle?: string;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatUpdateSettingsResource
   */
  localMicMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GcloudVoiceChatUpdateSettingsResource
   */
  loopbackEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateSettingsResource
   */
  micLevel?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateSettingsResource
   */
  speakerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateSettingsResource
   */
  vadHangoverTime?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatUpdateSettingsResource
   */
  vadSensitivity?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatVoiceErrorCounterResource
 */
export interface GcloudVoiceChatVoiceErrorCounterResource {
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatVoiceErrorCounterResource
   */
  count?: number;
  /**
   *
   * @type {GcloudVoiceChatVoiceErrorResource}
   * @memberof GcloudVoiceChatVoiceErrorCounterResource
   */
  error?: GcloudVoiceChatVoiceErrorResource;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatVoiceErrorCounterResource
   */
  timeOfLastError?: number;
}
/**
 *
 * @export
 * @interface GcloudVoiceChatVoiceErrorResource
 */
export interface GcloudVoiceChatVoiceErrorResource {
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatVoiceErrorResource
   */
  errorString?: string;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatVoiceErrorResource
   */
  responseType?: number;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatVoiceErrorResource
   */
  responseTypeString?: string;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatVoiceErrorResource
   */
  returnCode?: number;
  /**
   *
   * @type {number}
   * @memberof GcloudVoiceChatVoiceErrorResource
   */
  statusCode?: number;
  /**
   *
   * @type {string}
   * @memberof GcloudVoiceChatVoiceErrorResource
   */
  statusString?: string;
}
/**
 *
 * @export
 * @interface IdsDTO
 */
export interface IdsDTO {
  /**
   *
   * @type {Array<string>}
   * @memberof IdsDTO
   */
  missionIds?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof IdsDTO
   */
  seriesIds?: Array<string>;
}
/**
 *
 * @export
 * @interface LCDSBroadcastNotification
 */
export interface LCDSBroadcastNotification {
  /**
   *
   * @type {Array<LolServiceStatusBroadcastMessage>}
   * @memberof LCDSBroadcastNotification
   */
  broadcastMessages?: Array<LolServiceStatusBroadcastMessage>;
}
/**
 *
 * @export
 * @interface LCDSChampionReward
 */
export interface LCDSChampionReward {
  /**
   *
   * @type {number}
   * @memberof LCDSChampionReward
   */
  championId?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LCDSChampionReward
   */
  skins?: Array<number>;
}
/**
 *
 * @export
 * @interface LCDSGlobalRewards
 */
export interface LCDSGlobalRewards {
  /**
   *
   * @type {boolean}
   * @memberof LCDSGlobalRewards
   */
  allChampions?: boolean;
}
/**
 *
 * @export
 * @interface LCDSLoyaltyRewards
 */
export interface LCDSLoyaltyRewards {
  /**
   *
   * @type {Array<LCDSChampionReward>}
   * @memberof LCDSLoyaltyRewards
   */
  champions?: Array<LCDSChampionReward>;
  /**
   *
   * @type {LCDSGlobalRewards}
   * @memberof LCDSLoyaltyRewards
   */
  global?: LCDSGlobalRewards;
  /**
   *
   * @type {number}
   * @memberof LCDSLoyaltyRewards
   */
  ipBoost?: number;
  /**
   *
   * @type {number}
   * @memberof LCDSLoyaltyRewards
   */
  xpBoost?: number;
}
/**
 *
 * @export
 * @interface LCDSLoyaltyStateChangeNotification
 */
export interface LCDSLoyaltyStateChangeNotification {
  /**
   *
   * @type {number}
   * @memberof LCDSLoyaltyStateChangeNotification
   */
  accountId?: number;
  /**
   *
   * @type {LCDSLoyaltyStateChangeNotificationCategory}
   * @memberof LCDSLoyaltyStateChangeNotification
   */
  notificationCategory?: LCDSLoyaltyStateChangeNotificationCategory;
  /**
   *
   * @type {LCDSLoyaltyRewards}
   * @memberof LCDSLoyaltyStateChangeNotification
   */
  rewards?: LCDSLoyaltyRewards;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LCDSLoyaltyStateChangeNotificationCategory {
  Legacy = 'legacy',
  Grant = 'grant',
  Expiry = 'expiry',
  Change = 'change',
  Revoke = 'revoke',
  Disabled = 'disabled',
}

/**
 *
 * @export
 * @interface LCDSPlayerMessagingSimpleMessage
 */
export interface LCDSPlayerMessagingSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LCDSPlayerMessagingSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LCDSPlayerMessagingSimpleMessage
   */
  bodyCode?: string;
  /**
   *
   * @type {string}
   * @memberof LCDSPlayerMessagingSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LCDSPlayerMessagingSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LCDSPlayerMessagingSimpleMessage
   */
  titleCode?: string;
  /**
   *
   * @type {string}
   * @memberof LCDSPlayerMessagingSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LCDSPlayerMessagingSimpleMessageResponse
 */
export interface LCDSPlayerMessagingSimpleMessageResponse {
  /**
   *
   * @type {number}
   * @memberof LCDSPlayerMessagingSimpleMessageResponse
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LCDSPlayerMessagingSimpleMessageResponse
   */
  command?: string;
  /**
   *
   * @type {string}
   * @memberof LCDSPlayerMessagingSimpleMessageResponse
   */
  msgId?: string;
}
/**
 *
 * @export
 * @interface LcdsBotParticipant
 */
export interface LcdsBotParticipant {
  /**
   *
   * @type {number}
   * @memberof LcdsBotParticipant
   */
  botSkillLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsBotParticipant
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsBotParticipant
   */
  summonerInternalName?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsBotParticipant
   */
  summonerName?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsBotParticipant
   */
  teamId?: string;
}
/**
 *
 * @export
 * @interface LcdsFailedJoinPlayer
 */
export interface LcdsFailedJoinPlayer {
  /**
   *
   * @type {string}
   * @memberof LcdsFailedJoinPlayer
   */
  reasonFailed?: string;
  /**
   *
   * @type {LcdsSummoner}
   * @memberof LcdsFailedJoinPlayer
   */
  summoner?: LcdsSummoner;
}
/**
 *
 * @export
 * @interface LcdsGameDTO
 */
export interface LcdsGameDTO {
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  gameMode?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LcdsGameDTO
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  gameState?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  gameType?: string;
  /**
   *
   * @type {number}
   * @memberof LcdsGameDTO
   */
  gameTypeConfigId?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsGameDTO
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsGameDTO
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsGameDTO
   */
  maxNumPlayers?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  name?: string;
  /**
   *
   * @type {Array<LcdsPlayerParticipant>}
   * @memberof LcdsGameDTO
   */
  observers?: Array<LcdsPlayerParticipant>;
  /**
   *
   * @type {number}
   * @memberof LcdsGameDTO
   */
  optimisticLock?: number;
  /**
   *
   * @type {LcdsPlayerParticipant}
   * @memberof LcdsGameDTO
   */
  ownerSummary?: LcdsPlayerParticipant;
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  passbackDataPacket?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  passbackUrl?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LcdsGameDTO
   */
  practiceGameRewardsDisabledReasons?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  roomName?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  roomPassword?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsGameDTO
   */
  spectatorsAllowed?: string;
  /**
   *
   * @type {Array<LcdsPlayerParticipant>}
   * @memberof LcdsGameDTO
   */
  teamOne?: Array<LcdsPlayerParticipant>;
  /**
   *
   * @type {Array<LcdsPlayerParticipant>}
   * @memberof LcdsGameDTO
   */
  teamTwo?: Array<LcdsPlayerParticipant>;
}
/**
 *
 * @export
 * @interface LcdsGameInviteBaseRuntimeException
 */
export interface LcdsGameInviteBaseRuntimeException {
  /**
   *
   * @type {string}
   * @memberof LcdsGameInviteBaseRuntimeException
   */
  rootCauseClassname?: string;
}
/**
 *
 * @export
 * @interface LcdsGameMap
 */
export interface LcdsGameMap {
  /**
   *
   * @type {string}
   * @memberof LcdsGameMap
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsGameMap
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LcdsGameMap
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsGameMap
   */
  minCustomPlayers?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsGameMap
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LcdsGameMap
   */
  totalPlayers?: number;
}
/**
 *
 * @export
 * @interface LcdsGameNotification
 */
export interface LcdsGameNotification {
  /**
   *
   * @type {string}
   * @memberof LcdsGameNotification
   */
  messageArgument?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsGameNotification
   */
  messageCode?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsGameNotification
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LcdsInvitationRequest
 */
export interface LcdsInvitationRequest {
  /**
   *
   * @type {string}
   * @memberof LcdsInvitationRequest
   */
  gameMetaData?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsInvitationRequest
   */
  invitationId?: string;
  /**
   *
   * @type {LcdsInvitationState}
   * @memberof LcdsInvitationRequest
   */
  invitationState?: LcdsInvitationState;
  /**
   *
   * @type {string}
   * @memberof LcdsInvitationRequest
   */
  invitePayload?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsInvitationRequest
   */
  inviteType?: string;
  /**
   *
   * @type {LcdsInviter}
   * @memberof LcdsInvitationRequest
   */
  inviter?: LcdsInviter;
  /**
   *
   * @type {LcdsPlayer}
   * @memberof LcdsInvitationRequest
   */
  owner?: LcdsPlayer;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LcdsInvitationState {
  ACTIVE = 'ACTIVE',
  ONHOLD = 'ON_HOLD',
  REVOKED = 'REVOKED',
}

/**
 *
 * @export
 * @interface LcdsInviteFailed
 */
export interface LcdsInviteFailed {
  /**
   *
   * @type {LcdsGameInviteBaseRuntimeException}
   * @memberof LcdsInviteFailed
   */
  exception?: LcdsGameInviteBaseRuntimeException;
  /**
   *
   * @type {number}
   * @memberof LcdsInviteFailed
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsInviteFailed
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LcdsInvitePrivileges
 */
export interface LcdsInvitePrivileges {
  /**
   *
   * @type {boolean}
   * @memberof LcdsInvitePrivileges
   */
  canInvite?: boolean;
}
/**
 *
 * @export
 * @interface LcdsInvitee
 */
export interface LcdsInvitee {
  /**
   *
   * @type {LcdsInviteeState}
   * @memberof LcdsInvitee
   */
  inviteeState?: LcdsInviteeState;
  /**
   *
   * @type {number}
   * @memberof LcdsInvitee
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsInvitee
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LcdsInviteeState {
  CREATOR = 'CREATOR',
  PENDING = 'PENDING',
  DECLINED = 'DECLINED',
  ACCEPTED = 'ACCEPTED',
  ACCEPTFAILED = 'ACCEPT_FAILED',
  JOINED = 'JOINED',
  QUIT = 'QUIT',
  KICKED = 'KICKED',
  BANNED = 'BANNED',
}

/**
 *
 * @export
 * @interface LcdsInviter
 */
export interface LcdsInviter {
  /**
   *
   * @type {string}
   * @memberof LcdsInviter
   */
  previousSeasonHighestTier?: string;
  /**
   *
   * @type {number}
   * @memberof LcdsInviter
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsInviter
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LcdsLobbyStatus
 */
export interface LcdsLobbyStatus {
  /**
   *
   * @type {string}
   * @memberof LcdsLobbyStatus
   */
  chatKey?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsLobbyStatus
   */
  gameMetaData?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsLobbyStatus
   */
  invitationId?: string;
  /**
   *
   * @type {Array<LcdsInvitee>}
   * @memberof LcdsLobbyStatus
   */
  invitees?: Array<LcdsInvitee>;
  /**
   *
   * @type {Array<LcdsMember>}
   * @memberof LcdsLobbyStatus
   */
  members?: Array<LcdsMember>;
  /**
   *
   * @type {LcdsPlayer}
   * @memberof LcdsLobbyStatus
   */
  owner?: LcdsPlayer;
}
/**
 *
 * @export
 * @interface LcdsMember
 */
export interface LcdsMember {
  /**
   *
   * @type {boolean}
   * @memberof LcdsMember
   */
  hasDelegatedInvitePower?: boolean;
  /**
   *
   * @type {number}
   * @memberof LcdsMember
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsMember
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LcdsPayloadDto
 */
export interface LcdsPayloadDto {
  /**
   *
   * @type {string}
   * @memberof LcdsPayloadDto
   */
  body?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LcdsPayloadDto
   */
  headers?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LcdsPayloadDto
   */
  method?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsPayloadDto
   */
  path?: string;
}
/**
 *
 * @export
 * @interface LcdsPlayer
 */
export interface LcdsPlayer {
  /**
   *
   * @type {number}
   * @memberof LcdsPlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsPlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LcdsPlayerParticipant
 */
export interface LcdsPlayerParticipant {
  /**
   *
   * @type {number}
   * @memberof LcdsPlayerParticipant
   */
  botSkillLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsPlayerParticipant
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsPlayerParticipant
   */
  summonerInternalName?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsPlayerParticipant
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LcdsPracticeGameConfig
 */
export interface LcdsPracticeGameConfig {
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameConfig
   */
  allowSpectators?: string;
  /**
   *
   * @type {LcdsGameMap}
   * @memberof LcdsPracticeGameConfig
   */
  gameMap?: LcdsGameMap;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameConfig
   */
  gameMode?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LcdsPracticeGameConfig
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameConfig
   */
  gameName?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameConfig
   */
  gamePassword?: string;
  /**
   *
   * @type {number}
   * @memberof LcdsPracticeGameConfig
   */
  gameTypeConfig?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameConfig
   */
  gameVersion?: string;
  /**
   *
   * @type {number}
   * @memberof LcdsPracticeGameConfig
   */
  maxNumPlayers?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameConfig
   */
  passbackDataPacket?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameConfig
   */
  passbackUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameConfig
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LcdsPracticeGameSearchResult
 */
export interface LcdsPracticeGameSearchResult {
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameSearchResult
   */
  allowSpectators?: string;
  /**
   *
   * @type {LcdsGameMap}
   * @memberof LcdsPracticeGameSearchResult
   */
  gameMap?: LcdsGameMap;
  /**
   *
   * @type {number}
   * @memberof LcdsPracticeGameSearchResult
   */
  gameMapId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameSearchResult
   */
  gameMode?: string;
  /**
   *
   * @type {number}
   * @memberof LcdsPracticeGameSearchResult
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsPracticeGameSearchResult
   */
  maxNumPlayers?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameSearchResult
   */
  name?: string;
  /**
   *
   * @type {LcdsPlayerParticipant}
   * @memberof LcdsPracticeGameSearchResult
   */
  owner?: LcdsPlayerParticipant;
  /**
   *
   * @type {string}
   * @memberof LcdsPracticeGameSearchResult
   */
  pickType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LcdsPracticeGameSearchResult
   */
  privateGame?: boolean;
  /**
   *
   * @type {number}
   * @memberof LcdsPracticeGameSearchResult
   */
  spectatorCount?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsPracticeGameSearchResult
   */
  team1Count?: number;
  /**
   *
   * @type {number}
   * @memberof LcdsPracticeGameSearchResult
   */
  team2Count?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LcdsRemovalReason {
  KICKED = 'KICKED',
  DESTROYED = 'DESTROYED',
  PROGRESSED = 'PROGRESSED',
}

/**
 *
 * @export
 * @interface LcdsRemovedFromLobbyNotification
 */
export interface LcdsRemovedFromLobbyNotification {
  /**
   *
   * @type {LcdsRemovalReason}
   * @memberof LcdsRemovedFromLobbyNotification
   */
  removalReason?: LcdsRemovalReason;
}
/**
 *
 * @export
 * @interface LcdsSimpleMessage
 */
export interface LcdsSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LcdsSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LcdsSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LcdsSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LcdsSimpleMessageResponse
 */
export interface LcdsSimpleMessageResponse {
  /**
   *
   * @type {number}
   * @memberof LcdsSimpleMessageResponse
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LcdsSimpleMessageResponse
   */
  command?: string;
  /**
   *
   * @type {string}
   * @memberof LcdsSimpleMessageResponse
   */
  msgId?: string;
}
/**
 *
 * @export
 * @interface LcdsStartChampSelectDto
 */
export interface LcdsStartChampSelectDto {
  /**
   *
   * @type {Array<LcdsFailedJoinPlayer>}
   * @memberof LcdsStartChampSelectDto
   */
  invalidPlayers?: Array<LcdsFailedJoinPlayer>;
}
/**
 *
 * @export
 * @interface LcdsSummoner
 */
export interface LcdsSummoner {
  /**
   *
   * @type {string}
   * @memberof LcdsSummoner
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LcdsSummoner
   */
  sumId?: number;
}
/**
 *
 * @export
 * @interface LeagueEntryChangeEventDTOV2
 */
export interface LeagueEntryChangeEventDTOV2 {
  /**
   *
   * @type {LeaguesLcdsLeagueItemDTO}
   * @memberof LeagueEntryChangeEventDTOV2
   */
  leagueItem?: LeaguesLcdsLeagueItemDTO;
  /**
   *
   * @type {number}
   * @memberof LeagueEntryChangeEventDTOV2
   */
  leaguePointsDelta?: number;
  /**
   *
   * @type {string}
   * @memberof LeagueEntryChangeEventDTOV2
   */
  lpChangeReason?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueEntryChangeEventDTOV2
   */
  notifyReason?: string;
}
/**
 *
 * @export
 * @interface LeagueLadderDTO
 */
export interface LeagueLadderDTO {
  /**
   *
   * @type {number}
   * @memberof LeagueLadderDTO
   */
  apexUnlockTimeMillis?: number;
  /**
   *
   * @type {Array<LeagueLadderEntryDTO>}
   * @memberof LeagueLadderDTO
   */
  entries?: Array<LeagueLadderEntryDTO>;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderDTO
   */
  maxLeagueSize?: number;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderDTO
   */
  nextApexUpdate?: number;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderDTO
   */
  provisionalGameThreshold?: number;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderDTO
   */
  queueType?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderDTO
   */
  tier?: string;
}
/**
 *
 * @export
 * @interface LeagueLadderEntryDTO
 */
export interface LeagueLadderEntryDTO {
  /**
   *
   * @type {Array<string>}
   * @memberof LeagueLadderEntryDTO
   */
  earnedRegaliaRewardIds?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderEntryDTO
   */
  leaguePoints?: number;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderEntryDTO
   */
  losses?: number;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderEntryDTO
   */
  miniSeriesProgress?: string;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderEntryDTO
   */
  previousDayLeaguePosition?: number;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderEntryDTO
   */
  previousSeasonAchievedRank?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderEntryDTO
   */
  previousSeasonAchievedTier?: string;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderEntryDTO
   */
  provisionalGamesRemaining?: number;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderEntryDTO
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderEntryDTO
   */
  rank?: string;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderEntryDTO
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderEntryDTO
   */
  summonerName?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueLadderEntryDTO
   */
  tier?: string;
  /**
   *
   * @type {number}
   * @memberof LeagueLadderEntryDTO
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LeagueTierAndRankDTO
 */
export interface LeagueTierAndRankDTO {
  /**
   *
   * @type {string}
   * @memberof LeagueTierAndRankDTO
   */
  playerOrTeamId?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueTierAndRankDTO
   */
  playerOrTeamName?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueTierAndRankDTO
   */
  queueType?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueTierAndRankDTO
   */
  rank?: string;
  /**
   *
   * @type {string}
   * @memberof LeagueTierAndRankDTO
   */
  tier?: string;
}
/**
 *
 * @export
 * @interface LeaguesLcdsLeagueItemDTO
 */
export interface LeaguesLcdsLeagueItemDTO {
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  leaguePoints?: number;
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  losses?: number;
  /**
   *
   * @type {LeaguesLcdsMiniSeriesDTO}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  miniSeries?: LeaguesLcdsMiniSeriesDTO;
  /**
   *
   * @type {string}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  playerOrTeamId?: string;
  /**
   *
   * @type {string}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  playerOrTeamName?: string;
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  provisionalGamesRemaining?: number;
  /**
   *
   * @type {string}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  queueType?: string;
  /**
   *
   * @type {string}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  rank?: string;
  /**
   *
   * @type {string}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  tier?: string;
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  timeUntilInactivityStatusChanges?: number;
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  totalPlayed?: number;
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsLeagueItemDTO
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LeaguesLcdsMiniSeriesDTO
 */
export interface LeaguesLcdsMiniSeriesDTO {
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsMiniSeriesDTO
   */
  losses?: number;
  /**
   *
   * @type {string}
   * @memberof LeaguesLcdsMiniSeriesDTO
   */
  progress?: string;
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsMiniSeriesDTO
   */
  target?: number;
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsMiniSeriesDTO
   */
  timeLeftToPlayMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsMiniSeriesDTO
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LeaguesLcdsSimpleMessage
 */
export interface LeaguesLcdsSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LeaguesLcdsSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LeaguesLcdsSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LeaguesLcdsSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LeaguesLcdsSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LeaguesSimpleMessageResponse
 */
export interface LeaguesSimpleMessageResponse {
  /**
   *
   * @type {number}
   * @memberof LeaguesSimpleMessageResponse
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LeaguesSimpleMessageResponse
   */
  command?: string;
  /**
   *
   * @type {string}
   * @memberof LeaguesSimpleMessageResponse
   */
  msgId?: string;
}
/**
 *
 * @export
 * @interface LeaverBusterLcdsMatchmakingNotification
 */
export interface LeaverBusterLcdsMatchmakingNotification {
  /**
   *
   * @type {Array<object>}
   * @memberof LeaverBusterLcdsMatchmakingNotification
   */
  playerJoinFailures?: Array<object>;
}
/**
 *
 * @export
 * @interface LeaverBusterLcdsSimpleMessage
 */
export interface LeaverBusterLcdsSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LeaverBusterLcdsSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LeaverBusterLcdsSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LeaverBusterLcdsSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LeaverBusterLcdsSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LeaverBusterSimpleMessageResponse
 */
export interface LeaverBusterSimpleMessageResponse {
  /**
   *
   * @type {number}
   * @memberof LeaverBusterSimpleMessageResponse
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LeaverBusterSimpleMessageResponse
   */
  command?: string;
  /**
   *
   * @type {string}
   * @memberof LeaverBusterSimpleMessageResponse
   */
  msgId?: string;
}
/**
 *
 * @export
 * @interface LobbyClientDynamicConfigurationNotification
 */
export interface LobbyClientDynamicConfigurationNotification {
  /**
   *
   * @type {string}
   * @memberof LobbyClientDynamicConfigurationNotification
   */
  configs?: string;
  /**
   *
   * @type {boolean}
   * @memberof LobbyClientDynamicConfigurationNotification
   */
  delta?: boolean;
}
/**
 * Describes a log entry.
 * @export
 * @interface LogEvent
 */
export interface LogEvent {
  /**
   *
   * @type {string}
   * @memberof LogEvent
   */
  message?: string;
  /**
   *
   * @type {LogSeverityLevels}
   * @memberof LogEvent
   */
  severity?: LogSeverityLevels;
}
/**
 * Allowable severity levels for log events.
 * @export
 * @enum {string}
 */
export enum LogSeverityLevels {
  Okay = 'Okay',
  Warning = 'Warning',
  Error = 'Error',
  Always = 'Always',
}

/**
 *
 * @export
 * @interface LoginDataPacket
 */
export interface LoginDataPacket {
  /**
   *
   * @type {LoginDataPacketSummonerData}
   * @memberof LoginDataPacket
   */
  allSummonerData?: LoginDataPacketSummonerData;
  /**
   *
   * @type {Array<LeaguesLcdsSimpleMessage>}
   * @memberof LoginDataPacket
   */
  simpleMessages?: Array<LeaguesLcdsSimpleMessage>;
}
/**
 *
 * @export
 * @interface LoginDataPacketSummoner
 */
export interface LoginDataPacketSummoner {
  /**
   *
   * @type {number}
   * @memberof LoginDataPacketSummoner
   */
  acctId?: number;
  /**
   *
   * @type {string}
   * @memberof LoginDataPacketSummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LoginDataPacketSummoner
   */
  sumId?: number;
}
/**
 *
 * @export
 * @interface LoginDataPacketSummonerData
 */
export interface LoginDataPacketSummonerData {
  /**
   *
   * @type {LoginDataPacketSummoner}
   * @memberof LoginDataPacketSummonerData
   */
  summoner?: LoginDataPacketSummoner;
}
/**
 *
 * @export
 * @interface LolAccountVerificationAVSConfig
 */
export interface LolAccountVerificationAVSConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolAccountVerificationAVSConfig
   */
  Enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolAccountVerificationAVSConfig
   */
  PasswordEnabled?: boolean;
}
/**
 *
 * @export
 * @interface LolAccountVerificationAuthenticateRequest
 */
export interface LolAccountVerificationAuthenticateRequest {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationAuthenticateRequest
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationAuthenticateRequest
   */
  username?: string;
}
/**
 *
 * @export
 * @interface LolAccountVerificationAuthenticateResponse
 */
export interface LolAccountVerificationAuthenticateResponse {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationAuthenticateResponse
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationAuthenticateResponse
   */
  status?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolAccountVerificationAuthenticateResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolAccountVerificationDeviceResponse
 */
export interface LolAccountVerificationDeviceResponse {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationDeviceResponse
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationDeviceResponse
   */
  status?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolAccountVerificationDeviceResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolAccountVerificationInvalidateResponse
 */
export interface LolAccountVerificationInvalidateResponse {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationInvalidateResponse
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationInvalidateResponse
   */
  smsTokenExpireDurationInSec?: number;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationInvalidateResponse
   */
  status?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolAccountVerificationInvalidateResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolAccountVerificationIsVerifiedResponse
 */
export interface LolAccountVerificationIsVerifiedResponse {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationIsVerifiedResponse
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationIsVerifiedResponse
   */
  status?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolAccountVerificationIsVerifiedResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolAccountVerificationLoginSession
 */
export interface LolAccountVerificationLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolAccountVerificationLoginSessionState}
   * @memberof LolAccountVerificationLoginSession
   */
  state?: LolAccountVerificationLoginSessionState;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationLoginSession
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationLoginSession
   */
  username?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolAccountVerificationLoginSessionState {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolAccountVerificationSendTokenRequest
 */
export interface LolAccountVerificationSendTokenRequest {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationSendTokenRequest
   */
  device?: string;
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationSendTokenRequest
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationSendTokenRequest
   */
  mediator?: string;
}
/**
 *
 * @export
 * @interface LolAccountVerificationSendTokenResponse
 */
export interface LolAccountVerificationSendTokenResponse {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationSendTokenResponse
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationSendTokenResponse
   */
  smsTokenExpireDurationInSec?: number;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationSendTokenResponse
   */
  status?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolAccountVerificationSendTokenResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolAccountVerificationVerifyRequest
 */
export interface LolAccountVerificationVerifyRequest {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationVerifyRequest
   */
  mediator?: string;
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationVerifyRequest
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolAccountVerificationVerifyResponse
 */
export interface LolAccountVerificationVerifyResponse {
  /**
   *
   * @type {string}
   * @memberof LolAccountVerificationVerifyResponse
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolAccountVerificationVerifyResponse
   */
  status?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolAccountVerificationVerifyResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolAcsAcsChampionGames
 */
export interface LolAcsAcsChampionGames {
  /**
   *
   * @type {number}
   * @memberof LolAcsAcsChampionGames
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolAcsAcsChampionGames
   */
  lane?: string;
  /**
   *
   * @type {number}
   * @memberof LolAcsAcsChampionGames
   */
  queue?: number;
  /**
   *
   * @type {string}
   * @memberof LolAcsAcsChampionGames
   */
  role?: string;
  /**
   *
   * @type {number}
   * @memberof LolAcsAcsChampionGames
   */
  timestamp?: number;
}
/**
 *
 * @export
 * @interface LolAcsAcsChampionGamesCollection
 */
export interface LolAcsAcsChampionGamesCollection {
  /**
   *
   * @type {Array<LolAcsAcsChampionGames>}
   * @memberof LolAcsAcsChampionGamesCollection
   */
  champions?: Array<LolAcsAcsChampionGames>;
  /**
   *
   * @type {number}
   * @memberof LolAcsAcsChampionGamesCollection
   */
  gameCount?: number;
}
/**
 *
 * @export
 * @interface LolAcsAcsEndPoint
 */
export interface LolAcsAcsEndPoint {
  /**
   *
   * @type {string}
   * @memberof LolAcsAcsEndPoint
   */
  url?: string;
}
/**
 *
 * @export
 * @interface LolAcsLoginSession
 */
export interface LolAcsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolAcsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof LolAcsLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolAcsLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {LolAcsLoginSessionStates}
   * @memberof LolAcsLoginSession
   */
  state?: LolAcsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolAcsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolAcsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolActiveBoostsActiveBoosts
 */
export interface LolActiveBoostsActiveBoosts {
  /**
   *
   * @type {string}
   * @memberof LolActiveBoostsActiveBoosts
   */
  firstWinOfTheDayStartTime?: string;
  /**
   *
   * @type {string}
   * @memberof LolActiveBoostsActiveBoosts
   */
  ipBoostEndDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolActiveBoostsActiveBoosts
   */
  ipBoostPerWinCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolActiveBoostsActiveBoosts
   */
  ipLoyaltyBoost?: number;
  /**
   *
   * @type {number}
   * @memberof LolActiveBoostsActiveBoosts
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolActiveBoostsActiveBoosts
   */
  xpBoostEndDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolActiveBoostsActiveBoosts
   */
  xpBoostPerWinCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolActiveBoostsActiveBoosts
   */
  xpLoyaltyBoost?: number;
}
/**
 *
 * @export
 * @interface LolActiveBoostsEndOfGameStats
 */
export interface LolActiveBoostsEndOfGameStats {
  /**
   *
   * @type {number}
   * @memberof LolActiveBoostsEndOfGameStats
   */
  timeUntilNextFirstWinBonus?: number;
}
/**
 *
 * @export
 * @interface LolActiveBoostsLoginDataPacket
 */
export interface LolActiveBoostsLoginDataPacket {
  /**
   *
   * @type {number}
   * @memberof LolActiveBoostsLoginDataPacket
   */
  timeUntilFirstWinOfDay?: number;
}
/**
 *
 * @export
 * @interface LolBannersBannerFlag
 */
export interface LolBannersBannerFlag {
  /**
   *
   * @type {string}
   * @memberof LolBannersBannerFlag
   */
  earnedDateIso8601?: string;
  /**
   *
   * @type {number}
   * @memberof LolBannersBannerFlag
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolBannersBannerFlag
   */
  level?: number;
  /**
   *
   * @type {number}
   * @memberof LolBannersBannerFlag
   */
  seasonId?: number;
  /**
   *
   * @type {string}
   * @memberof LolBannersBannerFlag
   */
  theme?: string;
}
/**
 *
 * @export
 * @interface LolBannersBannerFrame
 */
export interface LolBannersBannerFrame {
  /**
   *
   * @type {number}
   * @memberof LolBannersBannerFrame
   */
  level?: number;
}
/**
 *
 * @export
 * @interface LolBannersCapClashFlagEntitlementPayload
 */
export interface LolBannersCapClashFlagEntitlementPayload {
  /**
   *
   * @type {LolBannersClashV2FlagRewardSpec}
   * @memberof LolBannersCapClashFlagEntitlementPayload
   */
  rewardSpec?: LolBannersClashV2FlagRewardSpec;
  /**
   *
   * @type {string}
   * @memberof LolBannersCapClashFlagEntitlementPayload
   */
  rewardType?: string;
}
/**
 *
 * @export
 * @interface LolBannersCapClashFrameEntitlementPayload
 */
export interface LolBannersCapClashFrameEntitlementPayload {
  /**
   *
   * @type {LolBannersClashV2FrameRewardSpec}
   * @memberof LolBannersCapClashFrameEntitlementPayload
   */
  rewardSpec?: LolBannersClashV2FrameRewardSpec;
  /**
   *
   * @type {string}
   * @memberof LolBannersCapClashFrameEntitlementPayload
   */
  rewardType?: string;
}
/**
 *
 * @export
 * @interface LolBannersClashV2FlagRewardSpec
 */
export interface LolBannersClashV2FlagRewardSpec {
  /**
   *
   * @type {string}
   * @memberof LolBannersClashV2FlagRewardSpec
   */
  level?: string;
  /**
   *
   * @type {string}
   * @memberof LolBannersClashV2FlagRewardSpec
   */
  seasonId?: string;
  /**
   *
   * @type {string}
   * @memberof LolBannersClashV2FlagRewardSpec
   */
  theme?: string;
}
/**
 *
 * @export
 * @interface LolBannersClashV2FrameRewardSpec
 */
export interface LolBannersClashV2FrameRewardSpec {
  /**
   *
   * @type {string}
   * @memberof LolBannersClashV2FrameRewardSpec
   */
  level?: string;
  /**
   *
   * @type {string}
   * @memberof LolBannersClashV2FrameRewardSpec
   */
  seasonId?: string;
}
/**
 *
 * @export
 * @interface LolBannersInventoryItemWithPayload
 */
export interface LolBannersInventoryItemWithPayload {
  /**
   *
   * @type {string}
   * @memberof LolBannersInventoryItemWithPayload
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolBannersInventoryItemWithPayload
   */
  itemId?: number;
  /**
   *
   * @type {object}
   * @memberof LolBannersInventoryItemWithPayload
   */
  payload?: object;
  /**
   *
   * @type {string}
   * @memberof LolBannersInventoryItemWithPayload
   */
  purchaseDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolBannersInventoryItemWithPayload
   */
  uuid?: string;
}
/**
 *
 * @export
 * @interface LolBannersInventoryItemsByType
 */
export interface LolBannersInventoryItemsByType {
  /**
   *
   * @type {Array<LolBannersTournamentFlagInventoryItem>}
   * @memberof LolBannersInventoryItemsByType
   */
  TOURNAMENT_FLAG?: Array<LolBannersTournamentFlagInventoryItem>;
  /**
   *
   * @type {Array<LolBannersTournamentFrameInventoryItem>}
   * @memberof LolBannersInventoryItemsByType
   */
  TOURNAMENT_FRAME?: Array<LolBannersTournamentFrameInventoryItem>;
}
/**
 *
 * @export
 * @interface LolBannersInventoryResponse
 */
export interface LolBannersInventoryResponse {
  /**
   *
   * @type {LolBannersInventoryItemsByType}
   * @memberof LolBannersInventoryResponse
   */
  items?: LolBannersInventoryItemsByType;
}
/**
 *
 * @export
 * @interface LolBannersLoadout
 */
export interface LolBannersLoadout {
  /**
   *
   * @type {string}
   * @memberof LolBannersLoadout
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: LolBannersLoadoutsSlot; }}
   * @memberof LolBannersLoadout
   */
  loadout?: { [key: string]: LolBannersLoadoutsSlot };
  /**
   *
   * @type {string}
   * @memberof LolBannersLoadout
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolBannersLoadout
   */
  scope?: string;
}
/**
 *
 * @export
 * @interface LolBannersLoadoutsSlot
 */
export interface LolBannersLoadoutsSlot {
  /**
   *
   * @type {string}
   * @memberof LolBannersLoadoutsSlot
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolBannersLoadoutsSlot
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolBannersSummonerProfileUpdate
 */
export interface LolBannersSummonerProfileUpdate {
  /**
   *
   * @type {string}
   * @memberof LolBannersSummonerProfileUpdate
   */
  key?: string;
  /**
   *
   * @type {object}
   * @memberof LolBannersSummonerProfileUpdate
   */
  value?: object;
}
/**
 *
 * @export
 * @interface LolBannersTournamentFlagInventoryItem
 */
export interface LolBannersTournamentFlagInventoryItem {
  /**
   *
   * @type {number}
   * @memberof LolBannersTournamentFlagInventoryItem
   */
  itemId?: number;
  /**
   *
   * @type {LolBannersCapClashFlagEntitlementPayload}
   * @memberof LolBannersTournamentFlagInventoryItem
   */
  payload?: LolBannersCapClashFlagEntitlementPayload;
  /**
   *
   * @type {string}
   * @memberof LolBannersTournamentFlagInventoryItem
   */
  purchaseDate?: string;
}
/**
 *
 * @export
 * @interface LolBannersTournamentFrameInventoryItem
 */
export interface LolBannersTournamentFrameInventoryItem {
  /**
   *
   * @type {LolBannersCapClashFrameEntitlementPayload}
   * @memberof LolBannersTournamentFrameInventoryItem
   */
  payload?: LolBannersCapClashFrameEntitlementPayload;
  /**
   *
   * @type {string}
   * @memberof LolBannersTournamentFrameInventoryItem
   */
  purchaseDate?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolCareerStatsCareerStatsQueueType {
  Draft5 = 'draft5',
  Rank5flex = 'rank5flex',
  Rank5solo = 'rank5solo',
  Blind5 = 'blind5',
  Aram = 'aram',
  Blind3 = 'blind3',
  Rank3flex = 'rank3flex',
  Other = 'other',
}

/**
 *
 * @export
 * @interface LolCareerStatsChampionQueueStatsResponse
 */
export interface LolCareerStatsChampionQueueStatsResponse {
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsChampionQueueStatsResponse
   */
  championId?: number;
  /**
   *
   * @type {LolCareerStatsSummonersRiftPosition}
   * @memberof LolCareerStatsChampionQueueStatsResponse
   */
  position?: LolCareerStatsSummonersRiftPosition;
  /**
   *
   * @type {LolCareerStatsCareerStatsQueueType}
   * @memberof LolCareerStatsChampionQueueStatsResponse
   */
  queueType?: LolCareerStatsCareerStatsQueueType;
  /**
   *
   * @type {LolCareerStatsRankedTier}
   * @memberof LolCareerStatsChampionQueueStatsResponse
   */
  rankTier?: LolCareerStatsRankedTier;
  /**
   *
   * @type {object}
   * @memberof LolCareerStatsChampionQueueStatsResponse
   */
  stats?: object;
}
/**
 *
 * @export
 * @interface LolCareerStatsChampionStatistics
 */
export interface LolCareerStatsChampionStatistics {
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsChampionStatistics
   */
  championId?: number;
  /**
   *
   * @type {Array<LolCareerStatsExpertPlayer>}
   * @memberof LolCareerStatsChampionStatistics
   */
  experts?: Array<LolCareerStatsExpertPlayer>;
  /**
   *
   * @type {Array<LolCareerStatsStatisticsByQueue>}
   * @memberof LolCareerStatsChampionStatistics
   */
  queueStats?: Array<LolCareerStatsStatisticsByQueue>;
}
/**
 *
 * @export
 * @interface LolCareerStatsEntitlementsToken
 */
export interface LolCareerStatsEntitlementsToken {
  /**
   *
   * @type {Array<string>}
   * @memberof LolCareerStatsEntitlementsToken
   */
  entitlements?: Array<string>;
}
/**
 *
 * @export
 * @interface LolCareerStatsExpertPlayer
 */
export interface LolCareerStatsExpertPlayer {
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsExpertPlayer
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsExpertPlayer
   */
  expertRank?: number;
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsExpertPlayer
   */
  numOfGames?: number;
  /**
   *
   * @type {LolCareerStatsSummonersRiftPosition}
   * @memberof LolCareerStatsExpertPlayer
   */
  position?: LolCareerStatsSummonersRiftPosition;
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsExpertPlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCareerStatsExpertPlayer
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsExpertPlayer
   */
  winRate?: number;
}
/**
 *
 * @export
 * @interface LolCareerStatsPositionStatistics
 */
export interface LolCareerStatsPositionStatistics {
  /**
   *
   * @type {Array<LolCareerStatsExpertPlayer>}
   * @memberof LolCareerStatsPositionStatistics
   */
  experts?: Array<LolCareerStatsExpertPlayer>;
  /**
   *
   * @type {LolCareerStatsSummonersRiftPosition}
   * @memberof LolCareerStatsPositionStatistics
   */
  position?: LolCareerStatsSummonersRiftPosition;
  /**
   *
   * @type {Array<LolCareerStatsStatisticsByQueue>}
   * @memberof LolCareerStatsPositionStatistics
   */
  queueStats?: Array<LolCareerStatsStatisticsByQueue>;
}
/**
 *
 * @export
 * @interface LolCareerStatsPositionStatsQueryRequest
 */
export interface LolCareerStatsPositionStatsQueryRequest {
  /**
   *
   * @type {LolCareerStatsSummonersRiftPosition}
   * @memberof LolCareerStatsPositionStatsQueryRequest
   */
  position?: LolCareerStatsSummonersRiftPosition;
  /**
   *
   * @type {LolCareerStatsCareerStatsQueueType}
   * @memberof LolCareerStatsPositionStatsQueryRequest
   */
  queueType?: LolCareerStatsCareerStatsQueueType;
  /**
   *
   * @type {LolCareerStatsRankedTier}
   * @memberof LolCareerStatsPositionStatsQueryRequest
   */
  rankTier?: LolCareerStatsRankedTier;
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsPositionStatsQueryRequest
   */
  season?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolCareerStatsRankedTier {
  ALL = 'ALL',
  UNRANKED = 'UNRANKED',
  IRON = 'IRON',
  BRONZE = 'BRONZE',
  SILVER = 'SILVER',
  GOLD = 'GOLD',
  PLATINUM = 'PLATINUM',
  DIAMOND = 'DIAMOND',
  MASTER = 'MASTER',
  GRANDMASTER = 'GRANDMASTER',
  CHALLENGER = 'CHALLENGER',
}

/**
 *
 * @export
 * @interface LolCareerStatsStatisticsByQueue
 */
export interface LolCareerStatsStatisticsByQueue {
  /**
   *
   * @type {LolCareerStatsCareerStatsQueueType}
   * @memberof LolCareerStatsStatisticsByQueue
   */
  queueType?: LolCareerStatsCareerStatsQueueType;
  /**
   *
   * @type {object}
   * @memberof LolCareerStatsStatisticsByQueue
   */
  stats?: object;
}
/**
 *
 * @export
 * @interface LolCareerStatsStatisticsPercentilesResponse
 */
export interface LolCareerStatsStatisticsPercentilesResponse {
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsStatisticsPercentilesResponse
   */
  championId?: number;
  /**
   *
   * @type {LolCareerStatsSummonersRiftPosition}
   * @memberof LolCareerStatsStatisticsPercentilesResponse
   */
  position?: LolCareerStatsSummonersRiftPosition;
  /**
   *
   * @type {LolCareerStatsCareerStatsQueueType}
   * @memberof LolCareerStatsStatisticsPercentilesResponse
   */
  queueType?: LolCareerStatsCareerStatsQueueType;
  /**
   *
   * @type {LolCareerStatsRankedTier}
   * @memberof LolCareerStatsStatisticsPercentilesResponse
   */
  rankTier?: LolCareerStatsRankedTier;
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsStatisticsPercentilesResponse
   */
  season?: number;
  /**
   *
   * @type {object}
   * @memberof LolCareerStatsStatisticsPercentilesResponse
   */
  stats?: object;
}
/**
 *
 * @export
 * @interface LolCareerStatsStatsQueryRequest
 */
export interface LolCareerStatsStatsQueryRequest {
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsStatsQueryRequest
   */
  championId?: number;
  /**
   *
   * @type {LolCareerStatsSummonersRiftPosition}
   * @memberof LolCareerStatsStatsQueryRequest
   */
  position?: LolCareerStatsSummonersRiftPosition;
  /**
   *
   * @type {LolCareerStatsCareerStatsQueueType}
   * @memberof LolCareerStatsStatsQueryRequest
   */
  queueType?: LolCareerStatsCareerStatsQueueType;
  /**
   *
   * @type {LolCareerStatsRankedTier}
   * @memberof LolCareerStatsStatsQueryRequest
   */
  rankTier?: LolCareerStatsRankedTier;
  /**
   *
   * @type {number}
   * @memberof LolCareerStatsStatsQueryRequest
   */
  season?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolCareerStatsSummonersRiftPosition {
  ALL = 'ALL',
  UNKNOWN = 'UNKNOWN',
  TOP = 'TOP',
  JUNGLE = 'JUNGLE',
  MID = 'MID',
  BOTTOM = 'BOTTOM',
  SUPPORT = 'SUPPORT',
}

/**
 *
 * @export
 * @interface LolCatalogBundled
 */
export interface LolCatalogBundled {
  /**
   *
   * @type {boolean}
   * @memberof LolCatalogBundled
   */
  flexible?: boolean;
  /**
   *
   * @type {Array<LolCatalogBundledItem>}
   * @memberof LolCatalogBundled
   */
  items?: Array<LolCatalogBundledItem>;
  /**
   *
   * @type {Array<LolCatalogBundledItemCost>}
   * @memberof LolCatalogBundled
   */
  minimumPrices?: Array<LolCatalogBundledItemCost>;
}
/**
 *
 * @export
 * @interface LolCatalogBundledItem
 */
export interface LolCatalogBundledItem {
  /**
   *
   * @type {Array<LolCatalogBundledItemCost>}
   * @memberof LolCatalogBundledItem
   */
  discountPrices?: Array<LolCatalogBundledItemCost>;
  /**
   *
   * @type {string}
   * @memberof LolCatalogBundledItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogBundledItem
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCatalogBundledItem
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface LolCatalogBundledItemCost
 */
export interface LolCatalogBundledItemCost {
  /**
   *
   * @type {number}
   * @memberof LolCatalogBundledItemCost
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogBundledItemCost
   */
  costType?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogBundledItemCost
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogBundledItemCost
   */
  discount?: number;
}
/**
 *
 * @export
 * @interface LolCatalogCatalogItem
 */
export interface LolCatalogCatalogItem {
  /**
   *
   * @type {boolean}
   * @memberof LolCatalogCatalogItem
   */
  active?: boolean;
  /**
   *
   * @type {LolCatalogBundled}
   * @memberof LolCatalogCatalogItem
   */
  bundled?: LolCatalogBundled;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogItem
   */
  iconUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogItem
   */
  inactiveDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogItem
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogItem
   */
  itemInstanceId?: string;
  /**
   *
   * @type {Array<LolCatalogItemKey>}
   * @memberof LolCatalogCatalogItem
   */
  itemRequirements?: Array<LolCatalogItemKey>;
  /**
   *
   * @type {{ [key: string]: LolCatalogItemLocalization; }}
   * @memberof LolCatalogCatalogItem
   */
  localizations?: { [key: string]: LolCatalogItemLocalization };
  /**
   *
   * @type {Array<LolCatalogItemCost>}
   * @memberof LolCatalogCatalogItem
   */
  prices?: Array<LolCatalogItemCost>;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogItem
   */
  releaseDate?: string;
  /**
   *
   * @type {LolCatalogSale}
   * @memberof LolCatalogCatalogItem
   */
  sale?: LolCatalogSale;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogItem
   */
  subInventoryType?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolCatalogCatalogItem
   */
  tags?: Array<string>;
}
/**
 *
 * @export
 * @interface LolCatalogCatalogPluginItem
 */
export interface LolCatalogCatalogPluginItem {
  /**
   *
   * @type {boolean}
   * @memberof LolCatalogCatalogPluginItem
   */
  active?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItem
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItem
   */
  imagePath?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogPluginItem
   */
  inactiveDate?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogPluginItem
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItem
   */
  itemInstanceId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItem
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCatalogCatalogPluginItem
   */
  owned?: boolean;
  /**
   *
   * @type {LolCatalogInventoryOwnership}
   * @memberof LolCatalogCatalogPluginItem
   */
  ownershipType?: LolCatalogInventoryOwnership;
  /**
   *
   * @type {Array<LolCatalogCatalogPluginPrice>}
   * @memberof LolCatalogCatalogPluginItem
   */
  prices?: Array<LolCatalogCatalogPluginPrice>;
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogPluginItem
   */
  purchaseDate?: number;
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogPluginItem
   */
  releaseDate?: number;
  /**
   *
   * @type {LolCatalogSale}
   * @memberof LolCatalogCatalogPluginItem
   */
  sale?: LolCatalogSale;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItem
   */
  subInventoryType?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItem
   */
  subTitle?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolCatalogCatalogPluginItem
   */
  tags?: Array<string>;
}
/**
 *
 * @export
 * @interface LolCatalogCatalogPluginItemAssets
 */
export interface LolCatalogCatalogPluginItemAssets {
  /**
   *
   * @type {Array<string>}
   * @memberof LolCatalogCatalogPluginItemAssets
   */
  colors?: Array<string>;
  /**
   *
   * @type {Array<LolCatalogChampionSkinEmblem>}
   * @memberof LolCatalogCatalogPluginItemAssets
   */
  emblems?: Array<LolCatalogChampionSkinEmblem>;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItemAssets
   */
  iconPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItemAssets
   */
  splashPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginItemAssets
   */
  tilePath?: string;
}
/**
 *
 * @export
 * @interface LolCatalogCatalogPluginItemWithDetails
 */
export interface LolCatalogCatalogPluginItemWithDetails {
  /**
   *
   * @type {LolCatalogCatalogPluginItemAssets}
   * @memberof LolCatalogCatalogPluginItemWithDetails
   */
  assets?: LolCatalogCatalogPluginItemAssets;
  /**
   *
   * @type {Array<LolCatalogCatalogPluginPrice>}
   * @memberof LolCatalogCatalogPluginItemWithDetails
   */
  bundledDiscountPrices?: Array<LolCatalogCatalogPluginPrice>;
  /**
   *
   * @type {Array<LolCatalogCatalogPluginItemWithDetails>}
   * @memberof LolCatalogCatalogPluginItemWithDetails
   */
  bundledItems?: Array<LolCatalogCatalogPluginItemWithDetails>;
  /**
   *
   * @type {LolCatalogCatalogPluginItem}
   * @memberof LolCatalogCatalogPluginItemWithDetails
   */
  item?: LolCatalogCatalogPluginItem;
  /**
   *
   * @type {Array<LolCatalogCatalogPluginPrice>}
   * @memberof LolCatalogCatalogPluginItemWithDetails
   */
  minimumBundlePrices?: Array<LolCatalogCatalogPluginPrice>;
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogPluginItemWithDetails
   */
  quantity?: number;
  /**
   *
   * @type {Array<LolCatalogCatalogPluginItemWithDetails>}
   * @memberof LolCatalogCatalogPluginItemWithDetails
   */
  requiredItems?: Array<LolCatalogCatalogPluginItemWithDetails>;
}
/**
 *
 * @export
 * @interface LolCatalogCatalogPluginPrice
 */
export interface LolCatalogCatalogPluginPrice {
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogPluginPrice
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginPrice
   */
  costType?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginPrice
   */
  currency?: string;
  /**
   *
   * @type {LolCatalogCatalogPluginRetailDiscount}
   * @memberof LolCatalogCatalogPluginPrice
   */
  sale?: LolCatalogCatalogPluginRetailDiscount;
}
/**
 *
 * @export
 * @interface LolCatalogCatalogPluginRetailDiscount
 */
export interface LolCatalogCatalogPluginRetailDiscount {
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogPluginRetailDiscount
   */
  cost?: number;
  /**
   *
   * @type {number}
   * @memberof LolCatalogCatalogPluginRetailDiscount
   */
  discount?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginRetailDiscount
   */
  endDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogCatalogPluginRetailDiscount
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface LolCatalogChampionSkinEmblem
 */
export interface LolCatalogChampionSkinEmblem {
  /**
   *
   * @type {LolCatalogChampionSkinEmblemPath}
   * @memberof LolCatalogChampionSkinEmblem
   */
  emblemPath?: LolCatalogChampionSkinEmblemPath;
  /**
   *
   * @type {LolCatalogChampionSkinEmblemPosition}
   * @memberof LolCatalogChampionSkinEmblem
   */
  emblemPosition?: LolCatalogChampionSkinEmblemPosition;
  /**
   *
   * @type {string}
   * @memberof LolCatalogChampionSkinEmblem
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolCatalogChampionSkinEmblemPath
 */
export interface LolCatalogChampionSkinEmblemPath {
  /**
   *
   * @type {string}
   * @memberof LolCatalogChampionSkinEmblemPath
   */
  large?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogChampionSkinEmblemPath
   */
  small?: string;
}
/**
 *
 * @export
 * @interface LolCatalogChampionSkinEmblemPosition
 */
export interface LolCatalogChampionSkinEmblemPosition {
  /**
   *
   * @type {string}
   * @memberof LolCatalogChampionSkinEmblemPosition
   */
  horizontal?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogChampionSkinEmblemPosition
   */
  vertical?: string;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataChampion
 */
export interface LolCatalogGameDataChampion {
  /**
   *
   * @type {Array<LolCatalogGameDataChampionSkin>}
   * @memberof LolCatalogGameDataChampion
   */
  skins?: Array<LolCatalogGameDataChampionSkin>;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataChampionChroma
 */
export interface LolCatalogGameDataChampionChroma {
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionChroma
   */
  chromaPath?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolCatalogGameDataChampionChroma
   */
  colors?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataChampionChroma
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionChroma
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataChampionSkin
 */
export interface LolCatalogGameDataChampionSkin {
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionSkin
   */
  chromaPath?: string;
  /**
   *
   * @type {Array<LolCatalogGameDataChampionChroma>}
   * @memberof LolCatalogGameDataChampionSkin
   */
  chromas?: Array<LolCatalogGameDataChampionChroma>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolCatalogGameDataChampionSkin
   */
  colors?: Array<string>;
  /**
   *
   * @type {Array<LolCatalogChampionSkinEmblem>}
   * @memberof LolCatalogGameDataChampionSkin
   */
  emblems?: Array<LolCatalogChampionSkinEmblem>;
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataChampionSkin
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionSkin
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionSkin
   */
  splashPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionSkin
   */
  tilePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionSkin
   */
  uncenteredSplashPath?: string;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataChampionSummary
 */
export interface LolCatalogGameDataChampionSummary {
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataChampionSummary
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionSummary
   */
  name?: string;
  /**
   *
   * @type {Array<LolCatalogGameDataChampionSkin>}
   * @memberof LolCatalogGameDataChampionSummary
   */
  skins?: Array<LolCatalogGameDataChampionSkin>;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataChampionSummary
   */
  squarePortraitPath?: string;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataItemReference
 */
export interface LolCatalogGameDataItemReference {
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataItemReference
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataItemReference
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataItemReference
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataStatstone
 */
export interface LolCatalogGameDataStatstone {
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstone
   */
  category?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstone
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstone
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstone
   */
  iconFull?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCatalogGameDataStatstone
   */
  isDuration?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolCatalogGameDataStatstone
   */
  isEpic?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolCatalogGameDataStatstone
   */
  isRetired?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataStatstone
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstone
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataStatstonePack
 */
export interface LolCatalogGameDataStatstonePack {
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstonePack
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstonePack
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataStatstonePack
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstonePack
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataStatstoneSet
 */
export interface LolCatalogGameDataStatstoneSet {
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataStatstoneSet
   */
  name?: string;
  /**
   *
   * @type {Array<LolCatalogGameDataStatstone>}
   * @memberof LolCatalogGameDataStatstoneSet
   */
  statstones?: Array<LolCatalogGameDataStatstone>;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataStatstonesInfo
 */
export interface LolCatalogGameDataStatstonesInfo {
  /**
   *
   * @type {object}
   * @memberof LolCatalogGameDataStatstonesInfo
   */
  champIdToPackIds?: object;
  /**
   *
   * @type {object}
   * @memberof LolCatalogGameDataStatstonesInfo
   */
  collectionIdToStatStoneIds?: object;
  /**
   *
   * @type {Array<LolCatalogGameDataStatstonePack>}
   * @memberof LolCatalogGameDataStatstonesInfo
   */
  packData?: Array<LolCatalogGameDataStatstonePack>;
  /**
   *
   * @type {object}
   * @memberof LolCatalogGameDataStatstonesInfo
   */
  packIdToChampIds?: object;
  /**
   *
   * @type {object}
   * @memberof LolCatalogGameDataStatstonesInfo
   */
  packIdToStatStonesIds?: object;
  /**
   *
   * @type {object}
   * @memberof LolCatalogGameDataStatstonesInfo
   */
  packIdToSubPackIds?: object;
  /**
   *
   * @type {object}
   * @memberof LolCatalogGameDataStatstonesInfo
   */
  seriesIdToStatStoneIds?: object;
  /**
   *
   * @type {Array<LolCatalogGameDataStatstoneSet>}
   * @memberof LolCatalogGameDataStatstonesInfo
   */
  statstoneData?: Array<LolCatalogGameDataStatstoneSet>;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataSummonerEmote
 */
export interface LolCatalogGameDataSummonerEmote {
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataSummonerEmote
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataSummonerEmote
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataSummonerEmote
   */
  inventoryIcon?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataSummonerEmote
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataSummonerIcon
 */
export interface LolCatalogGameDataSummonerIcon {
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataSummonerIcon
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataSummonerIcon
   */
  imagePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataSummonerIcon
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolCatalogGameDataWardSkin
 */
export interface LolCatalogGameDataWardSkin {
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataWardSkin
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogGameDataWardSkin
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataWardSkin
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogGameDataWardSkin
   */
  wardImagePath?: string;
}
/**
 *
 * @export
 * @interface LolCatalogInventoryContent
 */
export interface LolCatalogInventoryContent {
  /**
   *
   * @type {number}
   * @memberof LolCatalogInventoryContent
   */
  itemId?: number;
  /**
   *
   * @type {LolCatalogInventoryOwnership}
   * @memberof LolCatalogInventoryContent
   */
  ownershipType?: LolCatalogInventoryOwnership;
  /**
   *
   * @type {string}
   * @memberof LolCatalogInventoryContent
   */
  purchaseDate?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolCatalogInventoryOwnership {
  OWNED = 'OWNED',
  RENTED = 'RENTED',
  LOYALTY = 'LOYALTY',
  F2P = 'F2P',
}

/**
 *
 * @export
 * @interface LolCatalogItemChoiceDetails
 */
export interface LolCatalogItemChoiceDetails {
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemChoiceDetails
   */
  backgroundImage?: string;
  /**
   *
   * @type {Array<LolCatalogItemDetails>}
   * @memberof LolCatalogItemChoiceDetails
   */
  contents?: Array<LolCatalogItemDetails>;
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemChoiceDetails
   */
  discount?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemChoiceDetails
   */
  displayType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogItemChoiceDetails
   */
  fullPrice?: number;
  /**
   *
   * @type {LolCatalogCatalogPluginItem}
   * @memberof LolCatalogItemChoiceDetails
   */
  item?: LolCatalogCatalogPluginItem;
  /**
   *
   * @type {object}
   * @memberof LolCatalogItemChoiceDetails
   */
  metadata?: object;
}
/**
 *
 * @export
 * @interface LolCatalogItemCost
 */
export interface LolCatalogItemCost {
  /**
   *
   * @type {number}
   * @memberof LolCatalogItemCost
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemCost
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogItemCost
   */
  discount?: number;
}
/**
 *
 * @export
 * @interface LolCatalogItemDetails
 */
export interface LolCatalogItemDetails {
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemDetails
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemDetails
   */
  iconUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemDetails
   */
  subTitle?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemDetails
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolCatalogItemKey
 */
export interface LolCatalogItemKey {
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemKey
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCatalogItemKey
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolCatalogItemLocalization
 */
export interface LolCatalogItemLocalization {
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemLocalization
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemLocalization
   */
  language?: string;
  /**
   *
   * @type {string}
   * @memberof LolCatalogItemLocalization
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolCatalogSale
 */
export interface LolCatalogSale {
  /**
   *
   * @type {string}
   * @memberof LolCatalogSale
   */
  endDate?: string;
  /**
   *
   * @type {Array<LolCatalogItemCost>}
   * @memberof LolCatalogSale
   */
  prices?: Array<LolCatalogItemCost>;
  /**
   *
   * @type {string}
   * @memberof LolCatalogSale
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectChampGridChampion
 */
export interface LolChampSelectChampGridChampion {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampGridChampion
   */
  disabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampGridChampion
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampGridChampion
   */
  freeToPlayForQueue?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampGridChampion
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampGridChampion
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampGridChampion
   */
  masteryChestGranted?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampGridChampion
   */
  masteryLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampGridChampion
   */
  masteryPoints?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampGridChampion
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampGridChampion
   */
  owned?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampSelectChampGridChampion
   */
  positionsFavorited?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampGridChampion
   */
  rented?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampSelectChampGridChampion
   */
  roles?: Array<string>;
  /**
   *
   * @type {LolChampSelectChampionSelection}
   * @memberof LolChampSelectChampGridChampion
   */
  selectionStatus?: LolChampSelectChampionSelection;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampGridChampion
   */
  squarePortraitPath?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectAction
 */
export interface LolChampSelectChampSelectAction {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectAction
   */
  actorCellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectAction
   */
  championId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectAction
   */
  completed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectAction
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectAction
   */
  isAllyAction?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectAction
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectBannedChampions
 */
export interface LolChampSelectChampSelectBannedChampions {
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectChampSelectBannedChampions
   */
  myTeamBans?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectBannedChampions
   */
  numBans?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectChampSelectBannedChampions
   */
  theirTeamBans?: Array<number>;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectChatRoomDetails
 */
export interface LolChampSelectChampSelectChatRoomDetails {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectChatRoomDetails
   */
  chatRoomName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectChatRoomDetails
   */
  chatRoomPassword?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectMySelection
 */
export interface LolChampSelectChampSelectMySelection {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectMySelection
   */
  selectedSkinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectMySelection
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectMySelection
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectMySelection
   */
  wardSkinId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectPickableSkins
 */
export interface LolChampSelectChampSelectPickableSkins {
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectChampSelectPickableSkins
   */
  skinIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectPinDropNotification
 */
export interface LolChampSelectChampSelectPinDropNotification {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectPinDropNotification
   */
  mapSide?: string;
  /**
   *
   * @type {Array<LolChampSelectChampSelectPinDropSummoner>}
   * @memberof LolChampSelectChampSelectPinDropNotification
   */
  pinDropSummoners?: Array<LolChampSelectChampSelectPinDropSummoner>;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectPinDropSummoner
 */
export interface LolChampSelectChampSelectPinDropSummoner {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectPinDropSummoner
   */
  isLocalSummoner?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectPinDropSummoner
   */
  isPlaceholder?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectPinDropSummoner
   */
  lane?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPinDropSummoner
   */
  lanePosition?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectPinDropSummoner
   */
  position?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPinDropSummoner
   */
  slotId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectPlayerSelection
 */
export interface LolChampSelectChampSelectPlayerSelection {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  assignedPosition?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  championPickIntent?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  entitledFeatureType?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  selectedSkinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  team?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectPlayerSelection
   */
  wardSkinId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectSession
 */
export interface LolChampSelectChampSelectSession {
  /**
   *
   * @type {Array<object>}
   * @memberof LolChampSelectChampSelectSession
   */
  actions?: Array<object>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  allowBattleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  allowDuplicatePicks?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  allowLockedEvents?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  allowRerolling?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  allowSkinSelection?: boolean;
  /**
   *
   * @type {LolChampSelectChampSelectBannedChampions}
   * @memberof LolChampSelectChampSelectSession
   */
  bans?: LolChampSelectChampSelectBannedChampions;
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectChampSelectSession
   */
  benchChampionIds?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  benchEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSession
   */
  boostableSkinCount?: number;
  /**
   *
   * @type {LolChampSelectChampSelectChatRoomDetails}
   * @memberof LolChampSelectChampSelectSession
   */
  chatDetails?: LolChampSelectChampSelectChatRoomDetails;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSession
   */
  counter?: number;
  /**
   *
   * @type {LolChampSelectEntitledFeatureState}
   * @memberof LolChampSelectChampSelectSession
   */
  entitledFeatureState?: LolChampSelectEntitledFeatureState;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSession
   */
  gameId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  hasSimultaneousBans?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  hasSimultaneousPicks?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  isCustomGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  isSpectating?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSession
   */
  localPlayerCellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSession
   */
  lockedEventIndex?: number;
  /**
   *
   * @type {Array<LolChampSelectChampSelectPlayerSelection>}
   * @memberof LolChampSelectChampSelectSession
   */
  myTeam?: Array<LolChampSelectChampSelectPlayerSelection>;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSession
   */
  rerollsRemaining?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSession
   */
  skipChampionSelect?: boolean;
  /**
   *
   * @type {Array<LolChampSelectChampSelectPlayerSelection>}
   * @memberof LolChampSelectChampSelectSession
   */
  theirTeam?: Array<LolChampSelectChampSelectPlayerSelection>;
  /**
   *
   * @type {LolChampSelectChampSelectTimer}
   * @memberof LolChampSelectChampSelectSession
   */
  timer?: LolChampSelectChampSelectTimer;
  /**
   *
   * @type {Array<LolChampSelectChampSelectTradeContract>}
   * @memberof LolChampSelectChampSelectSession
   */
  trades?: Array<LolChampSelectChampSelectTradeContract>;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectSummoner
 */
export interface LolChampSelectChampSelectSummoner {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  actingBackgroundAnimationState?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  activeActionType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  areSummonerActionsComplete?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  assignedPosition?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  banIntentSquarePortratPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSummoner
   */
  cellId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  championIconStyle?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  championName?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSummoner
   */
  currentChampionVotePercentInteger?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  entitledFeatureType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  isActingNow?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  isDonePicking?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  isOnPlayersTeam?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  isPickIntenting?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  isPlaceholder?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  isSelf?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  pickSnipedClass?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  shouldShowActingBar?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  shouldShowBanIntentIcon?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  shouldShowExpanded?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  shouldShowRingAnimations?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  shouldShowSelectedSkin?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  shouldShowSpells?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  showMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectSummoner
   */
  showTrades?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSummoner
   */
  skinId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  skinSplashPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSummoner
   */
  slotId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  spell1IconPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  spell2IconPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectSummoner
   */
  statusMessageKey?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectSummoner
   */
  tradeId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectTimer
 */
export interface LolChampSelectChampSelectTimer {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectTimer
   */
  adjustedTimeLeftInPhase?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectTimer
   */
  internalNowInEpochMs?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampSelectTimer
   */
  isInfinite?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampSelectTimer
   */
  phase?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectTimer
   */
  totalTimeInPhase?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectChampSelectTradeContract
 */
export interface LolChampSelectChampSelectTradeContract {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectTradeContract
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectChampSelectTradeContract
   */
  id?: number;
  /**
   *
   * @type {LolChampSelectChampSelectTradeState}
   * @memberof LolChampSelectChampSelectTradeContract
   */
  state?: LolChampSelectChampSelectTradeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChampSelectChampSelectTradeState {
  AVAILABLE = 'AVAILABLE',
  BUSY = 'BUSY',
  INVALID = 'INVALID',
  RECEIVED = 'RECEIVED',
  SENT = 'SENT',
}

/**
 *
 * @export
 * @interface LolChampSelectChampionSelection
 */
export interface LolChampSelectChampionSelection {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampionSelection
   */
  banIntented?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampionSelection
   */
  banIntentedByMe?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampionSelection
   */
  isBanned?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampionSelection
   */
  pickIntented?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampionSelection
   */
  pickIntentedByMe?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectChampionSelection
   */
  pickIntentedPosition?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampionSelection
   */
  pickedByOtherOrBanned?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectChampionSelection
   */
  selectedByMe?: boolean;
}
/**
 *
 * @export
 * @interface LolChampSelectCollectionsChampionMastery
 */
export interface LolChampSelectCollectionsChampionMastery {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectCollectionsChampionMastery
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectCollectionsChampionMastery
   */
  championLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectCollectionsChampionMastery
   */
  championPoints?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectCollectionsChampionMastery
   */
  chestGranted?: boolean;
}
/**
 *
 * @export
 * @interface LolChampSelectCollectionsChampionMinimal
 */
export interface LolChampSelectCollectionsChampionMinimal {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  banVoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  chooseVoPath?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  disabledQueues?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  name?: string;
  /**
   *
   * @type {LolChampSelectCollectionsOwnership}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  ownership?: LolChampSelectCollectionsOwnership;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  roles?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  squarePortraitPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectCollectionsChampionMinimal
   */
  stingerSfxPath?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectCollectionsChampionSkinMinimal
 */
export interface LolChampSelectCollectionsChampionSkinMinimal {
  /**
   *
   * @type {Array<LolChampSelectCollectionsChromaSkin>}
   * @memberof LolChampSelectCollectionsChampionSkinMinimal
   */
  chromas?: Array<LolChampSelectCollectionsChromaSkin>;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectCollectionsChampionSkinMinimal
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectCollectionsChampionSkinMinimal
   */
  splashPath?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectCollectionsChromaSkin
 */
export interface LolChampSelectCollectionsChromaSkin {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectCollectionsChromaSkin
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectCollectionsOwnership
 */
export interface LolChampSelectCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectCollectionsOwnership
   */
  owned?: boolean;
  /**
   *
   * @type {LolChampSelectCollectionsRental}
   * @memberof LolChampSelectCollectionsOwnership
   */
  rental?: LolChampSelectCollectionsRental;
}
/**
 *
 * @export
 * @interface LolChampSelectCollectionsRental
 */
export interface LolChampSelectCollectionsRental {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectCollectionsRental
   */
  rented?: boolean;
}
/**
 *
 * @export
 * @interface LolChampSelectEntitledFeatureState
 */
export interface LolChampSelectEntitledFeatureState {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectEntitledFeatureState
   */
  additionalRerolls?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectEntitledFeatureState
   */
  unlockedSkinIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolChampSelectGameDataSummonerSpell
 */
export interface LolChampSelectGameDataSummonerSpell {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectGameDataSummonerSpell
   */
  iconPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectGameDataSummonerSpell
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyChampSelectAction
 */
export interface LolChampSelectLegacyChampSelectAction {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectAction
   */
  actorCellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectAction
   */
  championId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectAction
   */
  completed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectAction
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectAction
   */
  isAllyAction?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectAction
   */
  isInProgress?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectAction
   */
  pickTurn?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyChampSelectAction
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyChampSelectBannedChampions
 */
export interface LolChampSelectLegacyChampSelectBannedChampions {
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectLegacyChampSelectBannedChampions
   */
  myTeamBans?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectBannedChampions
   */
  numBans?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectLegacyChampSelectBannedChampions
   */
  theirTeamBans?: Array<number>;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyChampSelectChatRoomDetails
 */
export interface LolChampSelectLegacyChampSelectChatRoomDetails {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyChampSelectChatRoomDetails
   */
  chatRoomName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyChampSelectChatRoomDetails
   */
  chatRoomPassword?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyChampSelectMySelection
 */
export interface LolChampSelectLegacyChampSelectMySelection {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectMySelection
   */
  selectedSkinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectMySelection
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectMySelection
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectMySelection
   */
  wardSkinId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyChampSelectPlayerSelection
 */
export interface LolChampSelectLegacyChampSelectPlayerSelection {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  assignedPosition?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  championPickIntent?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  playerType?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  selectedSkinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  team?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectPlayerSelection
   */
  wardSkinId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyChampSelectSession
 */
export interface LolChampSelectLegacyChampSelectSession {
  /**
   *
   * @type {Array<object>}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  actions?: Array<object>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  allowBattleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  allowRerolling?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  allowSkinSelection?: boolean;
  /**
   *
   * @type {LolChampSelectLegacyChampSelectBannedChampions}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  bans?: LolChampSelectLegacyChampSelectBannedChampions;
  /**
   *
   * @type {LolChampSelectLegacyChampSelectChatRoomDetails}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  chatDetails?: LolChampSelectLegacyChampSelectChatRoomDetails;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  hasSimultaneousBans?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  hasSimultaneousPicks?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  isCustomGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  isSpectating?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  localPlayerCellId?: number;
  /**
   *
   * @type {Array<LolChampSelectLegacyChampSelectPlayerSelection>}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  myTeam?: Array<LolChampSelectLegacyChampSelectPlayerSelection>;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  rerollsRemaining?: number;
  /**
   *
   * @type {Array<LolChampSelectLegacyChampSelectPlayerSelection>}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  theirTeam?: Array<LolChampSelectLegacyChampSelectPlayerSelection>;
  /**
   *
   * @type {LolChampSelectLegacyChampSelectTimer}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  timer?: LolChampSelectLegacyChampSelectTimer;
  /**
   *
   * @type {Array<LolChampSelectLegacyChampSelectTradeContract>}
   * @memberof LolChampSelectLegacyChampSelectSession
   */
  trades?: Array<LolChampSelectLegacyChampSelectTradeContract>;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyChampSelectTimer
 */
export interface LolChampSelectLegacyChampSelectTimer {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectTimer
   */
  adjustedTimeLeftInPhase?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectTimer
   */
  internalNowInEpochMs?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyChampSelectTimer
   */
  isInfinite?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyChampSelectTimer
   */
  phase?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectTimer
   */
  totalTimeInPhase?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyChampSelectTradeContract
 */
export interface LolChampSelectLegacyChampSelectTradeContract {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectTradeContract
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyChampSelectTradeContract
   */
  id?: number;
  /**
   *
   * @type {LolChampSelectLegacyChampSelectTradeState}
   * @memberof LolChampSelectLegacyChampSelectTradeContract
   */
  state?: LolChampSelectLegacyChampSelectTradeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChampSelectLegacyChampSelectTradeState {
  AVAILABLE = 'AVAILABLE',
  BUSY = 'BUSY',
  INVALID = 'INVALID',
  RECEIVED = 'RECEIVED',
  SENT = 'SENT',
}

/**
 *
 * @export
 * @interface LolChampSelectLegacyCollectionsChampion
 */
export interface LolChampSelectLegacyCollectionsChampion {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyCollectionsChampion
   */
  active?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampSelectLegacyCollectionsChampion
   */
  disabledQueues?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyCollectionsChampion
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyCollectionsChampion
   */
  id?: number;
  /**
   *
   * @type {LolChampSelectLegacyCollectionsOwnership}
   * @memberof LolChampSelectLegacyCollectionsChampion
   */
  ownership?: LolChampSelectLegacyCollectionsOwnership;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyCollectionsOwnership
 */
export interface LolChampSelectLegacyCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyCollectionsOwnership
   */
  owned?: boolean;
  /**
   *
   * @type {LolChampSelectLegacyCollectionsRental}
   * @memberof LolChampSelectLegacyCollectionsOwnership
   */
  rental?: LolChampSelectLegacyCollectionsRental;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyCollectionsRental
 */
export interface LolChampSelectLegacyCollectionsRental {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyCollectionsRental
   */
  rented?: boolean;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyGameflowGameClient
 */
export interface LolChampSelectLegacyGameflowGameClient {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyGameflowGameClient
   */
  running?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyGameflowGameClient
   */
  visible?: boolean;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyGameflowGameData
 */
export interface LolChampSelectLegacyGameflowGameData {
  /**
   *
   * @type {LolChampSelectLegacyQueue}
   * @memberof LolChampSelectLegacyGameflowGameData
   */
  queue?: LolChampSelectLegacyQueue;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyGameflowGameDodge
 */
export interface LolChampSelectLegacyGameflowGameDodge {
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectLegacyGameflowGameDodge
   */
  dodgeIds?: Array<number>;
  /**
   *
   * @type {LolChampSelectLegacyGameflowGameDodgeState}
   * @memberof LolChampSelectLegacyGameflowGameDodge
   */
  state?: LolChampSelectLegacyGameflowGameDodgeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChampSelectLegacyGameflowGameDodgeState {
  Invalid = 'Invalid',
  PartyDodged = 'PartyDodged',
  StrangerDodged = 'StrangerDodged',
  TournamentDodged = 'TournamentDodged',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolChampSelectLegacyGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolChampSelectLegacyGameflowSession
 */
export interface LolChampSelectLegacyGameflowSession {
  /**
   *
   * @type {LolChampSelectLegacyGameflowGameClient}
   * @memberof LolChampSelectLegacyGameflowSession
   */
  gameClient?: LolChampSelectLegacyGameflowGameClient;
  /**
   *
   * @type {LolChampSelectLegacyGameflowGameData}
   * @memberof LolChampSelectLegacyGameflowSession
   */
  gameData?: LolChampSelectLegacyGameflowGameData;
  /**
   *
   * @type {LolChampSelectLegacyGameflowPhase}
   * @memberof LolChampSelectLegacyGameflowSession
   */
  phase?: LolChampSelectLegacyGameflowPhase;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyLobbyStatus
 */
export interface LolChampSelectLegacyLobbyStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyLobbyStatus
   */
  allowedPlayAgain?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyLobbyStatus
   */
  isCustom?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyLobbyStatus
   */
  isLeader?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyLobbyStatus
   */
  isSpectator?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectLegacyLobbyStatus
   */
  memberSummonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyLobbyStatus
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyLoginSession
 */
export interface LolChampSelectLegacyLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {LolChampSelectLegacyLoginSessionStates}
   * @memberof LolChampSelectLegacyLoginSession
   */
  state?: LolChampSelectLegacyLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChampSelectLegacyLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolChampSelectLegacyPlayerStatus
 */
export interface LolChampSelectLegacyPlayerStatus {
  /**
   *
   * @type {LolChampSelectLegacyLobbyStatus}
   * @memberof LolChampSelectLegacyPlayerStatus
   */
  currentLobbyStatus?: LolChampSelectLegacyLobbyStatus;
  /**
   *
   * @type {LolChampSelectLegacyLobbyStatus}
   * @memberof LolChampSelectLegacyPlayerStatus
   */
  lastQueuedLobbyStatus?: LolChampSelectLegacyLobbyStatus;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyQueue
 */
export interface LolChampSelectLegacyQueue {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyQueue
   */
  areFreeChampionsAllowed?: boolean;
  /**
   *
   * @type {LolChampSelectLegacyQueueGameTypeConfig}
   * @memberof LolChampSelectLegacyQueue
   */
  gameTypeConfig?: LolChampSelectLegacyQueueGameTypeConfig;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyQueueGameTypeConfig
 */
export interface LolChampSelectLegacyQueueGameTypeConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyQueueGameTypeConfig
   */
  allowTrades?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyQueueGameTypeConfig
   */
  battleBoost?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyQueueGameTypeConfig
   */
  maxAllowableBans?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyQueueGameTypeConfig
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacySummoner
 */
export interface LolChampSelectLegacySummoner {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacySummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectLegacyTeamBoost
 */
export interface LolChampSelectLegacyTeamBoost {
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectLegacyTeamBoost
   */
  availableSkins?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyTeamBoost
   */
  ipReward?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyTeamBoost
   */
  ipRewardForPurchaser?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLegacyTeamBoost
   */
  price?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyTeamBoost
   */
  skinUnlockMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectLegacyTeamBoost
   */
  summonerName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectLegacyTeamBoost
   */
  unlocked?: boolean;
}
/**
 *
 * @export
 * @interface LolChampSelectLoginSession
 */
export interface LolChampSelectLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectMutedPlayerInfo
 */
export interface LolChampSelectMutedPlayerInfo {
  /**
   *
   * @type {string}
   * @memberof LolChampSelectMutedPlayerInfo
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectMutedPlayerInfo
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectSettingsResource
 */
export interface LolChampSelectSettingsResource {
  /**
   *
   * @type {object}
   * @memberof LolChampSelectSettingsResource
   */
  data?: object;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectSettingsResource
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolChampSelectSfxNotification
 */
export interface LolChampSelectSfxNotification {
  /**
   *
   * @type {number}
   * @memberof LolChampSelectSfxNotification
   */
  delayMillis?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectSfxNotification
   */
  eventType?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectSfxNotification
   */
  path?: string;
}
/**
 *
 * @export
 * @interface LolChampSelectTeamBoost
 */
export interface LolChampSelectTeamBoost {
  /**
   *
   * @type {Array<number>}
   * @memberof LolChampSelectTeamBoost
   */
  availableSkins?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectTeamBoost
   */
  ipReward?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectTeamBoost
   */
  ipRewardForPurchaser?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectTeamBoost
   */
  price?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampSelectTeamBoost
   */
  skinUnlockMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampSelectTeamBoost
   */
  summonerId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampSelectTeamBoost
   */
  unlocked?: boolean;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampion
 */
export interface LolChampionsCollectionsChampion {
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampion
   */
  active?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampion
   */
  alias?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampion
   */
  banVoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampion
   */
  baseLoadScreenPath?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampion
   */
  botEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampion
   */
  chooseVoPath?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampionsCollectionsChampion
   */
  disabledQueues?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampion
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampion
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampion
   */
  name?: string;
  /**
   *
   * @type {LolChampionsCollectionsOwnership}
   * @memberof LolChampionsCollectionsChampion
   */
  ownership?: LolChampionsCollectionsOwnership;
  /**
   *
   * @type {LolChampionsCollectionsChampionSpell}
   * @memberof LolChampionsCollectionsChampion
   */
  passive?: LolChampionsCollectionsChampionSpell;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampion
   */
  purchased?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampion
   */
  rankedPlayEnabled?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampionsCollectionsChampion
   */
  roles?: Array<string>;
  /**
   *
   * @type {Array<LolChampionsCollectionsChampionSkin>}
   * @memberof LolChampionsCollectionsChampion
   */
  skins?: Array<LolChampionsCollectionsChampionSkin>;
  /**
   *
   * @type {Array<LolChampionsCollectionsChampionSpell>}
   * @memberof LolChampionsCollectionsChampion
   */
  spells?: Array<LolChampionsCollectionsChampionSpell>;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampion
   */
  squarePortraitPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampion
   */
  stingerSfxPath?: string;
  /**
   *
   * @type {LolChampionsCollectionsChampionTacticalInfo}
   * @memberof LolChampionsCollectionsChampion
   */
  tacticalInfo?: LolChampionsCollectionsChampionTacticalInfo;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampion
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionChroma
 */
export interface LolChampionsCollectionsChampionChroma {
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  chromaPath?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  colors?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  disabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  lastSelected?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  name?: string;
  /**
   *
   * @type {LolChampionsCollectionsOwnership}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  ownership?: LolChampionsCollectionsOwnership;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionChroma
   */
  stillObtainable?: boolean;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionMinimal
 */
export interface LolChampionsCollectionsChampionMinimal {
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  active?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  alias?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  banVoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  baseLoadScreenPath?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  botEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  chooseVoPath?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  disabledQueues?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  name?: string;
  /**
   *
   * @type {LolChampionsCollectionsOwnership}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  ownership?: LolChampionsCollectionsOwnership;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  purchased?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  rankedPlayEnabled?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  roles?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  squarePortraitPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  stingerSfxPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionMinimal
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionPlayableCounts
 */
export interface LolChampionsCollectionsChampionPlayableCounts {
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionPlayableCounts
   */
  championsFreeToPlay?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionPlayableCounts
   */
  championsFreeToPlayReward?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionPlayableCounts
   */
  championsOwned?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionPlayableCounts
   */
  championsRented?: number;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionSkin
 */
export interface LolChampionsCollectionsChampionSkin {
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  chromaPath?: string;
  /**
   *
   * @type {Array<LolChampionsCollectionsChampionChroma>}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  chromas?: Array<LolChampionsCollectionsChampionChroma>;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  disabled?: boolean;
  /**
   *
   * @type {Array<LolChampionsCollectionsChampionSkinEmblem>}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  emblems?: Array<LolChampionsCollectionsChampionSkinEmblem>;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  featuresText?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  isBase?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  lastSelected?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  loadScreenPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  name?: string;
  /**
   *
   * @type {LolChampionsCollectionsOwnership}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  ownership?: LolChampionsCollectionsOwnership;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  rarityGemPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  skinType?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  splashPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  splashVideoPath?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  stillObtainable?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  tilePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkin
   */
  uncenteredSplashPath?: string;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionSkinEmblem
 */
export interface LolChampionsCollectionsChampionSkinEmblem {
  /**
   *
   * @type {LolChampionsCollectionsChampionSkinEmblemPath}
   * @memberof LolChampionsCollectionsChampionSkinEmblem
   */
  emblemPath?: LolChampionsCollectionsChampionSkinEmblemPath;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinEmblem
   */
  name?: string;
  /**
   *
   * @type {LolChampionsCollectionsChampionSkinEmblemPosition}
   * @memberof LolChampionsCollectionsChampionSkinEmblem
   */
  positions?: LolChampionsCollectionsChampionSkinEmblemPosition;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionSkinEmblemPath
 */
export interface LolChampionsCollectionsChampionSkinEmblemPath {
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinEmblemPath
   */
  large?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinEmblemPath
   */
  small?: string;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionSkinEmblemPosition
 */
export interface LolChampionsCollectionsChampionSkinEmblemPosition {
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinEmblemPosition
   */
  horizontal?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinEmblemPosition
   */
  vertical?: string;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionSkinMinimal
 */
export interface LolChampionsCollectionsChampionSkinMinimal {
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  chromaPath?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  disabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  isBase?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  lastSelected?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  name?: string;
  /**
   *
   * @type {LolChampionsCollectionsOwnership}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  ownership?: LolChampionsCollectionsOwnership;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  splashPath?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  stillObtainable?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSkinMinimal
   */
  tilePath?: string;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionSpell
 */
export interface LolChampionsCollectionsChampionSpell {
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSpell
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionSpell
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsChampionTacticalInfo
 */
export interface LolChampionsCollectionsChampionTacticalInfo {
  /**
   *
   * @type {string}
   * @memberof LolChampionsCollectionsChampionTacticalInfo
   */
  damageType?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionTacticalInfo
   */
  difficulty?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsChampionTacticalInfo
   */
  style?: number;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsOwnership
 */
export interface LolChampionsCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsOwnership
   */
  owned?: boolean;
  /**
   *
   * @type {LolChampionsCollectionsRental}
   * @memberof LolChampionsCollectionsOwnership
   */
  rental?: LolChampionsCollectionsRental;
}
/**
 *
 * @export
 * @interface LolChampionsCollectionsRental
 */
export interface LolChampionsCollectionsRental {
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsRental
   */
  endDate?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsRental
   */
  purchaseDate?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsCollectionsRental
   */
  rented?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChampionsCollectionsRental
   */
  winCountRemaining?: number;
}
/**
 *
 * @export
 * @interface LolChampionsGameDataChampion
 */
export interface LolChampionsGameDataChampion {
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampion
   */
  alias?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampion
   */
  banVoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampion
   */
  chooseVoPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampionsGameDataChampion
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampion
   */
  name?: string;
  /**
   *
   * @type {LolChampionsGameDataChampionSpell}
   * @memberof LolChampionsGameDataChampion
   */
  passive?: LolChampionsGameDataChampionSpell;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampionsGameDataChampion
   */
  roles?: Array<string>;
  /**
   *
   * @type {Array<LolChampionsGameDataChampionSkin>}
   * @memberof LolChampionsGameDataChampion
   */
  skins?: Array<LolChampionsGameDataChampionSkin>;
  /**
   *
   * @type {Array<LolChampionsGameDataChampionSpell>}
   * @memberof LolChampionsGameDataChampion
   */
  spells?: Array<LolChampionsGameDataChampionSpell>;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampion
   */
  squarePortraitPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampion
   */
  stingerSfxPath?: string;
  /**
   *
   * @type {LolChampionsGameDataChampionTacticalInfo}
   * @memberof LolChampionsGameDataChampion
   */
  tacticalInfo?: LolChampionsGameDataChampionTacticalInfo;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampion
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolChampionsGameDataChampionChroma
 */
export interface LolChampionsGameDataChampionChroma {
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionChroma
   */
  chromaPath?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChampionsGameDataChampionChroma
   */
  colors?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolChampionsGameDataChampionChroma
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LolChampionsGameDataChampionSkin
 */
export interface LolChampionsGameDataChampionSkin {
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  chromaPath?: string;
  /**
   *
   * @type {Array<LolChampionsGameDataChampionChroma>}
   * @memberof LolChampionsGameDataChampionSkin
   */
  chromas?: Array<LolChampionsGameDataChampionChroma>;
  /**
   *
   * @type {Array<LolChampionsCollectionsChampionSkinEmblem>}
   * @memberof LolChampionsGameDataChampionSkin
   */
  emblems?: Array<LolChampionsCollectionsChampionSkinEmblem>;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  featuresText?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampionsGameDataChampionSkin
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  loadScreenPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  rarityGemPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  skinType?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  splashPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  splashVideoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  tilePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSkin
   */
  uncenteredSplashPath?: string;
}
/**
 *
 * @export
 * @interface LolChampionsGameDataChampionSpell
 */
export interface LolChampionsGameDataChampionSpell {
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSpell
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionSpell
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolChampionsGameDataChampionSummary
 */
export interface LolChampionsGameDataChampionSummary {
  /**
   *
   * @type {number}
   * @memberof LolChampionsGameDataChampionSummary
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LolChampionsGameDataChampionTacticalInfo
 */
export interface LolChampionsGameDataChampionTacticalInfo {
  /**
   *
   * @type {string}
   * @memberof LolChampionsGameDataChampionTacticalInfo
   */
  damageType?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampionsGameDataChampionTacticalInfo
   */
  difficulty?: number;
  /**
   *
   * @type {number}
   * @memberof LolChampionsGameDataChampionTacticalInfo
   */
  style?: number;
}
/**
 *
 * @export
 * @interface LolChampionsLcdsDynamicClientConfig
 */
export interface LolChampionsLcdsDynamicClientConfig {
  /**
   *
   * @type {object}
   * @memberof LolChampionsLcdsDynamicClientConfig
   */
  DisabledChampions?: object;
}
/**
 *
 * @export
 * @interface LolChampionsLoginSession
 */
export interface LolChampionsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolChampionsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {LolChampionsLoginSessionStates}
   * @memberof LolChampionsLoginSession
   */
  state?: LolChampionsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolChampionsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChampionsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolChampionsPlayerNotification
 */
export interface LolChampionsPlayerNotification {
  /**
   *
   * @type {string}
   * @memberof LolChampionsPlayerNotification
   */
  backgroundUrl?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChampionsPlayerNotification
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolChampionsPlayerNotification
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolChampionsPlayerNotification
   */
  detailKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsPlayerNotification
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolChampionsPlayerNotification
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChampionsPlayerNotification
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsPlayerNotification
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsPlayerNotification
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolChampionsPlayerNotification
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolChampionsSummoner
 */
export interface LolChampionsSummoner {
  /**
   *
   * @type {number}
   * @memberof LolChampionsSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatAccountState {
  Offline = 'offline',
  Mobile = 'mobile',
  Away = 'away',
  Chat = 'chat',
  Dnd = 'dnd',
}

/**
 *
 * @export
 * @interface LolChatActiveConversationResource
 */
export interface LolChatActiveConversationResource {
  /**
   *
   * @type {string}
   * @memberof LolChatActiveConversationResource
   */
  id?: string;
}
/**
 *
 * @export
 * @interface LolChatAuthResourcePlain
 */
export interface LolChatAuthResourcePlain {
  /**
   *
   * @type {object}
   * @memberof LolChatAuthResourcePlain
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolChatAuthResourcePlain
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatAuthResourcePlain
   */
  username?: string;
}
/**
 *
 * @export
 * @interface LolChatAuthResourceRsoAccessToken
 */
export interface LolChatAuthResourceRsoAccessToken {
  /**
   *
   * @type {number}
   * @memberof LolChatAuthResourceRsoAccessToken
   */
  expiry?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChatAuthResourceRsoAccessToken
   */
  scopes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolChatAuthResourceRsoAccessToken
   */
  token?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatAuthType {
  Plain = 'plain',
  RsoCreate = 'rsoCreate',
  RsoRefresh = 'rsoRefresh',
}

/**
 *
 * @export
 * @interface LolChatBlocked
 */
export interface LolChatBlocked {
  /**
   *
   * @type {string}
   * @memberof LolChatBlocked
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatBlocked
   */
  game_tag?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatBlocked
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatBlocked
   */
  pid?: string;
}
/**
 *
 * @export
 * @interface LolChatBlockedList
 */
export interface LolChatBlockedList {
  /**
   *
   * @type {Array<LolChatBlocked>}
   * @memberof LolChatBlockedList
   */
  blocked?: Array<LolChatBlocked>;
}
/**
 *
 * @export
 * @interface LolChatBlockedPlayerResource
 */
export interface LolChatBlockedPlayerResource {
  /**
   *
   * @type {string}
   * @memberof LolChatBlockedPlayerResource
   */
  gameName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatBlockedPlayerResource
   */
  gameTag?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatBlockedPlayerResource
   */
  icon?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatBlockedPlayerResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatBlockedPlayerResource
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatBlockedPlayerResource
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatBlockedPlayerResource
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatBlockedPlayerResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolChatChampSelection
 */
export interface LolChatChampSelection {
  /**
   *
   * @type {number}
   * @memberof LolChatChampSelection
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatChampSelection
   */
  selectedSkinIndex?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatChampSelection
   */
  summonerInternalName?: string;
}
/**
 *
 * @export
 * @interface LolChatChatDomainConfig
 */
export interface LolChatChatDomainConfig {
  /**
   *
   * @type {string}
   * @memberof LolChatChatDomainConfig
   */
  ChampSelectDomainName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatDomainConfig
   */
  ClubDomainName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatDomainConfig
   */
  CustomGameDomainName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatDomainConfig
   */
  P2PDomainName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatDomainConfig
   */
  PostGameDomainName?: string;
}
/**
 *
 * @export
 * @interface LolChatChatFriendUpdate
 */
export interface LolChatChatFriendUpdate {
  /**
   *
   * @type {string}
   * @memberof LolChatChatFriendUpdate
   */
  group?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatFriendUpdate
   */
  note?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatFriendUpdate
   */
  pid?: string;
}
/**
 *
 * @export
 * @interface LolChatChatMessage
 */
export interface LolChatChatMessage {
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  body?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  cid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  game_tag?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  mid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  pid?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatMessage
   */
  read?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatChatMessage
   */
  time?: string;
  /**
   *
   * @type {LolChatMessageType}
   * @memberof LolChatChatMessage
   */
  type?: LolChatMessageType;
}
/**
 *
 * @export
 * @interface LolChatChatMessageList
 */
export interface LolChatChatMessageList {
  /**
   *
   * @type {Array<LolChatChatMessage>}
   * @memberof LolChatChatMessageList
   */
  messages?: Array<LolChatChatMessage>;
}
/**
 *
 * @export
 * @interface LolChatChatPlatformLoginSession
 */
export interface LolChatChatPlatformLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolChatChatPlatformLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof LolChatChatPlatformLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolChatChatPlatformLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatPlatformLoginSession
   */
  isNewPlayer?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatChatPlatformLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolChatChatPlatformLoginSessionState}
   * @memberof LolChatChatPlatformLoginSession
   */
  state?: LolChatChatPlatformLoginSessionState;
  /**
   *
   * @type {number}
   * @memberof LolChatChatPlatformLoginSession
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatChatPlatformLoginSession
   */
  userAuthToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatChatPlatformLoginSession
   */
  username?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatChatPlatformLoginSessionState {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolChatChatServiceDynamicClientConfig
 */
export interface LolChatChatServiceDynamicClientConfig {
  /**
   *
   * @type {LolChatChatDomainConfig}
   * @memberof LolChatChatServiceDynamicClientConfig
   */
  ChatDomain?: LolChatChatDomainConfig;
  /**
   *
   * @type {LolChatLcuSocialConfig}
   * @memberof LolChatChatServiceDynamicClientConfig
   */
  LcuSocial?: LolChatLcuSocialConfig;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatChatSessionState {
  Disconnected = 'disconnected',
  Connecting = 'connecting',
  Connected = 'connected',
}

/**
 *
 * @export
 * @interface LolChatChatSettings
 */
export interface LolChatChatSettings {
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  bounceDockIconEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatChatSettings
   */
  chat_status_message?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  chatFilterDisabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  chatGBG?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  chatGroupMobile?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  chatGroupOffline?: boolean;
  /**
   *
   * @type {LolChatChatWindowSettings}
   * @memberof LolChatChatSettings
   */
  chatWindow?: LolChatChatWindowSettings;
  /**
   *
   * @type {number}
   * @memberof LolChatChatSettings
   */
  chatWindowDockedHeight?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolChatChatSettings
   */
  closed_conversations?: { [key: string]: number };
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  friendRequestToastsDisabled?: boolean;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolChatChatSettings
   */
  hidden_conversations?: { [key: string]: number };
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  linkClickWarningEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  messageNotificationsEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  moreUnreadsEnabled?: boolean;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolChatChatSettings
   */
  muted_conversations?: { [key: string]: number };
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  recentlyPlayedFirstOpen?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  recentlyPlayedOpen?: boolean;
  /**
   *
   * @type {{ [key: string]: boolean; }}
   * @memberof LolChatChatSettings
   */
  roster_group_collapsed?: { [key: string]: boolean };
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  showWhenTypingEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatChatSettings
   */
  sortBy?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatSettings
   */
  usePlayerPreferences?: boolean;
}
/**
 *
 * @export
 * @interface LolChatChatSummoner
 */
export interface LolChatChatSummoner {
  /**
   *
   * @type {string}
   * @memberof LolChatChatSummoner
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatChatSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatChatSummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatChatSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatChatSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolChatChatWindowSettings
 */
export interface LolChatChatWindowSettings {
  /**
   *
   * @type {boolean}
   * @memberof LolChatChatWindowSettings
   */
  detached?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChatChatWindowSettings
   */
  height?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatChatWindowSettings
   */
  left?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatChatWindowSettings
   */
  top?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatChatWindowSettings
   */
  width?: number;
}
/**
 *
 * @export
 * @interface LolChatCidBody
 */
export interface LolChatCidBody {
  /**
   *
   * @type {string}
   * @memberof LolChatCidBody
   */
  cid?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatConfigReadinessEnum {
  NotReady = 'NotReady',
  Ready = 'Ready',
  Disabled = 'Disabled',
}

/**
 *
 * @export
 * @interface LolChatConfigStatus
 */
export interface LolChatConfigStatus {
  /**
   *
   * @type {LolChatConfigReadinessEnum}
   * @memberof LolChatConfigStatus
   */
  readiness?: LolChatConfigReadinessEnum;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatConfigType {
  Public = 'public',
  Player = 'player',
}

/**
 *
 * @export
 * @interface LolChatContentCookies
 */
export interface LolChatContentCookies {
  /**
   *
   * @type {string}
   * @memberof LolChatContentCookies
   */
  content_id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatContentCookies
   */
  content_path?: string;
  /**
   *
   * @type {Array<LolChatcookie>}
   * @memberof LolChatContentCookies
   */
  cookies?: Array<LolChatcookie>;
}
/**
 *
 * @export
 * @interface LolChatConversation
 */
export interface LolChatConversation {
  /**
   *
   * @type {string}
   * @memberof LolChatConversation
   */
  cid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversation
   */
  mid?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatConversation
   */
  muted?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatConversation
   */
  type?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatConversation
   */
  unread_count?: number;
}
/**
 *
 * @export
 * @interface LolChatConversationJoinFederated
 */
export interface LolChatConversationJoinFederated {
  /**
   *
   * @type {string}
   * @memberof LolChatConversationJoinFederated
   */
  domain?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatConversationJoinFederated
   */
  hidden?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationJoinFederated
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationJoinFederated
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationJoinFederated
   */
  targetRegion?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationJoinFederated
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolChatConversationList
 */
export interface LolChatConversationList {
  /**
   *
   * @type {Array<LolChatConversation>}
   * @memberof LolChatConversationList
   */
  conversations?: Array<LolChatConversation>;
}
/**
 *
 * @export
 * @interface LolChatConversationMessageResource
 */
export interface LolChatConversationMessageResource {
  /**
   *
   * @type {string}
   * @memberof LolChatConversationMessageResource
   */
  body?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationMessageResource
   */
  fromId?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationMessageResource
   */
  fromPid?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatConversationMessageResource
   */
  fromSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationMessageResource
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatConversationMessageResource
   */
  isHistorical?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationMessageResource
   */
  timestamp?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationMessageResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolChatConversationResource
 */
export interface LolChatConversationResource {
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  gameName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  gameTag?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  inviterId?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatConversationResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {LolChatConversationMessageResource}
   * @memberof LolChatConversationResource
   */
  lastMessage?: LolChatConversationMessageResource;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  targetRegion?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatConversationResource
   */
  type?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatConversationResource
   */
  unreadMessageCount?: number;
}
/**
 *
 * @export
 * @interface LolChatConversationUpdate
 */
export interface LolChatConversationUpdate {
  /**
   *
   * @type {string}
   * @memberof LolChatConversationUpdate
   */
  cid?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatConversationUpdate
   */
  hidden?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatConversationUpdate
   */
  muted?: boolean;
}
/**
 *
 * @export
 * @interface LolChatDebugResource
 */
export interface LolChatDebugResource {
  /**
   *
   * @type {number}
   * @memberof LolChatDebugResource
   */
  asyncWaitInterval?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChatDebugResource
   */
  enableChatFiltering?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatDebugResource
   */
  failAllChatLogin?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatDebugResource
   */
  failNextChatLogin?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatDebugResource
   */
  failNextChatLogout?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatDebugResource
   */
  failNextKeepAlive?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatDebugResource
   */
  isXMPPLoggingEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChatDebugResource
   */
  keepAliveInterval?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatDebugResource
   */
  maxReconnectInterval?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatDebugResource
   */
  minReconnectInterval?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChatDebugResource
   */
  silenceChatWhileInGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatDebugResource
   */
  triggerChatDisconnect?: boolean;
}
/**
 *
 * @export
 * @interface LolChatError
 */
export interface LolChatError {
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  cid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  _class?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  code?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  subtype?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  text?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  ts?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatError
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolChatErrorList
 */
export interface LolChatErrorList {
  /**
   *
   * @type {Array<LolChatError>}
   * @memberof LolChatErrorList
   */
  errors?: Array<LolChatError>;
}
/**
 *
 * @export
 * @interface LolChatErrorResource
 */
export interface LolChatErrorResource {
  /**
   *
   * @type {number}
   * @memberof LolChatErrorResource
   */
  code?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatErrorResource
   */
  from?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatErrorResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatErrorResource
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatErrorResource
   */
  text?: string;
}
/**
 *
 * @export
 * @interface LolChatFriend
 */
export interface LolChatFriend {
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  displayGroup?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  game_tag?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  group?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  note?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriend
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolChatFriendCountsResource
 */
export interface LolChatFriendCountsResource {
  /**
   *
   * @type {number}
   * @memberof LolChatFriendCountsResource
   */
  numFriends?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendCountsResource
   */
  numFriendsAvailable?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendCountsResource
   */
  numFriendsAway?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendCountsResource
   */
  numFriendsInChampSelect?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendCountsResource
   */
  numFriendsInGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendCountsResource
   */
  numFriendsInQueue?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendCountsResource
   */
  numFriendsMobile?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendCountsResource
   */
  numFriendsOnline?: number;
}
/**
 *
 * @export
 * @interface LolChatFriendGroup
 */
export interface LolChatFriendGroup {
  /**
   *
   * @type {boolean}
   * @memberof LolChatFriendGroup
   */
  collapsed?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatFriendGroup
   */
  isMetaGroup?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendGroup
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolChatFriendGroupCreate
 */
export interface LolChatFriendGroupCreate {
  /**
   *
   * @type {boolean}
   * @memberof LolChatFriendGroupCreate
   */
  collapsed?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendGroupCreate
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolChatFriendGroupList
 */
export interface LolChatFriendGroupList {
  /**
   *
   * @type {Array<LolChatFriendGroup>}
   * @memberof LolChatFriendGroupList
   */
  groups?: Array<LolChatFriendGroup>;
}
/**
 *
 * @export
 * @interface LolChatFriendGroupOrder
 */
export interface LolChatFriendGroupOrder {
  /**
   *
   * @type {Array<string>}
   * @memberof LolChatFriendGroupOrder
   */
  groups?: Array<string>;
}
/**
 *
 * @export
 * @interface LolChatFriendGroupUpdate
 */
export interface LolChatFriendGroupUpdate {
  /**
   *
   * @type {boolean}
   * @memberof LolChatFriendGroupUpdate
   */
  collapsed?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendGroupUpdate
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendGroupUpdate
   */
  new_name?: string;
}
/**
 *
 * @export
 * @interface LolChatFriendList
 */
export interface LolChatFriendList {
  /**
   *
   * @type {Array<LolChatFriend>}
   * @memberof LolChatFriendList
   */
  friends?: Array<LolChatFriend>;
}
/**
 *
 * @export
 * @interface LolChatFriendRequest
 */
export interface LolChatFriendRequest {
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequest
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequest
   */
  game_tag?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequest
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequest
   */
  note?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequest
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequest
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequest
   */
  region?: string;
  /**
   *
   * @type {LolChatFriendSubscriptionType}
   * @memberof LolChatFriendRequest
   */
  subscription?: LolChatFriendSubscriptionType;
}
/**
 *
 * @export
 * @interface LolChatFriendRequestAdd
 */
export interface LolChatFriendRequestAdd {
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestAdd
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestAdd
   */
  game_tag?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestAdd
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestAdd
   */
  note?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestAdd
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestAdd
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestAdd
   */
  region?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatFriendRequestDirection {
  In = 'in',
  Out = 'out',
  Both = 'both',
}

/**
 *
 * @export
 * @interface LolChatFriendRequestList
 */
export interface LolChatFriendRequestList {
  /**
   *
   * @type {Array<LolChatFriendRequest>}
   * @memberof LolChatFriendRequestList
   */
  requests?: Array<LolChatFriendRequest>;
}
/**
 *
 * @export
 * @interface LolChatFriendRequestResource
 */
export interface LolChatFriendRequestResource {
  /**
   *
   * @type {LolChatFriendRequestDirection}
   * @memberof LolChatFriendRequestResource
   */
  direction?: LolChatFriendRequestDirection;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestResource
   */
  gameName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestResource
   */
  gameTag?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendRequestResource
   */
  icon?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestResource
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestResource
   */
  note?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestResource
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendRequestResource
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendRequestResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolChatFriendResource
 */
export interface LolChatFriendResource {
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  availability?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendResource
   */
  displayGroupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  displayGroupName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  gameName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  gameTag?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendResource
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  groupName?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendResource
   */
  icon?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatFriendResource
   */
  isP2PConversationMuted?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  lastSeenOnlineTimestamp?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolChatFriendResource
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  note?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  product?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  productName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  statusMessage?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatFriendResource
   */
  summary?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendResource
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatFriendResource
   */
  time?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatFriendSubscriptionType {
  Out = 'pending_out',
  In = 'pending_in',
}

/**
 *
 * @export
 * @interface LolChatGameDataChampionSummary
 */
export interface LolChatGameDataChampionSummary {
  /**
   *
   * @type {string}
   * @memberof LolChatGameDataChampionSummary
   */
  alias?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatGameDataChampionSummary
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LolChatGameflowGameData
 */
export interface LolChatGameflowGameData {
  /**
   *
   * @type {number}
   * @memberof LolChatGameflowGameData
   */
  gameId?: number;
  /**
   *
   * @type {Array<LolChatChampSelection>}
   * @memberof LolChatGameflowGameData
   */
  playerChampionSelections?: Array<LolChatChampSelection>;
  /**
   *
   * @type {LolChatQueue}
   * @memberof LolChatGameflowGameData
   */
  queue?: LolChatQueue;
  /**
   *
   * @type {Array<LolChatTeamPlayerEntry>}
   * @memberof LolChatGameflowGameData
   */
  teamOne?: Array<LolChatTeamPlayerEntry>;
  /**
   *
   * @type {Array<LolChatTeamPlayerEntry>}
   * @memberof LolChatGameflowGameData
   */
  teamTwo?: Array<LolChatTeamPlayerEntry>;
}
/**
 *
 * @export
 * @interface LolChatGameflowGameMap
 */
export interface LolChatGameflowGameMap {
  /**
   *
   * @type {number}
   * @memberof LolChatGameflowGameMap
   */
  id?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolChatGameflowSession
 */
export interface LolChatGameflowSession {
  /**
   *
   * @type {LolChatGameflowGameData}
   * @memberof LolChatGameflowSession
   */
  gameData?: LolChatGameflowGameData;
  /**
   *
   * @type {LolChatGameflowGameMap}
   * @memberof LolChatGameflowSession
   */
  map?: LolChatGameflowGameMap;
  /**
   *
   * @type {LolChatGameflowPhase}
   * @memberof LolChatGameflowSession
   */
  phase?: LolChatGameflowPhase;
}
/**
 *
 * @export
 * @interface LolChatGroupResource
 */
export interface LolChatGroupResource {
  /**
   *
   * @type {boolean}
   * @memberof LolChatGroupResource
   */
  collapsed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChatGroupResource
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChatGroupResource
   */
  isLocalized?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatGroupResource
   */
  isMetaGroup?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatGroupResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatGroupResource
   */
  priority?: number;
}
/**
 *
 * @export
 * @interface LolChatIdBody
 */
export interface LolChatIdBody {
  /**
   *
   * @type {string}
   * @memberof LolChatIdBody
   */
  id?: string;
}
/**
 *
 * @export
 * @interface LolChatLcuSocialConfig
 */
export interface LolChatLcuSocialConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolChatLcuSocialConfig
   */
  AggressiveScanning?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLcuSocialConfig
   */
  ForceChatFilter?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChatLcuSocialConfig
   */
  QueueJobGraceSeconds?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLcuSocialConfig
   */
  ReplaceRichMessages?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLcuSocialConfig
   */
  SilenceChatWhileInGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLcuSocialConfig
   */
  allowGroupByGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLcuSocialConfig
   */
  gameNameTaglineEnabled?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolChatLcuSocialConfig
   */
  platformToRegionMap?: { [key: string]: string };
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatLeagueDivision {
  I = 'I',
  II = 'II',
  III = 'III',
  IV = 'IV',
  V = 'V',
  NA = 'NA',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatLeagueQueueType {
  NONE = 'NONE',
  RANKEDSOLO5x5 = 'RANKED_SOLO_5x5',
  RANKEDFLEXSR = 'RANKED_FLEX_SR',
  RANKEDFLEXTT = 'RANKED_FLEX_TT',
  RANKEDTFT = 'RANKED_TFT',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatLeagueTier {
  NONE = 'NONE',
  IRON = 'IRON',
  BRONZE = 'BRONZE',
  SILVER = 'SILVER',
  GOLD = 'GOLD',
  PLATINUM = 'PLATINUM',
  DIAMOND = 'DIAMOND',
  MASTER = 'MASTER',
  GRANDMASTER = 'GRANDMASTER',
  CHALLENGER = 'CHALLENGER',
}

/**
 *
 * @export
 * @interface LolChatLobbyMember
 */
export interface LolChatLobbyMember {
  /**
   *
   * @type {number}
   * @memberof LolChatLobbyMember
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLobbyMember
   */
  isOwner?: boolean;
}
/**
 *
 * @export
 * @interface LolChatLobbyPlayerStatus
 */
export interface LolChatLobbyPlayerStatus {
  /**
   *
   * @type {LolChatLobbyStatus}
   * @memberof LolChatLobbyPlayerStatus
   */
  currentLobbyStatus?: LolChatLobbyStatus;
  /**
   *
   * @type {LolChatLobbyStatus}
   * @memberof LolChatLobbyPlayerStatus
   */
  lastQueuedLobbyStatus?: LolChatLobbyStatus;
}
/**
 *
 * @export
 * @interface LolChatLobbyStatus
 */
export interface LolChatLobbyStatus {
  /**
   *
   * @type {LolChatQueueCustomGameSpectatorPolicy}
   * @memberof LolChatLobbyStatus
   */
  customSpectatorPolicy?: LolChatQueueCustomGameSpectatorPolicy;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLobbyStatus
   */
  isCustom?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLobbyStatus
   */
  isLeader?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolChatLobbyStatus
   */
  isPracticeTool?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChatLobbyStatus
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolChatMessage
 */
export interface LolChatMessage {
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  body?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  cid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  game_tag?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  mid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  pid?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatMessage
   */
  read?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  time?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolChatMessageList
 */
export interface LolChatMessageList {
  /**
   *
   * @type {Array<LolChatMessage>}
   * @memberof LolChatMessageList
   */
  messages?: Array<LolChatMessage>;
}
/**
 *
 * @export
 * @interface LolChatMessagePost
 */
export interface LolChatMessagePost {
  /**
   *
   * @type {string}
   * @memberof LolChatMessagePost
   */
  cid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessagePost
   */
  message?: string;
  /**
   *
   * @type {LolChatMessageType}
   * @memberof LolChatMessagePost
   */
  type?: LolChatMessageType;
}
/**
 *
 * @export
 * @interface LolChatMessageSend
 */
export interface LolChatMessageSend {
  /**
   *
   * @type {string}
   * @memberof LolChatMessageSend
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMessageSend
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatMessageType {
  Chat = 'chat',
  Groupchat = 'groupchat',
  Dm = 'dm',
  System = 'system',
}

/**
 *
 * @export
 * @interface LolChatMultiGamePresence
 */
export interface LolChatMultiGamePresence {
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  actor?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  details?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  game_tag?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  location?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  msg?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  platform?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  _private?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  privateJwt?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  product?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  region?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  resource?: string;
  /**
   *
   * @type {LolChatAccountState}
   * @memberof LolChatMultiGamePresence
   */
  state?: LolChatAccountState;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresence
   */
  summary?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatMultiGamePresence
   */
  time?: number;
}
/**
 *
 * @export
 * @interface LolChatMultiGamePresenceList
 */
export interface LolChatMultiGamePresenceList {
  /**
   *
   * @type {Array<LolChatMultiGamePresence>}
   * @memberof LolChatMultiGamePresenceList
   */
  presences?: Array<LolChatMultiGamePresence>;
}
/**
 *
 * @export
 * @interface LolChatMultiGamePresenceSharedPayload
 */
export interface LolChatMultiGamePresenceSharedPayload {
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceSharedPayload
   */
  actor?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceSharedPayload
   */
  details?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceSharedPayload
   */
  location?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceSharedPayload
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceSharedPayload
   */
  platform?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceSharedPayload
   */
  product?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatMultiGamePresenceSharedPayload
   */
  time?: number;
}
/**
 *
 * @export
 * @interface LolChatMultiGamePresenceUpdate
 */
export interface LolChatMultiGamePresenceUpdate {
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceUpdate
   */
  msg?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceUpdate
   */
  _private?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceUpdate
   */
  privateJwt?: string;
  /**
   *
   * @type {LolChatMultiGamePresenceSharedPayload}
   * @memberof LolChatMultiGamePresenceUpdate
   */
  shared?: LolChatMultiGamePresenceSharedPayload;
  /**
   *
   * @type {string}
   * @memberof LolChatMultiGamePresenceUpdate
   */
  sharedJwt?: string;
  /**
   *
   * @type {LolChatAccountState}
   * @memberof LolChatMultiGamePresenceUpdate
   */
  state?: LolChatAccountState;
}
/**
 *
 * @export
 * @interface LolChatMutedPlayerInfo
 */
export interface LolChatMutedPlayerInfo {
  /**
   *
   * @type {string}
   * @memberof LolChatMutedPlayerInfo
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatMutedPlayerInfo
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolChatNameBody
 */
export interface LolChatNameBody {
  /**
   *
   * @type {string}
   * @memberof LolChatNameBody
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolChatParticipant
 */
export interface LolChatParticipant {
  /**
   *
   * @type {string}
   * @memberof LolChatParticipant
   */
  cid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatParticipant
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatParticipant
   */
  game_tag?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatParticipant
   */
  muted?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatParticipant
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatParticipant
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatParticipant
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatParticipant
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolChatParticipantList
 */
export interface LolChatParticipantList {
  /**
   *
   * @type {Array<LolChatParticipant>}
   * @memberof LolChatParticipantList
   */
  participants?: Array<LolChatParticipant>;
}
/**
 *
 * @export
 * @interface LolChatPatchlineMetadata
 */
export interface LolChatPatchlineMetadata {
  /**
   *
   * @type {Array<LolChatContentCookies>}
   * @memberof LolChatPatchlineMetadata
   */
  content_cookies?: Array<LolChatContentCookies>;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolChatPatchlineMetadata
   */
  content_paths?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolChatPatchlineMetadata
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatPatchlineMetadata
   */
  product_id?: string;
}
/**
 *
 * @export
 * @interface LolChatPidBody
 */
export interface LolChatPidBody {
  /**
   *
   * @type {string}
   * @memberof LolChatPidBody
   */
  pid?: string;
}
/**
 *
 * @export
 * @interface LolChatPlayerPreferences
 */
export interface LolChatPlayerPreferences {
  /**
   *
   * @type {string}
   * @memberof LolChatPlayerPreferences
   */
  data?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatPlayerPreferences
   */
  hash?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatPlayerPreferences
   */
  modified?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatPlayerPreferences
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolChatPluginRegionLocaleChangedEvent
 */
export interface LolChatPluginRegionLocaleChangedEvent {
  /**
   *
   * @type {string}
   * @memberof LolChatPluginRegionLocaleChangedEvent
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatPluginRegionLocaleChangedEvent
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolChatPresenceProduct
 */
export interface LolChatPresenceProduct {
  /**
   *
   * @type {string}
   * @memberof LolChatPresenceProduct
   */
  product?: string;
}
/**
 *
 * @export
 * @interface LolChatProductMetadata
 */
export interface LolChatProductMetadata {
  /**
   *
   * @type {string}
   * @memberof LolChatProductMetadata
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatProductMetadata
   */
  name?: string;
  /**
   *
   * @type {{ [key: string]: LolChatPatchlineMetadata; }}
   * @memberof LolChatProductMetadata
   */
  patchlines?: { [key: string]: LolChatPatchlineMetadata };
}
/**
 *
 * @export
 * @interface LolChatProductMetadataMap
 */
export interface LolChatProductMetadataMap {
  /**
   *
   * @type {{ [key: string]: LolChatProductMetadata; }}
   * @memberof LolChatProductMetadataMap
   */
  products?: { [key: string]: LolChatProductMetadata };
}
/**
 *
 * @export
 * @interface LolChatQueue
 */
export interface LolChatQueue {
  /**
   *
   * @type {string}
   * @memberof LolChatQueue
   */
  gameMode?: string;
  /**
   *
   * @type {LolChatQueueGameTypeConfig}
   * @memberof LolChatQueue
   */
  gameTypeConfig?: LolChatQueueGameTypeConfig;
  /**
   *
   * @type {number}
   * @memberof LolChatQueue
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatQueue
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatQueueCustomGameSpectatorPolicy {
  NotAllowed = 'NotAllowed',
  LobbyAllowed = 'LobbyAllowed',
  FriendsAllowed = 'FriendsAllowed',
  AllAllowed = 'AllAllowed',
}

/**
 *
 * @export
 * @interface LolChatQueueGameTypeConfig
 */
export interface LolChatQueueGameTypeConfig {
  /**
   *
   * @type {number}
   * @memberof LolChatQueueGameTypeConfig
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatQueueGameTypeConfig
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolChatRankedQueueStats
 */
export interface LolChatRankedQueueStats {
  /**
   *
   * @type {LolChatLeagueDivision}
   * @memberof LolChatRankedQueueStats
   */
  division?: LolChatLeagueDivision;
  /**
   *
   * @type {number}
   * @memberof LolChatRankedQueueStats
   */
  games?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChatRankedQueueStats
   */
  isProvisional?: boolean;
  /**
   *
   * @type {LolChatLeagueQueueType}
   * @memberof LolChatRankedQueueStats
   */
  queueType?: LolChatLeagueQueueType;
  /**
   *
   * @type {LolChatLeagueTier}
   * @memberof LolChatRankedQueueStats
   */
  tier?: LolChatLeagueTier;
  /**
   *
   * @type {number}
   * @memberof LolChatRankedQueueStats
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LolChatRankedStats
 */
export interface LolChatRankedStats {
  /**
   *
   * @type {LolChatLeagueDivision}
   * @memberof LolChatRankedStats
   */
  highestPreviousSeasonAchievedDivision?: LolChatLeagueDivision;
  /**
   *
   * @type {LolChatLeagueTier}
   * @memberof LolChatRankedStats
   */
  highestPreviousSeasonAchievedTier?: LolChatLeagueTier;
  /**
   *
   * @type {LolChatRankedQueueStats}
   * @memberof LolChatRankedStats
   */
  highestRankedEntry?: LolChatRankedQueueStats;
  /**
   *
   * @type {number}
   * @memberof LolChatRankedStats
   */
  rankedRegaliaLevel?: number;
}
/**
 *
 * @export
 * @interface LolChatRsoAuthorization
 */
export interface LolChatRsoAuthorization {
  /**
   *
   * @type {number}
   * @memberof LolChatRsoAuthorization
   */
  currentAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatRsoAuthorization
   */
  currentPlatformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatRsoAuthorization
   */
  subject?: string;
}
/**
 *
 * @export
 * @interface LolChatSanitizeRequest
 */
export interface LolChatSanitizeRequest {
  /**
   *
   * @type {boolean}
   * @memberof LolChatSanitizeRequest
   */
  aggressiveScan?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolChatSanitizeRequest
   */
  level?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChatSanitizeRequest
   */
  texts?: Array<string>;
}
/**
 *
 * @export
 * @interface LolChatSanitizeResponse
 */
export interface LolChatSanitizeResponse {
  /**
   *
   * @type {boolean}
   * @memberof LolChatSanitizeResponse
   */
  modified?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChatSanitizeResponse
   */
  texts?: Array<string>;
}
/**
 *
 * @export
 * @interface LolChatSanitizerStatus
 */
export interface LolChatSanitizerStatus {
  /**
   *
   * @type {string}
   * @memberof LolChatSanitizerStatus
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatSanitizerStatus
   */
  platformID?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatSanitizerStatus
   */
  ready?: boolean;
}
/**
 *
 * @export
 * @interface LolChatSession
 */
export interface LolChatSession {
  /**
   *
   * @type {string}
   * @memberof LolChatSession
   */
  game_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatSession
   */
  game_tag?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatSession
   */
  loaded?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatSession
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatSession
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatSession
   */
  resource?: string;
  /**
   *
   * @type {LolChatChatSessionState}
   * @memberof LolChatSession
   */
  state?: LolChatChatSessionState;
}
/**
 *
 * @export
 * @interface LolChatSessionResource
 */
export interface LolChatSessionResource {
  /**
   *
   * @type {number}
   * @memberof LolChatSessionResource
   */
  sessionExpire?: number;
  /**
   *
   * @type {LolChatSessionState}
   * @memberof LolChatSessionResource
   */
  sessionState?: LolChatSessionState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolChatSessionState {
  Initializing = 'initializing',
  Connected = 'connected',
  Loaded = 'loaded',
  Disconnected = 'disconnected',
  Shuttingdown = 'shuttingdown',
}

/**
 *
 * @export
 * @interface LolChatSettingsResource
 */
export interface LolChatSettingsResource {
  /**
   *
   * @type {object}
   * @memberof LolChatSettingsResource
   */
  data?: object;
}
/**
 *
 * @export
 * @interface LolChatSpectateGameInfoResource
 */
export interface LolChatSpectateGameInfoResource {
  /**
   *
   * @type {string}
   * @memberof LolChatSpectateGameInfoResource
   */
  allowObserveMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatSpectateGameInfoResource
   */
  dropInSpectateGameId?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatSpectateGameInfoResource
   */
  gameQueueType?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatSpectateGameInfoResource
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolChatSummonerStatus
 */
export interface LolChatSummonerStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolChatSummonerStatus
   */
  ready?: boolean;
}
/**
 *
 * @export
 * @interface LolChatTeamPlayerEntry
 */
export interface LolChatTeamPlayerEntry {
  /**
   *
   * @type {number}
   * @memberof LolChatTeamPlayerEntry
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatTeamPlayerEntry
   */
  summonerInternalName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatTeamPlayerEntry
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolChatTranslateRequest
 */
export interface LolChatTranslateRequest {
  /**
   *
   * @type {boolean}
   * @memberof LolChatTranslateRequest
   */
  blocking?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolChatTranslateRequest
   */
  keys?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolChatTranslateRequest
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatTranslateRequest
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatTranslateRequest
   */
  product_id?: string;
}
/**
 *
 * @export
 * @interface LolChatTranslateResponse
 */
export interface LolChatTranslateResponse {
  /**
   *
   * @type {Array<LolChatTranslateResult>}
   * @memberof LolChatTranslateResponse
   */
  results?: Array<LolChatTranslateResult>;
}
/**
 *
 * @export
 * @interface LolChatTranslateResult
 */
export interface LolChatTranslateResult {
  /**
   *
   * @type {boolean}
   * @memberof LolChatTranslateResult
   */
  found?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatTranslateResult
   */
  key?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatTranslateResult
   */
  product_id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatTranslateResult
   */
  value?: string;
}
/**
 *
 * @export
 * @interface LolChatUserResource
 */
export interface LolChatUserResource {
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  availability?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  gameName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  gameTag?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatUserResource
   */
  icon?: number;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  lastSeenOnlineTimestamp?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolChatUserResource
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  pid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  product?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  productName?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  statusMessage?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatUserResource
   */
  summary?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatUserResource
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolChatUserResource
   */
  time?: number;
}
/**
 *
 * @export
 * @interface LolChatcookie
 */
export interface LolChatcookie {
  /**
   *
   * @type {string}
   * @memberof LolChatcookie
   */
  domain?: string;
  /**
   *
   * @type {number}
   * @memberof LolChatcookie
   */
  expires?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolChatcookie
   */
  httponly?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatcookie
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatcookie
   */
  path?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolChatcookie
   */
  secure?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolChatcookie
   */
  url?: string;
  /**
   *
   * @type {string}
   * @memberof LolChatcookie
   */
  value?: string;
}
/**
 *
 * @export
 * @interface LolClashBlockedPlayerResource
 */
export interface LolClashBlockedPlayerResource {
  /**
   *
   * @type {string}
   * @memberof LolClashBlockedPlayerResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashBlockedPlayerResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClashBracket
 */
export interface LolClashBracket {
  /**
   *
   * @type {number}
   * @memberof LolClashBracket
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashBracket
   */
  isComplete?: boolean;
  /**
   *
   * @type {Array<BracketMatch>}
   * @memberof LolClashBracket
   */
  matches?: Array<BracketMatch>;
  /**
   *
   * @type {number}
   * @memberof LolClashBracket
   */
  period?: number;
  /**
   *
   * @type {Array<BracketRoster>}
   * @memberof LolClashBracket
   */
  rosters?: Array<BracketRoster>;
  /**
   *
   * @type {number}
   * @memberof LolClashBracket
   */
  size?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashBracket
   */
  tournamentId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashBracket
   */
  version?: number;
}
/**
 *
 * @export
 * @interface LolClashBracketReadyNotification
 */
export interface LolClashBracketReadyNotification {
  /**
   *
   * @type {number}
   * @memberof LolClashBracketReadyNotification
   */
  bracketId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashBracketReadyNotification
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface LolClashBracketUpdateNotification
 */
export interface LolClashBracketUpdateNotification {
  /**
   *
   * @type {Bracket}
   * @memberof LolClashBracketUpdateNotification
   */
  bracket?: Bracket;
  /**
   *
   * @type {number}
   * @memberof LolClashBracketUpdateNotification
   */
  bracketId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashBracketUpdateNotification
   */
  currentMatchId?: number;
  /**
   *
   * @type {LolClashRosterNotifyReason}
   * @memberof LolClashBracketUpdateNotification
   */
  notifyReason?: LolClashRosterNotifyReason;
  /**
   *
   * @type {number}
   * @memberof LolClashBracketUpdateNotification
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface LolClashChangeIconRequest
 */
export interface LolClashChangeIconRequest {
  /**
   *
   * @type {number}
   * @memberof LolClashChangeIconRequest
   */
  iconColorId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashChangeIconRequest
   */
  iconId?: number;
}
/**
 *
 * @export
 * @interface LolClashChangeNameRequest
 */
export interface LolClashChangeNameRequest {
  /**
   *
   * @type {string}
   * @memberof LolClashChangeNameRequest
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolClashClashConfig
 */
export interface LolClashClashConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolClashClashConfig
   */
  CheckPartiesRegistration?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolClashClashConfig
   */
  DisabledEvents?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolClashClashConfig
   */
  DisabledReason?: string;
  /**
   *
   * @type {LolClashClashState}
   * @memberof LolClashClashConfig
   */
  EnabledState?: LolClashClashState;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  EstimatedEnableTimeMillis?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashClashConfig
   */
  EventSendingEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  HonorLevelRequired?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  HonorRefreshRetrySeconds?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashClashConfig
   */
  IconConfig?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClashClashConfig
   */
  IsPlaymodeRestrictionEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  MaxTimeBeforeLockinNotifySeconds?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  MinClashNotificationsSummonerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  MinClashSummonerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  RewardGrantRetryIntervalSeconds?: number;
  /**
   *
   * @type {LolClashClashVisibility}
   * @memberof LolClashClashConfig
   */
  Visibility?: LolClashClashVisibility;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  VoiceEobQuitDelaySeconds?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  VoiceNoDelayAutoStartSeconds?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  VoiceRandomStartMaxSeconds?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  VoiceRandomStartMinSeconds?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  VoiceRetryCountLimit?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClashConfig
   */
  VoiceRetryDelaySeconds?: number;
}
/**
 *
 * @export
 * @interface LolClashClashDisabledConfig
 */
export interface LolClashClashDisabledConfig {
  /**
   *
   * @type {string}
   * @memberof LolClashClashDisabledConfig
   */
  disabledReason?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashClashDisabledConfig
   */
  estimatedEnableTimeMillis?: number;
}
/**
 *
 * @export
 * @interface LolClashClashSettingCategory
 */
export interface LolClashClashSettingCategory {
  /**
   *
   * @type {Array<string>}
   * @memberof LolClashClashSettingCategory
   */
  simpleStateFlagIds?: Array<string>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashClashState {
  Disabled = 'Disabled',
  Enabled = 'Enabled',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashClashVisibility {
  Hidden = 'Hidden',
  Visible = 'Visible',
}

/**
 *
 * @export
 * @interface LolClashClientFailedInvite
 */
export interface LolClashClientFailedInvite {
  /**
   *
   * @type {string}
   * @memberof LolClashClientFailedInvite
   */
  exception?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashClientFailedInvite
   */
  playerId?: number;
}
/**
 *
 * @export
 * @interface LolClashClubsSummoner
 */
export interface LolClashClubsSummoner {
  /**
   *
   * @type {string}
   * @memberof LolClashClubsSummoner
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashClubsSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClubsSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashClubsSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolClashEogPlayerUpdateDTO
 */
export interface LolClashEogPlayerUpdateDTO {
  /**
   *
   * @type {number}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  bid?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  bracketSize?: number;
  /**
   *
   * @type {Array<ClashRewardDefinition>}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  earnedRewards?: Array<ClashRewardDefinition>;
  /**
   *
   * @type {number}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  lowestPosition?: number;
  /**
   *
   * @type {Array<ClashRewardDefinition>}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  rewardProgress?: Array<ClashRewardDefinition>;
  /**
   *
   * @type {number}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  seasonVp?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  themeVp?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  tier?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  tournamentId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashEogPlayerUpdateDTO
   */
  winner?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashFoundationError {
  CLASHNOTINITIALIZED = 'CLASH_NOT_INITIALIZED',
  CLASHDISABLED = 'CLASH_DISABLED',
  DESERIALIZATIONFAILED = 'DESERIALIZATION_FAILED',
  GAMEFLOWUNAVAILABLE = 'GAMEFLOW_UNAVAILABLE',
  LOLINVENTORYNOTREADY = 'LOL_INVENTORY_NOT_READY',
  INVALIDSIMPLESTATEFLAG = 'INVALID_SIMPLE_STATE_FLAG',
}

/**
 *
 * @export
 * @interface LolClashGameflowAvailability
 */
export interface LolClashGameflowAvailability {
  /**
   *
   * @type {boolean}
   * @memberof LolClashGameflowAvailability
   */
  isAvailable?: boolean;
}
/**
 *
 * @export
 * @interface LolClashGameflowGameDodge
 */
export interface LolClashGameflowGameDodge {
  /**
   *
   * @type {Array<number>}
   * @memberof LolClashGameflowGameDodge
   */
  dodgeIds?: Array<number>;
  /**
   *
   * @type {LolClashMatchmakingDodgeState}
   * @memberof LolClashGameflowGameDodge
   */
  state?: LolClashMatchmakingDodgeState;
}
/**
 *
 * @export
 * @interface LolClashGameflowPartiesRegistrationStatus
 */
export interface LolClashGameflowPartiesRegistrationStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolClashGameflowPartiesRegistrationStatus
   */
  complete?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolClashGameflowPartiesRegistrationStatus
   */
  errorCodes?: Array<string>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolClashGameflowSession
 */
export interface LolClashGameflowSession {
  /**
   *
   * @type {LolClashGameflowPhase}
   * @memberof LolClashGameflowSession
   */
  phase?: LolClashGameflowPhase;
}
/**
 *
 * @export
 * @interface LolClashInviteSubRequest
 */
export interface LolClashInviteSubRequest {
  /**
   *
   * @type {number}
   * @memberof LolClashInviteSubRequest
   */
  replacedSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashInviteSubRequest
   */
  substituteSummonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashKdaClassification {
  LOW = 'LOW',
  AVERAGE = 'AVERAGE',
  HIGH = 'HIGH',
}

/**
 *
 * @export
 * @interface LolClashKickRequest
 */
export interface LolClashKickRequest {
  /**
   *
   * @type {number}
   * @memberof LolClashKickRequest
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClashLoginSession
 */
export interface LolClashLoginSession {
  /**
   *
   * @type {LolClashLoginSessionState}
   * @memberof LolClashLoginSession
   */
  state?: LolClashLoginSessionState;
  /**
   *
   * @type {number}
   * @memberof LolClashLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashLoginSessionState {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolClashMatchmakingDodgeData
 */
export interface LolClashMatchmakingDodgeData {
  /**
   *
   * @type {number}
   * @memberof LolClashMatchmakingDodgeData
   */
  dodgerId?: number;
  /**
   *
   * @type {LolClashMatchmakingDodgeState}
   * @memberof LolClashMatchmakingDodgeData
   */
  state?: LolClashMatchmakingDodgeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashMatchmakingDodgeState {
  Invalid = 'Invalid',
  PartyDodged = 'PartyDodged',
  StrangerDodged = 'StrangerDodged',
  TournamentDodged = 'TournamentDodged',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashMatchmakingDodgeWarning {
  None = 'None',
  Warning = 'Warning',
  Penalty = 'Penalty',
}

/**
 *
 * @export
 * @interface LolClashMatchmakingReadyCheckResource
 */
export interface LolClashMatchmakingReadyCheckResource {
  /**
   *
   * @type {Array<number>}
   * @memberof LolClashMatchmakingReadyCheckResource
   */
  declinerIds?: Array<number>;
  /**
   *
   * @type {LolClashMatchmakingDodgeWarning}
   * @memberof LolClashMatchmakingReadyCheckResource
   */
  dodgeWarning?: LolClashMatchmakingDodgeWarning;
  /**
   *
   * @type {LolClashMatchmakingReadyCheckResponse}
   * @memberof LolClashMatchmakingReadyCheckResource
   */
  playerResponse?: LolClashMatchmakingReadyCheckResponse;
  /**
   *
   * @type {LolClashMatchmakingReadyCheckState}
   * @memberof LolClashMatchmakingReadyCheckResource
   */
  state?: LolClashMatchmakingReadyCheckState;
  /**
   *
   * @type {number}
   * @memberof LolClashMatchmakingReadyCheckResource
   */
  timer?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashMatchmakingReadyCheckResponse {
  None = 'None',
  Accepted = 'Accepted',
  Declined = 'Declined',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashMatchmakingReadyCheckState {
  Invalid = 'Invalid',
  InProgress = 'InProgress',
  EveryoneReady = 'EveryoneReady',
  StrangerNotReady = 'StrangerNotReady',
  PartyNotReady = 'PartyNotReady',
  Error = 'Error',
}

/**
 *
 * @export
 * @interface LolClashMatchmakingSearchResource
 */
export interface LolClashMatchmakingSearchResource {
  /**
   *
   * @type {LolClashMatchmakingDodgeData}
   * @memberof LolClashMatchmakingSearchResource
   */
  dodgeData?: LolClashMatchmakingDodgeData;
  /**
   *
   * @type {number}
   * @memberof LolClashMatchmakingSearchResource
   */
  queueId?: number;
  /**
   *
   * @type {LolClashMatchmakingReadyCheckResource}
   * @memberof LolClashMatchmakingSearchResource
   */
  readyCheck?: LolClashMatchmakingReadyCheckResource;
}
/**
 *
 * @export
 * @interface LolClashMemberBanUnbanNotification
 */
export interface LolClashMemberBanUnbanNotification {
  /**
   *
   * @type {number}
   * @memberof LolClashMemberBanUnbanNotification
   */
  notifyPlayerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashMemberBanUnbanNotification
   */
  notifyPuuid?: string;
  /**
   *
   * @type {LolClashNotifyReason}
   * @memberof LolClashMemberBanUnbanNotification
   */
  notifyReason?: LolClashNotifyReason;
  /**
   *
   * @type {number}
   * @memberof LolClashMemberBanUnbanNotification
   */
  playerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashMemberBanUnbanNotification
   */
  reason?: string;
  /**
   *
   * @type {Array<MemberBanUnbanTournament>}
   * @memberof LolClashMemberBanUnbanNotification
   */
  tournaments?: Array<MemberBanUnbanTournament>;
}
/**
 *
 * @export
 * @interface LolClashNoShowPingDTO
 */
export interface LolClashNoShowPingDTO {
  /**
   *
   * @type {number}
   * @memberof LolClashNoShowPingDTO
   */
  dodgeTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashNoShowPingDTO
   */
  matchId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashNoShowPingDTO
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface LolClashNoShowPingResponse
 */
export interface LolClashNoShowPingResponse {
  /**
   *
   * @type {string}
   * @memberof LolClashNoShowPingResponse
   */
  data?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashNoShowPingResponse
   */
  dodgeTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashNoShowPingResponse
   */
  matchId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashNoShowPingResponse
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface LolClashNoShowPingResponseData
 */
export interface LolClashNoShowPingResponseData {
  /**
   *
   * @type {number}
   * @memberof LolClashNoShowPingResponseData
   */
  dodgeTime?: number;
  /**
   *
   * @type {LolClashGameflowPhase}
   * @memberof LolClashNoShowPingResponseData
   */
  gameflowState?: LolClashGameflowPhase;
  /**
   *
   * @type {boolean}
   * @memberof LolClashNoShowPingResponseData
   */
  isPlaymodeRestricted?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashNoShowPingResponseData
   */
  loginTime?: number;
  /**
   *
   * @type {LolClashReadyCheckInfo}
   * @memberof LolClashNoShowPingResponseData
   */
  readyCheckInfo?: LolClashReadyCheckInfo;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashNotifyReason {
  SUGGESTION = 'SUGGESTION',
  DECLINESUGGESTION = 'DECLINE_SUGGESTION',
  ACCEPTSUGGESTION = 'ACCEPT_SUGGESTION',
  REVOKESUGGESTION = 'REVOKE_SUGGESTION',
  READY = 'READY',
  UNREADY = 'UNREADY',
  OWNERCLOSE = 'OWNER_CLOSE',
  DISMISS = 'DISMISS',
  ROSTERDELETE = 'ROSTER_DELETE',
  OWNERTRANSFER = 'OWNER_TRANSFER',
  CHANGELOGO = 'CHANGE_LOGO',
  CHANGENAME = 'CHANGE_NAME',
  CHANGESHORTNAME = 'CHANGE_SHORTNAME',
  CHANGEPOSITION = 'CHANGE_POSITION',
  CHANGENAMETAGLOGO = 'CHANGE_NAMETAGLOGO',
  INVITE = 'INVITE',
  RESENTINVITE = 'RESENT_INVITE',
  DECLINEINVITE = 'DECLINE_INVITE',
  ACCEPTINVITE = 'ACCEPT_INVITE',
  REVOKEINVITE = 'REVOKE_INVITE',
  LEAVE = 'LEAVE',
  CAPTAINLEAVE = 'CAPTAIN_LEAVE',
  KICK = 'KICK',
  SETTICKET = 'SET_TICKET',
  OFFERTICKET = 'OFFER_TICKET',
  REVOKEDTICKET = 'REVOKED_TICKET',
  DECLINETICKET = 'DECLINE_TICKET',
  ACCEPTTICKET = 'ACCEPT_TICKET',
  REWARDGRANTFAILED = 'REWARD_GRANT_FAILED',
  REWARDGRANTRETRY = 'REWARD_GRANT_RETRY',
  REVERTEDREGISTRATION = 'REVERTED_REGISTRATION',
  BAN = 'BAN',
  UNBAN = 'UNBAN',
  MEMBERBAN = 'MEMBER_BAN',
  TEAMMATEBAN = 'TEAMMATE_BAN',
  TEAMMATEUNBAN = 'TEAMMATE_UNBAN',
}

/**
 *
 * @export
 * @interface LolClashOfferTicketRequest
 */
export interface LolClashOfferTicketRequest {
  /**
   *
   * @type {number}
   * @memberof LolClashOfferTicketRequest
   */
  ticketAmount?: number;
  /**
   *
   * @type {TicketType}
   * @memberof LolClashOfferTicketRequest
   */
  ticketType?: TicketType;
}
/**
 *
 * @export
 * @interface LolClashPendingRosterNotification
 */
export interface LolClashPendingRosterNotification {
  /**
   *
   * @type {LolClashNotifyReason}
   * @memberof LolClashPendingRosterNotification
   */
  notifyReason?: LolClashNotifyReason;
  /**
   *
   * @type {PendingRosterDTO}
   * @memberof LolClashPendingRosterNotification
   */
  pendingRoster?: PendingRosterDTO;
  /**
   *
   * @type {number}
   * @memberof LolClashPendingRosterNotification
   */
  sourcePlayerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashPendingRosterNotification
   */
  targetPlayerId?: number;
}
/**
 *
 * @export
 * @interface LolClashPlayerChatRoster
 */
export interface LolClashPlayerChatRoster {
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerChatRoster
   */
  endTimeMs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerChatRoster
   */
  iconColorId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerChatRoster
   */
  iconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerChatRoster
   */
  invitationId?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClashPlayerChatRoster
   */
  isRegistered?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerChatRoster
   */
  key?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerChatRoster
   */
  logoUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerChatRoster
   */
  name?: string;
  /**
   *
   * @type {LolClashPlayerState}
   * @memberof LolClashPlayerChatRoster
   */
  playerState?: LolClashPlayerState;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerChatRoster
   */
  shortName?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerChatRoster
   */
  startTimeMs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerChatRoster
   */
  tournamentId?: number;
  /**
   *
   * @type {LolClashTournamentState}
   * @memberof LolClashPlayerChatRoster
   */
  tournamentState?: LolClashTournamentState;
}
/**
 *
 * @export
 * @interface LolClashPlayerData
 */
export interface LolClashPlayerData {
  /**
   *
   * @type {boolean}
   * @memberof LolClashPlayerData
   */
  isClashBanned?: boolean;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolClashPlayerData
   */
  tickets?: { [key: string]: number };
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerData
   */
  tier?: number;
}
/**
 *
 * @export
 * @interface LolClashPlayerNotification
 */
export interface LolClashPlayerNotification {
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  created?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClashPlayerNotification
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolClashPlayerNotification
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  detailKey?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClashPlayerNotification
   */
  dismissible?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerNotification
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotification
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolClashPlayerNotificationData
 */
export interface LolClashPlayerNotificationData {
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerNotificationData
   */
  keySuffix?: string;
  /**
   *
   * @type {LolClashPlayerNotification}
   * @memberof LolClashPlayerNotificationData
   */
  notification?: LolClashPlayerNotification;
  /**
   *
   * @type {LolClashNotifyReason}
   * @memberof LolClashPlayerNotificationData
   */
  notifyReason?: LolClashNotifyReason;
  /**
   *
   * @type {LolClashRosterNotifyReason}
   * @memberof LolClashPlayerNotificationData
   */
  rosterNotifyReason?: LolClashRosterNotifyReason;
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerNotificationData
   */
  sourceSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerNotificationData
   */
  targetSummonerId?: number;
  /**
   *
   * @type {LolClashTournamentNotifyReason}
   * @memberof LolClashPlayerNotificationData
   */
  tournamentNotifyReason?: LolClashTournamentNotifyReason;
}
/**
 *
 * @export
 * @interface LolClashPlayerRewards
 */
export interface LolClashPlayerRewards {
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerRewards
   */
  seasonVp?: number;
  /**
   *
   * @type {Array<LolClashThemeVp>}
   * @memberof LolClashPlayerRewards
   */
  themeVp?: Array<LolClashThemeVp>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashPlayerState {
  NOROSTER = 'NO_ROSTER',
  PENDINGROSTER = 'PENDING_ROSTER',
  REGISTEREDROSTER = 'REGISTERED_ROSTER',
  BRACKETROSTER = 'BRACKET_ROSTER',
  ELIMINATED = 'ELIMINATED',
}

/**
 *
 * @export
 * @interface LolClashPlayerTournamentData
 */
export interface LolClashPlayerTournamentData {
  /**
   *
   * @type {number}
   * @memberof LolClashPlayerTournamentData
   */
  bracketId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashPlayerTournamentData
   */
  isSub?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolClashPlayerTournamentData
   */
  rosterId?: string;
  /**
   *
   * @type {LolClashPlayerState}
   * @memberof LolClashPlayerTournamentData
   */
  state?: LolClashPlayerState;
}
/**
 *
 * @export
 * @interface LolClashPlayerUpdateNotification
 */
export interface LolClashPlayerUpdateNotification {
  /**
   *
   * @type {LolClashNotifyReason}
   * @memberof LolClashPlayerUpdateNotification
   */
  notifyReason?: LolClashNotifyReason;
  /**
   *
   * @type {PlayerDTO}
   * @memberof LolClashPlayerUpdateNotification
   */
  player?: PlayerDTO;
}
/**
 *
 * @export
 * @interface LolClashPlaymodeRestrictedInfo
 */
export interface LolClashPlaymodeRestrictedInfo {
  /**
   *
   * @type {boolean}
   * @memberof LolClashPlaymodeRestrictedInfo
   */
  isRestricted?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashPlaymodeRestrictedInfo
   */
  phaseId?: number;
  /**
   *
   * @type {LolClashPresenceState}
   * @memberof LolClashPlaymodeRestrictedInfo
   */
  presenceState?: LolClashPresenceState;
  /**
   *
   * @type {boolean}
   * @memberof LolClashPlaymodeRestrictedInfo
   */
  readyForVoice?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolClashPlaymodeRestrictedInfo
   */
  rosterId?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashPlaymodeRestrictedInfo
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashPresenceState {
  NONE = 'NONE',
  LOCKEDIN = 'LOCKED_IN',
  SCOUTING = 'SCOUTING',
}

/**
 *
 * @export
 * @interface LolClashProfileInfo
 */
export interface LolClashProfileInfo {
  /**
   *
   * @type {number}
   * @memberof LolClashProfileInfo
   */
  honorLevel?: number;
}
/**
 *
 * @export
 * @interface LolClashQueue
 */
export interface LolClashQueue {
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueue
   */
  areFreeChampionsAllowed?: boolean;
  /**
   *
   * @type {LolClashQueueGameCategory}
   * @memberof LolClashQueue
   */
  category?: LolClashQueueGameCategory;
  /**
   *
   * @type {string}
   * @memberof LolClashQueue
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashQueue
   */
  detailedDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashQueue
   */
  gameMode?: string;
  /**
   *
   * @type {LolClashQueueGameTypeConfig}
   * @memberof LolClashQueue
   */
  gameTypeConfig?: LolClashQueueGameTypeConfig;
  /**
   *
   * @type {number}
   * @memberof LolClashQueue
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueue
   */
  isRanked?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueue
   */
  isTeamBuilderManaged?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueue
   */
  isTeamOnly?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashQueue
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashQueue
   */
  maxLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashQueue
   */
  maxSummonerLevelForFirstWinOfTheDay?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashQueue
   */
  maximumParticipantListSize?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashQueue
   */
  minLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashQueue
   */
  minimumParticipantListSize?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashQueue
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashQueue
   */
  numPlayersPerTeam?: number;
  /**
   *
   * @type {LolClashQueueAvailability}
   * @memberof LolClashQueue
   */
  queueAvailability?: LolClashQueueAvailability;
  /**
   *
   * @type {LolClashQueueReward}
   * @memberof LolClashQueue
   */
  queueRewards?: LolClashQueueReward;
  /**
   *
   * @type {string}
   * @memberof LolClashQueue
   */
  shortName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueue
   */
  spectatorEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolClashQueue
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashQueueAvailability {
  Available = 'Available',
  PlatformDisabled = 'PlatformDisabled',
  DoesntMeetRequirements = 'DoesntMeetRequirements',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashQueueGameCategory {
  None = 'None',
  Custom = 'Custom',
  PvP = 'PvP',
  VersusAi = 'VersusAi',
  Alpha = 'Alpha',
}

/**
 *
 * @export
 * @interface LolClashQueueGameTypeConfig
 */
export interface LolClashQueueGameTypeConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  advancedLearningQuests?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  allowTrades?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolClashQueueGameTypeConfig
   */
  banMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashQueueGameTypeConfig
   */
  banTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  battleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  crossTeamChampionPool?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  deathMatch?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  doNotRemove?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  duplicatePick?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  exclusivePick?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashQueueGameTypeConfig
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  learningQuests?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashQueueGameTypeConfig
   */
  mainPickTimerDuration?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashQueueGameTypeConfig
   */
  maxAllowableBans?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashQueueGameTypeConfig
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  onboardCoopBeginner?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolClashQueueGameTypeConfig
   */
  pickMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashQueueGameTypeConfig
   */
  postPickTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  reroll?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueGameTypeConfig
   */
  teamChampionPool?: boolean;
}
/**
 *
 * @export
 * @interface LolClashQueueReward
 */
export interface LolClashQueueReward {
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueReward
   */
  isChampionPointsEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueReward
   */
  isIpEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashQueueReward
   */
  isXpEnabled?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolClashQueueReward
   */
  partySizeIpRewards?: Array<number>;
}
/**
 *
 * @export
 * @interface LolClashRankedScoutingMember
 */
export interface LolClashRankedScoutingMember {
  /**
   *
   * @type {Array<LolClashRankedScoutingTopChampion>}
   * @memberof LolClashRankedScoutingMember
   */
  championScoutingData?: Array<LolClashRankedScoutingTopChampion>;
  /**
   *
   * @type {number}
   * @memberof LolClashRankedScoutingMember
   */
  playerId?: number;
}
/**
 *
 * @export
 * @interface LolClashRankedScoutingTopChampion
 */
export interface LolClashRankedScoutingTopChampion {
  /**
   *
   * @type {number}
   * @memberof LolClashRankedScoutingTopChampion
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRankedScoutingTopChampion
   */
  gameCount?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashRankedScoutingTopChampion
   */
  kda?: string;
  /**
   *
   * @type {LolClashKdaClassification}
   * @memberof LolClashRankedScoutingTopChampion
   */
  kdaClassification?: LolClashKdaClassification;
  /**
   *
   * @type {number}
   * @memberof LolClashRankedScoutingTopChampion
   */
  rank?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRankedScoutingTopChampion
   */
  winCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRankedScoutingTopChampion
   */
  winRate?: number;
}
/**
 *
 * @export
 * @interface LolClashReadyCheckInfo
 */
export interface LolClashReadyCheckInfo {
  /**
   *
   * @type {string}
   * @memberof LolClashReadyCheckInfo
   */
  acceptError?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClashReadyCheckInfo
   */
  isAcceptSuccessful?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashReadyCheckInfo
   */
  queueId?: number;
  /**
   *
   * @type {LolClashMatchmakingReadyCheckResource}
   * @memberof LolClashReadyCheckInfo
   */
  readyCheckResource?: LolClashMatchmakingReadyCheckResource;
  /**
   *
   * @type {number}
   * @memberof LolClashReadyCheckInfo
   */
  timestampLastClashGameflowDodge?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashReadyCheckInfo
   */
  timestampReceived?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashReadyCheckInfo
   */
  timestampResponseComplete?: number;
}
/**
 *
 * @export
 * @interface LolClashRegisteredRosterNotification
 */
export interface LolClashRegisteredRosterNotification {
  /**
   *
   * @type {LolClashRosterNotifyReason}
   * @memberof LolClashRegisteredRosterNotification
   */
  notifyReason?: LolClashRosterNotifyReason;
  /**
   *
   * @type {RosterDTO}
   * @memberof LolClashRegisteredRosterNotification
   */
  roster?: RosterDTO;
}
/**
 *
 * @export
 * @interface LolClashRoster
 */
export interface LolClashRoster {
  /**
   *
   * @type {Array<RewardLogo>}
   * @memberof LolClashRoster
   */
  availableLogos?: Array<RewardLogo>;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  captainSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  currentBracketWins?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRoster
   */
  highTierVariance?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  iconColorId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  iconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashRoster
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashRoster
   */
  invitationId?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRoster
   */
  isActiveInCurrentPhase?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRoster
   */
  isClashBanned?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRoster
   */
  isCurrentBracketComplete?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRoster
   */
  isEliminated?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRoster
   */
  isRegistered?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  losses?: number;
  /**
   *
   * @type {Array<LolClashRosterMember>}
   * @memberof LolClashRoster
   */
  members?: Array<LolClashRosterMember>;
  /**
   *
   * @type {string}
   * @memberof LolClashRoster
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  numCompletedPeriods?: number;
  /**
   *
   * @type {Array<LolClashRosterPhaseInfo>}
   * @memberof LolClashRoster
   */
  phaseInfos?: Array<LolClashRosterPhaseInfo>;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  points?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashRoster
   */
  shortName?: string;
  /**
   *
   * @type {Array<LolClashSuggestedInvite>}
   * @memberof LolClashRoster
   */
  suggestedInvites?: Array<LolClashSuggestedInvite>;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  tier?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  tournamentId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRoster
   */
  wins?: number;
  /**
   *
   * @type {RosterWithdraw}
   * @memberof LolClashRoster
   */
  withdraw?: RosterWithdraw;
}
/**
 *
 * @export
 * @interface LolClashRosterDetails
 */
export interface LolClashRosterDetails {
  /**
   *
   * @type {number}
   * @memberof LolClashRosterDetails
   */
  iconColorId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterDetails
   */
  iconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashRosterDetails
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashRosterDetails
   */
  shortName?: string;
}
/**
 *
 * @export
 * @interface LolClashRosterDynamicStateNotification
 */
export interface LolClashRosterDynamicStateNotification {
  /**
   *
   * @type {LolClashRosterNotifyReason}
   * @memberof LolClashRosterDynamicStateNotification
   */
  notifyReason?: LolClashRosterNotifyReason;
  /**
   *
   * @type {RosterDynamicStateDTO}
   * @memberof LolClashRosterDynamicStateNotification
   */
  rosterDynamicState?: RosterDynamicStateDTO;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterDynamicStateNotification
   */
  sourcePlayerId?: number;
}
/**
 *
 * @export
 * @interface LolClashRosterMatchAggregatedStats
 */
export interface LolClashRosterMatchAggregatedStats {
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  durationMs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  kills?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  loserBracket?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  opponentIconColorId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  opponentIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  opponentKills?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  opponentShortName?: string;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  playerChampionIds?: { [key: string]: number };
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  round?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRosterMatchAggregatedStats
   */
  win?: boolean;
}
/**
 *
 * @export
 * @interface LolClashRosterMember
 */
export interface LolClashRosterMember {
  /**
   *
   * @type {TicketType}
   * @memberof LolClashRosterMember
   */
  buyinType?: TicketType;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMember
   */
  currentBuyin?: number;
  /**
   *
   * @type {Array<LolClashTicketOffer>}
   * @memberof LolClashRosterMember
   */
  incomingOffers?: Array<LolClashTicketOffer>;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRosterMember
   */
  isSubForOtherTeam?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRosterMember
   */
  isSubbedOut?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRosterMember
   */
  isSubstitute?: boolean;
  /**
   *
   * @type {Position}
   * @memberof LolClashRosterMember
   */
  position?: Position;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMember
   */
  previousBuyin?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMember
   */
  replacedSummonerId?: number;
  /**
   *
   * @type {LolClashRosterMemberState}
   * @memberof LolClashRosterMember
   */
  state?: LolClashRosterMemberState;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMember
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterMember
   */
  tier?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashRosterMemberState {
  PENDING = 'PENDING',
  NOTREADY = 'NOT_READY',
  FORCEDNOTREADY = 'FORCED_NOT_READY',
  READY = 'READY',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashRosterNotifyReason {
  ROSTERSETTICKET = 'ROSTER_SET_TICKET',
  ROSTEROFFERTICKET = 'ROSTER_OFFER_TICKET',
  ROSTERACCEPTTICKET = 'ROSTER_ACCEPT_TICKET',
  ROSTERDECLINETICKET = 'ROSTER_DECLINE_TICKET',
  ROSTERREVOKEDTICKET = 'ROSTER_REVOKED_TICKET',
  BYEAUTOWIN = 'BYE_AUTO_WIN',
  BRACKETREADY = 'BRACKET_READY',
  CHANGEPOSITION = 'CHANGE_POSITION',
  EOGPLAYERUPDATE = 'EOG_PLAYER_UPDATE',
  REGISTERED = 'REGISTERED',
  RESTRICTIONAUTOWIN = 'RESTRICTION_AUTO_WIN',
  PHASEUNREADY = 'PHASE_UNREADY',
  PHASEREADY = 'PHASE_READY',
  PHASECHECKIN = 'PHASE_CHECKIN',
  PHASEBACKOUT = 'PHASE_BACKOUT',
  PERIODCANCEL = 'PERIOD_CANCEL',
  PERIODSPLIT = 'PERIOD_SPLIT',
  GAMECOMPLETED = 'GAME_COMPLETED',
  GAMESCHEDULED = 'GAME_SCHEDULED',
  GAMESTARTED = 'GAME_STARTED',
  GAMESTARTEDERROR = 'GAME_STARTED_ERROR',
  GAMEENDERROR = 'GAME_END_ERROR',
  QUEUEDODGE = 'QUEUE_DODGE',
  OWNERTRANSFER = 'OWNER_TRANSFER',
  SUBINVITE = 'SUB_INVITE',
  SUBACCEPT = 'SUB_ACCEPT',
  SUBDECLINE = 'SUB_DECLINE',
  SUBREVOKE = 'SUB_REVOKE',
  SUBSUGGEST = 'SUB_SUGGEST',
  SUBACCEPTSUGGEST = 'SUB_ACCEPTSUGGEST',
  SUBDECLINESUGGEST = 'SUB_DECLINESUGGEST',
  SUBRECLAIM = 'SUB_RECLAIM',
  SUBLEAVE = 'SUB_LEAVE',
  MEMBERSUBBED = 'MEMBER_SUBBED',
  MEMBERSUBREVOKE = 'MEMBER_SUB_REVOKE',
  MEMBERSUBRECLAIM = 'MEMBER_SUB_RECLAIM',
  VOTEWITHDRAWUPDATE = 'VOTE_WITHDRAW_UPDATE',
  VOTEWITHDRAWDISMISS = 'VOTE_WITHDRAW_DISMISS',
  WITHDRAW = 'WITHDRAW',
  ROUNDCOMPLETE = 'ROUND_COMPLETE',
  NOSHOWPING = 'NO_SHOW_PING',
  TIERCHANGED = 'TIER_CHANGED',
  BRACKETROSTERREMOVED = 'BRACKET_ROSTER_REMOVED',
  BRACKETROSTERREPLACED = 'BRACKET_ROSTER_REPLACED',
  CANNOTFINDMATCH = 'CANNOT_FIND_MATCH',
  BANNEDSMURF = 'BANNED_SMURF',
  BANNEDSMURFTEAMMATE = 'BANNED_SMURF_TEAMMATE',
  BANNEDSMURFOPPONENT = 'BANNED_SMURF_OPPONENT',
  TICKETCHARGED = 'TICKET_CHARGED',
  TICKETREFUNDED = 'TICKET_REFUNDED',
  TICKETCOULDNOTBECHARGED = 'TICKET_COULD_NOT_BE_CHARGED',
  SUBINVITESELF = 'SUB_INVITE_SELF',
  GAMESTARTRETRY = 'GAME_START_RETRY',
  GAMESTARTRETRYSUMMONERS = 'GAME_START_RETRY_SUMMONERS',
  GAMESTARTRETRYOPPONENT = 'GAME_START_RETRY_OPPONENT',
  GAMESTARTFAILED = 'GAME_START_FAILED',
  GAMESTARTFAILEDSUMMONERS = 'GAME_START_FAILED_SUMMONERS',
  GAMESTARTFAILEDOPPONENT = 'GAME_START_FAILED_OPPONENT',
  GAMERESCHEDULED = 'GAME_RESCHEDULED',
}

/**
 *
 * @export
 * @interface LolClashRosterPeriodAggregatedStats
 */
export interface LolClashRosterPeriodAggregatedStats {
  /**
   *
   * @type {number}
   * @memberof LolClashRosterPeriodAggregatedStats
   */
  bracketSize?: number;
  /**
   *
   * @type {Array<LolClashRosterMatchAggregatedStats>}
   * @memberof LolClashRosterPeriodAggregatedStats
   */
  matchStats?: Array<LolClashRosterMatchAggregatedStats>;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterPeriodAggregatedStats
   */
  period?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolClashRosterPeriodAggregatedStats
   */
  playerBids?: { [key: string]: number };
  /**
   *
   * @type {number}
   * @memberof LolClashRosterPeriodAggregatedStats
   */
  time?: number;
}
/**
 *
 * @export
 * @interface LolClashRosterPhaseInfo
 */
export interface LolClashRosterPhaseInfo {
  /**
   *
   * @type {number}
   * @memberof LolClashRosterPhaseInfo
   */
  checkinTime?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashRosterPhaseInfo
   */
  isBracketComplete?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterPhaseInfo
   */
  period?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterPhaseInfo
   */
  phaseId?: number;
}
/**
 *
 * @export
 * @interface LolClashRosterPlayerAggregatedStats
 */
export interface LolClashRosterPlayerAggregatedStats {
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolClashRosterPlayerAggregatedStats
   */
  rawStatsMax?: { [key: string]: number };
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolClashRosterPlayerAggregatedStats
   */
  rawStatsSum?: { [key: string]: number };
  /**
   *
   * @type {boolean}
   * @memberof LolClashRosterPlayerAggregatedStats
   */
  sub?: boolean;
}
/**
 *
 * @export
 * @interface LolClashRosterPlayerNotification
 */
export interface LolClashRosterPlayerNotification {
  /**
   *
   * @type {LolClashRosterNotifyReason}
   * @memberof LolClashRosterPlayerNotification
   */
  notifyReason?: LolClashRosterNotifyReason;
  /**
   *
   * @type {PlayerDTO}
   * @memberof LolClashRosterPlayerNotification
   */
  playerNotificationDTO?: PlayerDTO;
  /**
   *
   * @type {RosterDTO}
   * @memberof LolClashRosterPlayerNotification
   */
  roster?: RosterDTO;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterPlayerNotification
   */
  sourcePlayerId?: number;
}
/**
 *
 * @export
 * @interface LolClashRosterStats
 */
export interface LolClashRosterStats {
  /**
   *
   * @type {number}
   * @memberof LolClashRosterStats
   */
  endTimeMs?: number;
  /**
   *
   * @type {Array<LolClashRosterPeriodAggregatedStats>}
   * @memberof LolClashRosterStats
   */
  periodStats?: Array<LolClashRosterPeriodAggregatedStats>;
  /**
   *
   * @type {{ [key: string]: LolClashRosterPlayerAggregatedStats; }}
   * @memberof LolClashRosterStats
   */
  playerStats?: { [key: string]: LolClashRosterPlayerAggregatedStats };
  /**
   *
   * @type {number}
   * @memberof LolClashRosterStats
   */
  rosterIconColorId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterStats
   */
  rosterIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterStats
   */
  rosterId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashRosterStats
   */
  rosterName?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashRosterStats
   */
  rosterShortName?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterStats
   */
  startTimeMs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterStats
   */
  tier?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashRosterStats
   */
  tournamentNameLocKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashRosterStats
   */
  tournamentNameLocKeySecondary?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterStats
   */
  tournamentPeriods?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterStats
   */
  tournamentThemeId?: number;
}
/**
 *
 * @export
 * @interface LolClashRosterWithdrawNotification
 */
export interface LolClashRosterWithdrawNotification {
  /**
   *
   * @type {LolClashRosterNotifyReason}
   * @memberof LolClashRosterWithdrawNotification
   */
  notifyReason?: LolClashRosterNotifyReason;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterWithdrawNotification
   */
  rosterId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterWithdrawNotification
   */
  sourcePlayerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterWithdrawNotification
   */
  tournamentId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashRosterWithdrawNotification
   */
  version?: number;
  /**
   *
   * @type {RosterWithdraw}
   * @memberof LolClashRosterWithdrawNotification
   */
  withdraw?: RosterWithdraw;
}
/**
 *
 * @export
 * @interface LolClashScoutingChampionMastery
 */
export interface LolClashScoutingChampionMastery {
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingChampionMastery
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingChampionMastery
   */
  championLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingChampionMastery
   */
  championPoints?: number;
}
/**
 *
 * @export
 * @interface LolClashScoutingChampions
 */
export interface LolClashScoutingChampions {
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingChampions
   */
  playerId?: number;
  /**
   *
   * @type {Array<LolClashScoutingChampionMastery>}
   * @memberof LolClashScoutingChampions
   */
  topMasteries?: Array<LolClashScoutingChampionMastery>;
  /**
   *
   * @type {Array<LolClashScoutingSeasonChampion>}
   * @memberof LolClashScoutingChampions
   */
  topSeasonChampions?: Array<LolClashScoutingSeasonChampion>;
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingChampions
   */
  totalMasteryScore?: number;
}
/**
 *
 * @export
 * @interface LolClashScoutingSeasonChampion
 */
export interface LolClashScoutingSeasonChampion {
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingSeasonChampion
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingSeasonChampion
   */
  gameCount?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashScoutingSeasonChampion
   */
  kda?: string;
  /**
   *
   * @type {LolClashKdaClassification}
   * @memberof LolClashScoutingSeasonChampion
   */
  kdaClassification?: LolClashKdaClassification;
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingSeasonChampion
   */
  winCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashScoutingSeasonChampion
   */
  winRate?: number;
}
/**
 *
 * @export
 * @interface LolClashSetPositionRequest
 */
export interface LolClashSetPositionRequest {
  /**
   *
   * @type {Position}
   * @memberof LolClashSetPositionRequest
   */
  position?: Position;
}
/**
 *
 * @export
 * @interface LolClashSetTicketRequest
 */
export interface LolClashSetTicketRequest {
  /**
   *
   * @type {number}
   * @memberof LolClashSetTicketRequest
   */
  ticketAmount?: number;
  /**
   *
   * @type {TicketType}
   * @memberof LolClashSetTicketRequest
   */
  ticketType?: TicketType;
}
/**
 *
 * @export
 * @interface LolClashSettingCategory
 */
export interface LolClashSettingCategory {
  /**
   *
   * @type {object}
   * @memberof LolClashSettingCategory
   */
  data?: object;
  /**
   *
   * @type {number}
   * @memberof LolClashSettingCategory
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolClashSimpleStateFlag
 */
export interface LolClashSimpleStateFlag {
  /**
   *
   * @type {string}
   * @memberof LolClashSimpleStateFlag
   */
  id?: string;
  /**
   *
   * @type {LolClashSimpleStateStatus}
   * @memberof LolClashSimpleStateFlag
   */
  status?: LolClashSimpleStateStatus;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashSimpleStateStatus {
  UNACKNOWLEDGED = 'UNACKNOWLEDGED',
  ACKNOWLEDGED = 'ACKNOWLEDGED',
}

/**
 *
 * @export
 * @interface LolClashSuggestedInvite
 */
export interface LolClashSuggestedInvite {
  /**
   *
   * @type {number}
   * @memberof LolClashSuggestedInvite
   */
  suggesterSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashSuggestedInvite
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClashThemeVp
 */
export interface LolClashThemeVp {
  /**
   *
   * @type {number}
   * @memberof LolClashThemeVp
   */
  themeId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashThemeVp
   */
  vp?: number;
}
/**
 *
 * @export
 * @interface LolClashThirdPartyApiPlayer
 */
export interface LolClashThirdPartyApiPlayer {
  /**
   *
   * @type {string}
   * @memberof LolClashThirdPartyApiPlayer
   */
  role?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashThirdPartyApiPlayer
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClashThirdPartyApiRoster
 */
export interface LolClashThirdPartyApiRoster {
  /**
   *
   * @type {LolClashThirdPartyApiPlayer}
   * @memberof LolClashThirdPartyApiRoster
   */
  captain?: LolClashThirdPartyApiPlayer;
  /**
   *
   * @type {Array<LolClashThirdPartyApiPlayer>}
   * @memberof LolClashThirdPartyApiRoster
   */
  members?: Array<LolClashThirdPartyApiPlayer>;
}
/**
 *
 * @export
 * @interface LolClashTicketOffer
 */
export interface LolClashTicketOffer {
  /**
   *
   * @type {number}
   * @memberof LolClashTicketOffer
   */
  amount?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashTicketOffer
   */
  isAccepted?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashTicketOffer
   */
  summonerId?: number;
  /**
   *
   * @type {TicketType}
   * @memberof LolClashTicketOffer
   */
  ticketType?: TicketType;
}
/**
 *
 * @export
 * @interface LolClashTournament
 */
export interface LolClashTournament {
  /**
   *
   * @type {boolean}
   * @memberof LolClashTournament
   */
  allowRosterCreation?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  bracketFormationInitDelayMs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  bracketFormationIntervalMs?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashTournament
   */
  bracketSize?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolClashTournament
   */
  buyInOptions?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolClashTournament
   */
  buyInOptionsPremium?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  endTimeMs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  entryFee?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClashTournament
   */
  isHonorRestrictionEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashTournament
   */
  isRankedRestrictionEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashTournament
   */
  isSmsRestrictionEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolClashTournament
   */
  lastThemeOfSeason?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  maxSubstitutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashTournament
   */
  nameLocKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashTournament
   */
  nameLocKeySecondary?: string;
  /**
   *
   * @type {Array<LolClashTournamentPhase>}
   * @memberof LolClashTournament
   */
  phases?: Array<LolClashTournamentPhase>;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  resumeTime?: number;
  /**
   *
   * @type {Array<ClashRewardConfigClient>}
   * @memberof LolClashTournament
   */
  rewardConfig?: Array<ClashRewardConfigClient>;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  rosterCreateDeadline?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  rosterSize?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  scoutingDurationMs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  startTimeMs?: number;
  /**
   *
   * @type {TournamentStatusEnum}
   * @memberof LolClashTournament
   */
  status?: TournamentStatusEnum;
  /**
   *
   * @type {number}
   * @memberof LolClashTournament
   */
  themeId?: number;
  /**
   *
   * @type {Array<TierConfig>}
   * @memberof LolClashTournament
   */
  tierConfigs?: Array<TierConfig>;
}
/**
 *
 * @export
 * @interface LolClashTournamentGameEnd
 */
export interface LolClashTournamentGameEnd {
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentGameEnd
   */
  bracketId?: number;
  /**
   *
   * @type {LolClashBracket}
   * @memberof LolClashTournamentGameEnd
   */
  oldBracket?: LolClashBracket;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentGameEnd
   */
  tournamentId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashTournamentGameEnd
   */
  tournamentNameLocKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClashTournamentGameEnd
   */
  tournamentNameLocKeySecondary?: string;
}
/**
 *
 * @export
 * @interface LolClashTournamentHistoryAndWinners
 */
export interface LolClashTournamentHistoryAndWinners {
  /**
   *
   * @type {Array<LolClashTournament>}
   * @memberof LolClashTournamentHistoryAndWinners
   */
  tournamentHistory?: Array<LolClashTournament>;
  /**
   *
   * @type {LolClashTournamentWinnerHistory}
   * @memberof LolClashTournamentHistoryAndWinners
   */
  tournamentWinners?: LolClashTournamentWinnerHistory;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashTournamentNotifyReason {
  NEWTOURNAMENT = 'NEW_TOURNAMENT',
  UPDATETOURNAMENT = 'UPDATE_TOURNAMENT',
  CANCELTOURNAMENT = 'CANCEL_TOURNAMENT',
  CANCELPERIOD = 'CANCEL_PERIOD',
  ADDPHASE = 'ADD_PHASE',
  UPDATEPHASE = 'UPDATE_PHASE',
  REVERTPHASE = 'REVERT_PHASE',
  UPDATESTATUS = 'UPDATE_STATUS',
}

/**
 *
 * @export
 * @interface LolClashTournamentPhase
 */
export interface LolClashTournamentPhase {
  /**
   *
   * @type {boolean}
   * @memberof LolClashTournamentPhase
   */
  cancelled?: boolean;
  /**
   *
   * @type {CapacityEnum}
   * @memberof LolClashTournamentPhase
   */
  capacityStatus?: CapacityEnum;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentPhase
   */
  id?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolClashTournamentPhase
   */
  limitTiers?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentPhase
   */
  lockinStartTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentPhase
   */
  period?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentPhase
   */
  scoutingStartTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentPhase
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface LolClashTournamentPhaseProgressNotificationDTO
 */
export interface LolClashTournamentPhaseProgressNotificationDTO {
  /**
   *
   * @type {CapacityEnum}
   * @memberof LolClashTournamentPhaseProgressNotificationDTO
   */
  capacityStatus?: CapacityEnum;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentPhaseProgressNotificationDTO
   */
  phaseId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentPhaseProgressNotificationDTO
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClashTournamentState {
  UPCOMING = 'UPCOMING',
  IDLE = 'IDLE',
  LOCKIN = 'LOCK_IN',
  SCOUTING = 'SCOUTING',
  INGAME = 'IN_GAME',
  RESULTS = 'RESULTS',
}

/**
 *
 * @export
 * @interface LolClashTournamentStateInfo
 */
export interface LolClashTournamentStateInfo {
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentStateInfo
   */
  currentPhaseId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentStateInfo
   */
  nextPhaseId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentStateInfo
   */
  nextStateChangeTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentStateInfo
   */
  numRemainingPeriods?: number;
  /**
   *
   * @type {LolClashTournamentState}
   * @memberof LolClashTournamentStateInfo
   */
  state?: LolClashTournamentState;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentStateInfo
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface LolClashTournamentSummary
 */
export interface LolClashTournamentSummary {
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentSummary
   */
  bracketId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashTournamentSummary
   */
  rosterId?: string;
  /**
   *
   * @type {LolClashTournamentState}
   * @memberof LolClashTournamentSummary
   */
  state?: LolClashTournamentState;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentSummary
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface LolClashTournamentUpdatedNotification
 */
export interface LolClashTournamentUpdatedNotification {
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentUpdatedNotification
   */
  currentRetry?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentUpdatedNotification
   */
  maxRetry?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolClashTournamentUpdatedNotification
   */
  missingPlayerIds?: Array<number>;
  /**
   *
   * @type {LolClashRosterNotifyReason}
   * @memberof LolClashTournamentUpdatedNotification
   */
  notifyReason?: LolClashRosterNotifyReason;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentUpdatedNotification
   */
  retrySeconds?: number;
}
/**
 *
 * @export
 * @interface LolClashTournamentUpdatedNotificationDTO
 */
export interface LolClashTournamentUpdatedNotificationDTO {
  /**
   *
   * @type {LolClashTournamentNotifyReason}
   * @memberof LolClashTournamentUpdatedNotificationDTO
   */
  reason?: LolClashTournamentNotifyReason;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentUpdatedNotificationDTO
   */
  relevantPhaseId?: number;
  /**
   *
   * @type {TournamentDTO}
   * @memberof LolClashTournamentUpdatedNotificationDTO
   */
  tournament?: TournamentDTO;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentUpdatedNotificationDTO
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface LolClashTournamentWinnerHistory
 */
export interface LolClashTournamentWinnerHistory {
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentWinnerHistory
   */
  tournamentId?: number;
  /**
   *
   * @type {Array<LolClashTournamentWinnerInfo>}
   * @memberof LolClashTournamentWinnerHistory
   */
  winners?: Array<LolClashTournamentWinnerInfo>;
}
/**
 *
 * @export
 * @interface LolClashTournamentWinnerInfo
 */
export interface LolClashTournamentWinnerInfo {
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentWinnerInfo
   */
  averageWinDuration?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentWinnerInfo
   */
  createTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentWinnerInfo
   */
  logo?: number;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentWinnerInfo
   */
  logoColor?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashTournamentWinnerInfo
   */
  name?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolClashTournamentWinnerInfo
   */
  playerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentWinnerInfo
   */
  rosterId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClashTournamentWinnerInfo
   */
  shortName?: string;
  /**
   *
   * @type {number}
   * @memberof LolClashTournamentWinnerInfo
   */
  tier?: number;
}
/**
 *
 * @export
 * @interface LolClashUserResource
 */
export interface LolClashUserResource {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolClashUserResource
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof LolClashUserResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClubsBaseMembershipInviteDto
 */
export interface LolClubsBaseMembershipInviteDto {
  /**
   *
   * @type {string}
   * @memberof LolClubsBaseMembershipInviteDto
   */
  clubKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsBaseMembershipInviteDto
   */
  clubName?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsBaseMembershipInviteDto
   */
  inviteePlatformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsBaseMembershipInviteDto
   */
  inviteeSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsBaseMembershipInviteDto
   */
  inviterAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsBaseMembershipInviteDto
   */
  inviterPlatformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsBaseMembershipInviteDto
   */
  inviterSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsBaseMembershipInviteDto
   */
  status?: number;
}
/**
 *
 * @export
 * @interface LolClubsBlockedPlayerResource
 */
export interface LolClubsBlockedPlayerResource {
  /**
   *
   * @type {string}
   * @memberof LolClubsBlockedPlayerResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsBlockedPlayerResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClubsClub
 */
export interface LolClubsClub {
  /**
   *
   * @type {string}
   * @memberof LolClubsClub
   */
  key?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClub
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubDataDto
 */
export interface LolClubsClubDataDto {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDataDto
   */
  clubKey?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubDataDto
   */
  createdTs?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDataDto
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDataDto
   */
  jid?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubDataDto
   */
  lastModifiedTs?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDataDto
   */
  motd?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDataDto
   */
  name?: string;
  /**
   *
   * @type {LolClubsClubPermissions}
   * @memberof LolClubsClubDataDto
   */
  permissionMap?: LolClubsClubPermissions;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDataDto
   */
  role?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDataDto
   */
  tag?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubDto
 */
export interface LolClubsClubDto {
  /**
   *
   * @type {LolClubsClubDataDto}
   * @memberof LolClubsClubDto
   */
  clubData?: LolClubsClubDataDto;
  /**
   *
   * @type {LolClubsClubMembershipDto}
   * @memberof LolClubsClubDto
   */
  membership?: LolClubsClubMembershipDto;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDto
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubDto
   */
  resourceUri?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubInvite
 */
export interface LolClubsClubInvite {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubInvite
   */
  clubKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubInvite
   */
  clubName?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubInvite
   */
  inviteeAccountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubInvite
   */
  inviteeSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubInvite
   */
  inviterAccountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubInvite
   */
  inviterSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubInvite
   */
  inviterSummonerName?: string;
  /**
   *
   * @type {LolClubsClubInviteStatus}
   * @memberof LolClubsClubInvite
   */
  status?: LolClubsClubInviteStatus;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClubsClubInviteStatus {
  PENDING = 'PENDING',
  ACCEPTED = 'ACCEPTED',
  REJECTED = 'REJECTED',
  BLOCKED = 'BLOCKED',
}

/**
 *
 * @export
 * @interface LolClubsClubMOTD
 */
export interface LolClubsClubMOTD {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubMOTD
   */
  motd?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubMember
 */
export interface LolClubsClubMember {
  /**
   *
   * @type {number}
   * @memberof LolClubsClubMember
   */
  accountId?: number;
  /**
   *
   * @type {LolClubsClubRole}
   * @memberof LolClubsClubMember
   */
  role?: LolClubsClubRole;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubMember
   */
  since?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubMember
   */
  summonerIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubMember
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubMember
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubMemberLists
 */
export interface LolClubsClubMemberLists {
  /**
   *
   * @type {Array<LolClubsClubMember>}
   * @memberof LolClubsClubMemberLists
   */
  activeMembers?: Array<LolClubsClubMember>;
  /**
   *
   * @type {Array<LolClubsClubMember>}
   * @memberof LolClubsClubMemberLists
   */
  invitedMembers?: Array<LolClubsClubMember>;
  /**
   *
   * @type {Array<LolClubsClubMember>}
   * @memberof LolClubsClubMemberLists
   */
  nominatedMembers?: Array<LolClubsClubMember>;
  /**
   *
   * @type {Array<LolClubsClubMember>}
   * @memberof LolClubsClubMemberLists
   */
  removedMembers?: Array<LolClubsClubMember>;
}
/**
 *
 * @export
 * @interface LolClubsClubMembershipDto
 */
export interface LolClubsClubMembershipDto {
  /**
   *
   * @type {Array<LolClubsMemberSinceDto>}
   * @memberof LolClubsClubMembershipDto
   */
  activeMembers?: Array<LolClubsMemberSinceDto>;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubMembershipDto
   */
  clubKey?: string;
  /**
   *
   * @type {Array<LolClubsMemberSinceDto>}
   * @memberof LolClubsClubMembershipDto
   */
  invitedMembers?: Array<LolClubsMemberSinceDto>;
  /**
   *
   * @type {Array<LolClubsMemberSinceDto>}
   * @memberof LolClubsClubMembershipDto
   */
  nominatedMembers?: Array<LolClubsMemberSinceDto>;
  /**
   *
   * @type {Array<LolClubsMemberSinceDto>}
   * @memberof LolClubsClubMembershipDto
   */
  removedMembers?: Array<LolClubsMemberSinceDto>;
}
/**
 *
 * @export
 * @interface LolClubsClubName
 */
export interface LolClubsClubName {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubName
   */
  name?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClubsClubPermission {
  INVITE = 'INVITE',
  PROMOTE = 'PROMOTE',
  DEMOTE = 'DEMOTE',
  KICKMEMBER = 'KICK_MEMBER',
  KICKOFFICER = 'KICK_OFFICER',
  OWNERSHIPTRANSFER = 'OWNERSHIP_TRANSFER',
  NOMINATE = 'NOMINATE',
  SETMOTD = 'SET_MOTD',
  SETDESCRIPTION = 'SET_DESCRIPTION',
}

/**
 *
 * @export
 * @interface LolClubsClubPermissions
 */
export interface LolClubsClubPermissions {
  /**
   *
   * @type {Array<string>}
   * @memberof LolClubsClubPermissions
   */
  ADMIN?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolClubsClubPermissions
   */
  INVITEE?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolClubsClubPermissions
   */
  MEMBER?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolClubsClubPermissions
   */
  OFFICER?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolClubsClubPermissions
   */
  OWNER?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolClubsClubPermissions
   */
  UNKNOWN?: Array<string>;
}
/**
 *
 * @export
 * @interface LolClubsClubPlayer
 */
export interface LolClubsClubPlayer {
  /**
   *
   * @type {number}
   * @memberof LolClubsClubPlayer
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubPlayer
   */
  summonerIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubPlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubPlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubPreferences
 */
export interface LolClubsClubPreferences {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubPreferences
   */
  primaryClubKey?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClubsClubPreferences
   */
  shareClubAffiliation?: boolean;
}
/**
 *
 * @export
 * @interface LolClubsClubReferenceDto
 */
export interface LolClubsClubReferenceDto {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubReferenceDto
   */
  clubKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubReferenceDto
   */
  clubName?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClubsClubRole {
  UNKNOWN = 'UNKNOWN',
  OWNER = 'OWNER',
  OFFICER = 'OFFICER',
  MEMBER = 'MEMBER',
  INVITEE = 'INVITEE',
  NOMINEE = 'NOMINEE',
}

/**
 *
 * @export
 * @interface LolClubsClubTag
 */
export interface LolClubsClubTag {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubTag
   */
  tag?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubsConfig
 */
export interface LolClubsClubsConfig {
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  clubDescriptionMaxLength?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  clubMotdMaxLength?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClubsClubsConfig
   */
  clubNominationsEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  clubNominationsMaxPending?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  clubTagRequirementMinGames?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  clubTagRequirementMinMembers?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  clubTagRequirementsMinMemberLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  maxActiveClubs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  maxClubNameLength?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  maxClubTagLength?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  minClubNameLength?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsConfig
   */
  minClubTagLength?: number;
}
/**
 *
 * @export
 * @interface LolClubsClubsNotificationResource
 */
export interface LolClubsClubsNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  created?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClubsClubsNotificationResource
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolClubsClubsNotificationResource
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  detailKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsNotificationResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubsPresenceDataDto
 */
export interface LolClubsClubsPresenceDataDto {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsPresenceDataDto
   */
  clubName?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsPresenceDataDto
   */
  clubTag?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsPresenceDataDto
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsPresenceDataDto
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolClubsClubsServerConfigDto
 */
export interface LolClubsClubsServerConfigDto {
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  clubDescriptionMaxLength?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  clubMotdMaxLength?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolClubsClubsServerConfigDto
   */
  clubNominationsEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  clubNominationsMaxPending?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  clubTagRequirementMinGames?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  clubTagRequirementMinMembers?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  clubTagRequirementsMinMemberLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  maxActiveClubs?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  maxClubNameLength?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  maxClubTagLength?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  minClubNameLength?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsServerConfigDto
   */
  minClubTagLength?: number;
}
/**
 *
 * @export
 * @interface LolClubsClubsSummoner
 */
export interface LolClubsClubsSummoner {
  /**
   *
   * @type {string}
   * @memberof LolClubsClubsSummoner
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsClubsSummoner
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClubsLoginSession
 */
export interface LolClubsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolClubsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {LolClubsLoginSessionStates}
   * @memberof LolClubsLoginSession
   */
  state?: LolClubsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolClubsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolClubsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolClubsMemberSinceDto
 */
export interface LolClubsMemberSinceDto {
  /**
   *
   * @type {LolClubsPlayerInfoDto}
   * @memberof LolClubsMemberSinceDto
   */
  playerInfo?: LolClubsPlayerInfoDto;
  /**
   *
   * @type {string}
   * @memberof LolClubsMemberSinceDto
   */
  role?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsMemberSinceDto
   */
  since?: number;
}
/**
 *
 * @export
 * @interface LolClubsMembershipInviteDto
 */
export interface LolClubsMembershipInviteDto {
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipInviteDto
   */
  clubKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipInviteDto
   */
  clubName?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsMembershipInviteDto
   */
  inviteeAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipInviteDto
   */
  inviteePlatformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsMembershipInviteDto
   */
  inviteeSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsMembershipInviteDto
   */
  inviterAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipInviteDto
   */
  inviterPlatformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsMembershipInviteDto
   */
  inviterSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsMembershipInviteDto
   */
  status?: number;
}
/**
 *
 * @export
 * @interface LolClubsMembershipNoficationsDto
 */
export interface LolClubsMembershipNoficationsDto {
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipNoficationsDto
   */
  action?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipNoficationsDto
   */
  clubKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipNoficationsDto
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipNoficationsDto
   */
  role?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsMembershipNoficationsDto
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolClubsPlayerClub
 */
export interface LolClubsPlayerClub {
  /**
   *
   * @type {number}
   * @memberof LolClubsPlayerClub
   */
  created?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerClub
   */
  description?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClubsPlayerClub
   */
  isClubTagEligible?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerClub
   */
  jid?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerClub
   */
  key?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsPlayerClub
   */
  lastModified?: number;
  /**
   *
   * @type {LolClubsClubMemberLists}
   * @memberof LolClubsPlayerClub
   */
  members?: LolClubsClubMemberLists;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerClub
   */
  motd?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerClub
   */
  name?: string;
  /**
   *
   * @type {LolClubsClubMember}
   * @memberof LolClubsPlayerClub
   */
  owner?: LolClubsClubMember;
  /**
   *
   * @type {LolClubsClubPermissions}
   * @memberof LolClubsPlayerClub
   */
  permissions?: LolClubsClubPermissions;
  /**
   *
   * @type {boolean}
   * @memberof LolClubsPlayerClub
   */
  primary?: boolean;
  /**
   *
   * @type {LolClubsClubRole}
   * @memberof LolClubsPlayerClub
   */
  role?: LolClubsClubRole;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerClub
   */
  tag?: string;
}
/**
 *
 * @export
 * @interface LolClubsPlayerClubMembership
 */
export interface LolClubsPlayerClubMembership {
  /**
   *
   * @type {Array<LolClubsPlayerClub>}
   * @memberof LolClubsPlayerClubMembership
   */
  activeClubs?: Array<LolClubsPlayerClub>;
  /**
   *
   * @type {LolClubsClubsConfig}
   * @memberof LolClubsPlayerClubMembership
   */
  clubsServerConfig?: LolClubsClubsConfig;
  /**
   *
   * @type {LolClubsClubPlayer}
   * @memberof LolClubsPlayerClubMembership
   */
  info?: LolClubsClubPlayer;
  /**
   *
   * @type {Array<LolClubsClubInvite>}
   * @memberof LolClubsPlayerClubMembership
   */
  pendingInvites?: Array<LolClubsClubInvite>;
  /**
   *
   * @type {LolClubsClubPreferences}
   * @memberof LolClubsPlayerClubMembership
   */
  preferences?: LolClubsClubPreferences;
  /**
   *
   * @type {Array<LolClubsClub>}
   * @memberof LolClubsPlayerClubMembership
   */
  removedClubs?: Array<LolClubsClub>;
  /**
   *
   * @type {Array<LolClubsClub>}
   * @memberof LolClubsPlayerClubMembership
   */
  revokedInviteClubs?: Array<LolClubsClub>;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerClubMembership
   */
  secureClubPresenceInfoString?: string;
}
/**
 *
 * @export
 * @interface LolClubsPlayerInfoDto
 */
export interface LolClubsPlayerInfoDto {
  /**
   *
   * @type {number}
   * @memberof LolClubsPlayerInfoDto
   */
  currentAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerInfoDto
   */
  currentPlatformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsPlayerInfoDto
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClubsPlayerMembershipDto
 */
export interface LolClubsPlayerMembershipDto {
  /**
   *
   * @type {Array<LolClubsClubDto>}
   * @memberof LolClubsPlayerMembershipDto
   */
  activeClubs?: Array<LolClubsClubDto>;
  /**
   *
   * @type {LolClubsClubsServerConfigDto}
   * @memberof LolClubsPlayerMembershipDto
   */
  clubsServerConfig?: LolClubsClubsServerConfigDto;
  /**
   *
   * @type {Array<LolClubsMembershipInviteDto>}
   * @memberof LolClubsPlayerMembershipDto
   */
  pendingInvites?: Array<LolClubsMembershipInviteDto>;
  /**
   *
   * @type {LolClubsPlayerInfoDto}
   * @memberof LolClubsPlayerMembershipDto
   */
  player?: LolClubsPlayerInfoDto;
  /**
   *
   * @type {LolClubsPlayerMembershipPreferencesDto}
   * @memberof LolClubsPlayerMembershipDto
   */
  playerClubPreferences?: LolClubsPlayerMembershipPreferencesDto;
  /**
   *
   * @type {Array<LolClubsClubReferenceDto>}
   * @memberof LolClubsPlayerMembershipDto
   */
  removedClubs?: Array<LolClubsClubReferenceDto>;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerMembershipDto
   */
  resourceUri?: string;
  /**
   *
   * @type {Array<LolClubsClubReferenceDto>}
   * @memberof LolClubsPlayerMembershipDto
   */
  revokedInviteClubs?: Array<LolClubsClubReferenceDto>;
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerMembershipDto
   */
  secureClubPresenceInfoString?: string;
}
/**
 *
 * @export
 * @interface LolClubsPlayerMembershipPreferencesDto
 */
export interface LolClubsPlayerMembershipPreferencesDto {
  /**
   *
   * @type {string}
   * @memberof LolClubsPlayerMembershipPreferencesDto
   */
  primaryActiveClubKey?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolClubsPlayerMembershipPreferencesDto
   */
  shareClubAffiliation?: boolean;
}
/**
 *
 * @export
 * @interface LolClubsPlayerMembershipWithNotificationsDto
 */
export interface LolClubsPlayerMembershipWithNotificationsDto {
  /**
   *
   * @type {Array<LolClubsMembershipNoficationsDto>}
   * @memberof LolClubsPlayerMembershipWithNotificationsDto
   */
  membershipNotifications?: Array<LolClubsMembershipNoficationsDto>;
  /**
   *
   * @type {LolClubsPlayerMembershipDto}
   * @memberof LolClubsPlayerMembershipWithNotificationsDto
   */
  playerMembership?: LolClubsPlayerMembershipDto;
}
/**
 *
 * @export
 * @interface LolClubsPublicClubMemberLists
 */
export interface LolClubsPublicClubMemberLists {
  /**
   *
   * @type {Array<LolClubsPublicClubPlayer>}
   * @memberof LolClubsPublicClubMemberLists
   */
  activeMembers?: Array<LolClubsPublicClubPlayer>;
}
/**
 *
 * @export
 * @interface LolClubsPublicClubPlayer
 */
export interface LolClubsPublicClubPlayer {
  /**
   *
   * @type {number}
   * @memberof LolClubsPublicClubPlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicClubPlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolClubsPublicClubPreferences
 */
export interface LolClubsPublicClubPreferences {
  /**
   *
   * @type {boolean}
   * @memberof LolClubsPublicClubPreferences
   */
  shareClubAffiliation?: boolean;
}
/**
 *
 * @export
 * @interface LolClubsPublicClubServiceTag
 */
export interface LolClubsPublicClubServiceTag {
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicClubServiceTag
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsPublicClubServiceTag
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicClubServiceTag
   */
  tag?: string;
}
/**
 *
 * @export
 * @interface LolClubsPublicClubTag
 */
export interface LolClubsPublicClubTag {
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicClubTag
   */
  clubName?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicClubTag
   */
  clubTag?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsPublicClubTag
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClubsPublicClubsPublicData
 */
export interface LolClubsPublicClubsPublicData {
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicClubsPublicData
   */
  availability?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicClubsPublicData
   */
  lastSeenOnlineTimestamp?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsPublicClubsPublicData
   */
  summonerIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolClubsPublicClubsPublicData
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicClubsPublicData
   */
  summonerName?: string;
  /**
   *
   * @type {LolClubsPublicClubTag}
   * @memberof LolClubsPublicClubsPublicData
   */
  tag?: LolClubsPublicClubTag;
}
/**
 *
 * @export
 * @interface LolClubsPublicPlayerClub
 */
export interface LolClubsPublicPlayerClub {
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicPlayerClub
   */
  key?: string;
  /**
   *
   * @type {LolClubsPublicClubMemberLists}
   * @memberof LolClubsPublicPlayerClub
   */
  members?: LolClubsPublicClubMemberLists;
}
/**
 *
 * @export
 * @interface LolClubsPublicPlayerClubMembership
 */
export interface LolClubsPublicPlayerClubMembership {
  /**
   *
   * @type {Array<LolClubsPublicPlayerClub>}
   * @memberof LolClubsPublicPlayerClubMembership
   */
  activeClubs?: Array<LolClubsPublicPlayerClub>;
  /**
   *
   * @type {LolClubsPublicClubPlayer}
   * @memberof LolClubsPublicPlayerClubMembership
   */
  info?: LolClubsPublicClubPlayer;
  /**
   *
   * @type {LolClubsPublicClubPreferences}
   * @memberof LolClubsPublicPlayerClubMembership
   */
  preferences?: LolClubsPublicClubPreferences;
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicPlayerClubMembership
   */
  secureClubPresenceInfoString?: string;
}
/**
 *
 * @export
 * @interface LolClubsPublicSessionResource
 */
export interface LolClubsPublicSessionResource {
  /**
   *
   * @type {number}
   * @memberof LolClubsPublicSessionResource
   */
  sessionExpire?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicSessionResource
   */
  sessionState?: string;
}
/**
 *
 * @export
 * @interface LolClubsPublicUserResource
 */
export interface LolClubsPublicUserResource {
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicUserResource
   */
  availability?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsPublicUserResource
   */
  icon?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicUserResource
   */
  lastSeenOnlineTimestamp?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolClubsPublicUserResource
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolClubsPublicUserResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsPublicUserResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolClubsRiotMessagingServiceMessage
 */
export interface LolClubsRiotMessagingServiceMessage {
  /**
   *
   * @type {string}
   * @memberof LolClubsRiotMessagingServiceMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsRiotMessagingServiceMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof LolClubsRiotMessagingServiceMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsRiotMessagingServiceMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsRiotMessagingServiceMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @interface LolClubsRosterItemDto
 */
export interface LolClubsRosterItemDto {
  /**
   *
   * @type {number}
   * @memberof LolClubsRosterItemDto
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsRosterItemDto
   */
  clubRole?: string;
  /**
   *
   * @type {number}
   * @memberof LolClubsRosterItemDto
   */
  summonerIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolClubsRosterItemDto
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolCollectionsAcsChampionGames
 */
export interface LolCollectionsAcsChampionGames {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsAcsChampionGames
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsAcsChampionGames
   */
  queue?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsAcsChampionGamesCollection
 */
export interface LolCollectionsAcsChampionGamesCollection {
  /**
   *
   * @type {Array<LolCollectionsAcsChampionGames>}
   * @memberof LolCollectionsAcsChampionGamesCollection
   */
  champions?: Array<LolCollectionsAcsChampionGames>;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsAcsChampionGamesCollection
   */
  gameCount?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsChampionMastery
 */
export interface LolCollectionsCollectionsChampionMastery {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  championLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  championPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  championPointsSinceLastLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  championPointsUntilNextLevel?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  chestGranted?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  formattedChampionPoints?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  formattedMasteryGoal?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  highestGrade?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  lastPlayTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  playerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChampionMastery
   */
  tokensEarned?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsChestEligibility
 */
export interface LolCollectionsCollectionsChestEligibility {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChestEligibility
   */
  earnableChests?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChestEligibility
   */
  maximumChests?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsChestEligibility
   */
  nextChestRechargeTime?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsOwnership
 */
export interface LolCollectionsCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsCollectionsOwnership
   */
  owned?: boolean;
  /**
   *
   * @type {LolCollectionsCollectionsRental}
   * @memberof LolCollectionsCollectionsOwnership
   */
  rental?: LolCollectionsCollectionsRental;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsRental
 */
export interface LolCollectionsCollectionsRental {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsRental
   */
  endDate?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsRental
   */
  purchaseDate?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsCollectionsRental
   */
  rented?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsRental
   */
  winCountRemaining?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsSummonerBackdrop
 */
export interface LolCollectionsCollectionsSummonerBackdrop {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  backdropImage?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  backdropMaskColor?: string;
  /**
   *
   * @type {LolCollectionsCollectionsSummonerBackdropType}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  backdropType?: LolCollectionsCollectionsSummonerBackdropType;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  backdropVideo?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsSummonerBackdrop
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolCollectionsCollectionsSummonerBackdropType {
  Default = 'default',
  SummonerIcon = 'summoner-icon',
  RecentlyPlayed = 'recently-played',
  HighestMastery = 'highest-mastery',
  SpecifiedSkin = 'specified-skin',
}

/**
 *
 * @export
 * @interface LolCollectionsCollectionsSummonerIcon
 */
export interface LolCollectionsCollectionsSummonerIcon {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsSummonerIcon
   */
  iconId?: number;
  /**
   *
   * @type {LolCollectionsCollectionsOwnership}
   * @memberof LolCollectionsCollectionsSummonerIcon
   */
  ownership?: LolCollectionsCollectionsOwnership;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsSummonerIcons
 */
export interface LolCollectionsCollectionsSummonerIcons {
  /**
   *
   * @type {Array<number>}
   * @memberof LolCollectionsCollectionsSummonerIcons
   */
  icons?: Array<number>;
  /**
   *
   * @type {Array<LolCollectionsCollectionsSummonerIcon>}
   * @memberof LolCollectionsCollectionsSummonerIcons
   */
  summonerIcons?: Array<LolCollectionsCollectionsSummonerIcon>;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsSummonerIcons
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsSummonerSpells
 */
export interface LolCollectionsCollectionsSummonerSpells {
  /**
   *
   * @type {Array<number>}
   * @memberof LolCollectionsCollectionsSummonerSpells
   */
  spells?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsSummonerSpells
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsTopChampionMasteries
 */
export interface LolCollectionsCollectionsTopChampionMasteries {
  /**
   *
   * @type {Array<LolCollectionsCollectionsChampionMastery>}
   * @memberof LolCollectionsCollectionsTopChampionMasteries
   */
  masteries?: Array<LolCollectionsCollectionsChampionMastery>;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsTopChampionMasteries
   */
  score?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsTopChampionMasteries
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsWardSkin
 */
export interface LolCollectionsCollectionsWardSkin {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsWardSkin
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsCollectionsWardSkin
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsWardSkin
   */
  name?: string;
  /**
   *
   * @type {LolCollectionsCollectionsOwnership}
   * @memberof LolCollectionsCollectionsWardSkin
   */
  ownership?: LolCollectionsCollectionsOwnership;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsWardSkin
   */
  wardImagePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsCollectionsWardSkin
   */
  wardShadowImagePath?: string;
}
/**
 *
 * @export
 * @interface LolCollectionsCollectionsWardSkinList
 */
export interface LolCollectionsCollectionsWardSkinList {
  /**
   *
   * @type {Array<number>}
   * @memberof LolCollectionsCollectionsWardSkinList
   */
  wardSkinList?: Array<number>;
}
/**
 *
 * @export
 * @interface LolCollectionsGameDataChampionMasteries
 */
export interface LolCollectionsGameDataChampionMasteries {
  /**
   *
   * @type {LolCollectionsGameDataChampionMasteryTree}
   * @memberof LolCollectionsGameDataChampionMasteries
   */
  tree?: LolCollectionsGameDataChampionMasteryTree;
}
/**
 *
 * @export
 * @interface LolCollectionsGameDataChampionMasteryGroup
 */
export interface LolCollectionsGameDataChampionMasteryGroup {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsGameDataChampionMasteryGroup
   */
  id?: number;
  /**
   *
   * @type {Array<LolCollectionsGameDataChampionMasteryRow>}
   * @memberof LolCollectionsGameDataChampionMasteryGroup
   */
  rows?: Array<LolCollectionsGameDataChampionMasteryRow>;
}
/**
 *
 * @export
 * @interface LolCollectionsGameDataChampionMasteryRow
 */
export interface LolCollectionsGameDataChampionMasteryRow {
  /**
   *
   * @type {Array<number>}
   * @memberof LolCollectionsGameDataChampionMasteryRow
   */
  masteries?: Array<number>;
}
/**
 *
 * @export
 * @interface LolCollectionsGameDataChampionMasteryTree
 */
export interface LolCollectionsGameDataChampionMasteryTree {
  /**
   *
   * @type {Array<LolCollectionsGameDataChampionMasteryGroup>}
   * @memberof LolCollectionsGameDataChampionMasteryTree
   */
  groups?: Array<LolCollectionsGameDataChampionMasteryGroup>;
}
/**
 *
 * @export
 * @interface LolCollectionsGameDataChampionSkin
 */
export interface LolCollectionsGameDataChampionSkin {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsGameDataChampionSkin
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsGameDataChampionSkin
   */
  isBase?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsGameDataChampionSkin
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsGameDataChampionSkin
   */
  splashPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsGameDataChampionSkin
   */
  splashVideoPath?: string;
}
/**
 *
 * @export
 * @interface LolCollectionsGameDataChampionSummary
 */
export interface LolCollectionsGameDataChampionSummary {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsGameDataChampionSummary
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsGameDataSplashMetadata
 */
export interface LolCollectionsGameDataSplashMetadata {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsGameDataSplashMetadata
   */
  CalculatedColor?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsGameDataSplashMetadata
   */
  OverrideColor?: string;
}
/**
 *
 * @export
 * @interface LolCollectionsInventoryItem
 */
export interface LolCollectionsInventoryItem {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsInventoryItem
   */
  itemId?: number;
  /**
   *
   * @type {LolCollectionsItemOwnershipType}
   * @memberof LolCollectionsInventoryItem
   */
  ownershipType?: LolCollectionsItemOwnershipType;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItem
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsInventoryItem
   */
  quantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItem
   */
  uuid?: string;
}
/**
 *
 * @export
 * @interface LolCollectionsInventoryItemDTO
 */
export interface LolCollectionsInventoryItemDTO {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemDTO
   */
  entitlementId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemDTO
   */
  entitlementTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemDTO
   */
  expirationDate?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsInventoryItemDTO
   */
  f2p?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemDTO
   */
  instanceId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemDTO
   */
  instanceTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemDTO
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsInventoryItemDTO
   */
  itemId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsInventoryItemDTO
   */
  loyalty?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsInventoryItemDTO
   */
  lsb?: boolean;
  /**
   *
   * @type {object}
   * @memberof LolCollectionsInventoryItemDTO
   */
  payload?: object;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemDTO
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsInventoryItemDTO
   */
  quantity?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsInventoryItemDTO
   */
  rental?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemDTO
   */
  usedInGameDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsInventoryItemDTO
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsInventoryItemWithPayload
 */
export interface LolCollectionsInventoryItemWithPayload {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemWithPayload
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsInventoryItemWithPayload
   */
  itemId?: number;
  /**
   *
   * @type {LolCollectionsItemOwnershipType}
   * @memberof LolCollectionsInventoryItemWithPayload
   */
  ownershipType?: LolCollectionsItemOwnershipType;
  /**
   *
   * @type {object}
   * @memberof LolCollectionsInventoryItemWithPayload
   */
  payload?: object;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemWithPayload
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsInventoryItemWithPayload
   */
  quantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsInventoryItemWithPayload
   */
  uuid?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolCollectionsItemOwnershipType {
  OWNED = 'OWNED',
  RENTED = 'RENTED',
  LOYALTY = 'LOYALTY',
  F2P = 'F2P',
}

/**
 *
 * @export
 * @interface LolCollectionsLcdsDynamicClientConfig
 */
export interface LolCollectionsLcdsDynamicClientConfig {
  /**
   *
   * @type {object}
   * @memberof LolCollectionsLcdsDynamicClientConfig
   */
  DisabledChampions?: object;
}
/**
 *
 * @export
 * @interface LolCollectionsLoginSession
 */
export interface LolCollectionsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {LolCollectionsLoginSessionStates}
   * @memberof LolCollectionsLoginSession
   */
  state?: LolCollectionsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolCollectionsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolCollectionsNumberFormattingBehavior
 */
export interface LolCollectionsNumberFormattingBehavior {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsNumberFormattingBehavior
   */
  digitsForThousandsSeperator?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsNumberFormattingBehavior
   */
  trimTrailingZerosAfterDecimal?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsNumberFormattingBehavior
   */
  westernNumberGrouping?: boolean;
}
/**
 *
 * @export
 * @interface LolCollectionsNumberFormattingData
 */
export interface LolCollectionsNumberFormattingData {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  billionAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  decimalSeperator?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  hourAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  kilometersAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  metersAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  millionAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  minuteAbbreviation?: string;
  /**
   *
   * @type {LolCollectionsNumberFormattingBehavior}
   * @memberof LolCollectionsNumberFormattingData
   */
  numberFormattingBehavior?: LolCollectionsNumberFormattingBehavior;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  oneHundredMillionAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  percentageFormat?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  secondAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  tenThousandAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  thousandAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  thousandSeperator?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsNumberFormattingData
   */
  trillionAbbreviation?: string;
}
/**
 *
 * @export
 * @interface LolCollectionsPlayerNotification
 */
export interface LolCollectionsPlayerNotification {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsPlayerNotification
   */
  backgroundUrl?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCollectionsPlayerNotification
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolCollectionsPlayerNotification
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolCollectionsPlayerNotification
   */
  detailKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsPlayerNotification
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsPlayerNotification
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsPlayerNotification
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsPlayerNotification
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsPlayerNotification
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsPlayerNotification
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolCollectionsSummoner
 */
export interface LolCollectionsSummoner {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsSummoner
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCollectionsSummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCollectionsSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsSummonerProfile
 */
export interface LolCollectionsSummonerProfile {
  /**
   *
   * @type {number}
   * @memberof LolCollectionsSummonerProfile
   */
  backgroundSkinId?: number;
}
/**
 *
 * @export
 * @interface LolCollectionsSummonerProfileUpdate
 */
export interface LolCollectionsSummonerProfileUpdate {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsSummonerProfileUpdate
   */
  key?: string;
  /**
   *
   * @type {object}
   * @memberof LolCollectionsSummonerProfileUpdate
   */
  value?: object;
}
/**
 *
 * @export
 * @interface LolCollectionsTPVSaveResponseDTO
 */
export interface LolCollectionsTPVSaveResponseDTO {
  /**
   *
   * @type {string}
   * @memberof LolCollectionsTPVSaveResponseDTO
   */
  data?: string;
}
/**
 *
 * @export
 * @interface LolContentTargetingChampionGames
 */
export interface LolContentTargetingChampionGames {
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingChampionGames
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingChampionGames
   */
  lane?: string;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingChampionGames
   */
  queue?: number;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingChampionGames
   */
  role?: string;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingChampionGames
   */
  timestamp?: number;
}
/**
 *
 * @export
 * @interface LolContentTargetingChampionGamesCollection
 */
export interface LolContentTargetingChampionGamesCollection {
  /**
   *
   * @type {Array<LolContentTargetingChampionGames>}
   * @memberof LolContentTargetingChampionGamesCollection
   */
  champions?: Array<LolContentTargetingChampionGames>;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingChampionGamesCollection
   */
  gameCount?: number;
}
/**
 *
 * @export
 * @interface LolContentTargetingCollectionsChampionMastery
 */
export interface LolContentTargetingCollectionsChampionMastery {
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingCollectionsChampionMastery
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingCollectionsChampionMastery
   */
  championLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingCollectionsChampionMastery
   */
  championPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingCollectionsChampionMastery
   */
  lastPlayTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingCollectionsChampionMastery
   */
  playerId?: number;
}
/**
 *
 * @export
 * @interface LolContentTargetingContentTargetingFilterResponse
 */
export interface LolContentTargetingContentTargetingFilterResponse {
  /**
   *
   * @type {Array<string>}
   * @memberof LolContentTargetingContentTargetingFilterResponse
   */
  filters?: Array<string>;
}
/**
 *
 * @export
 * @interface LolContentTargetingContentTargetingLocaleResponse
 */
export interface LolContentTargetingContentTargetingLocaleResponse {
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingContentTargetingLocaleResponse
   */
  locale?: string;
}
/**
 *
 * @export
 * @interface LolContentTargetingGeoInfo
 */
export interface LolContentTargetingGeoInfo {
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingGeoInfo
   */
  city?: string;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingGeoInfo
   */
  country?: string;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingGeoInfo
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolContentTargetingGeoInfoResponse
 */
export interface LolContentTargetingGeoInfoResponse {
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingGeoInfoResponse
   */
  errorMessage?: string;
  /**
   *
   * @type {LolContentTargetingGeoInfo}
   * @memberof LolContentTargetingGeoInfoResponse
   */
  geoInfo?: LolContentTargetingGeoInfo;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingGeoInfoResponse
   */
  isInitialized?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingGeoInfoResponse
   */
  isLatest?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingGeoInfoResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolContentTargetingLoginSession
 */
export interface LolContentTargetingLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolContentTargetingLoginSessionState}
   * @memberof LolContentTargetingLoginSession
   */
  state?: LolContentTargetingLoginSessionState;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolContentTargetingLoginSessionState {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolContentTargetingMission
 */
export interface LolContentTargetingMission {
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingMission
   */
  completedDate?: number;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingMission
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingMission
   */
  internalName?: string;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingMission
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolContentTargetingPlatformConfig
 */
export interface LolContentTargetingPlatformConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  ABTestFilterEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingPlatformConfig
   */
  ABTestFilterGroups?: number;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingPlatformConfig
   */
  ABTestFilterSalt?: number;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingPlatformConfig
   */
  AsynchronousEventHandlerSetupDelayInSeconds?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  Enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  EntitlementsFilterEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingPlatformConfig
   */
  EntitlementsPrefix?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  InactiveFilterEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  LaneFilterEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingPlatformConfig
   */
  LaneFilterThreshold?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  LevelFilterEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  LocationFiltersEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  MainFilterEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingPlatformConfig
   */
  Mapping?: string;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingPlatformConfig
   */
  MasteryFilterChampionLimit?: number;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingPlatformConfig
   */
  MasteryFilterDaysSinceLastPlayed?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  MasteryFilterEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingPlatformConfig
   */
  MasteryFilterLevelThreshold?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  MissionsFilterEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  RankFilterEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  RankedFilterEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  SummonerIconFilterEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingPlatformConfig
   */
  TargetingAttributeStorageBaseUri?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingPlatformConfig
   */
  TargetingAttributeStorageEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingPlatformConfig
   */
  TasIngestionDelayInSeconds?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolContentTargetingRankedDivision {
  NA = 'NA',
  I = 'I',
  II = 'II',
  III = 'III',
  IV = 'IV',
  V = 'V',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolContentTargetingRankedQueue {
  NONE = 'NONE',
  RANKEDSOLO5x5 = 'RANKED_SOLO_5x5',
  RANKEDFLEXSR = 'RANKED_FLEX_SR',
  RANKEDFLEXTT = 'RANKED_FLEX_TT',
  RANKEDTFT = 'RANKED_TFT',
}

/**
 *
 * @export
 * @interface LolContentTargetingRankedQueueStats
 */
export interface LolContentTargetingRankedQueueStats {
  /**
   *
   * @type {LolContentTargetingRankedDivision}
   * @memberof LolContentTargetingRankedQueueStats
   */
  division?: LolContentTargetingRankedDivision;
  /**
   *
   * @type {boolean}
   * @memberof LolContentTargetingRankedQueueStats
   */
  isProvisional?: boolean;
  /**
   *
   * @type {LolContentTargetingRankedQueue}
   * @memberof LolContentTargetingRankedQueueStats
   */
  queueType?: LolContentTargetingRankedQueue;
  /**
   *
   * @type {LolContentTargetingRankedTier}
   * @memberof LolContentTargetingRankedQueueStats
   */
  tier?: LolContentTargetingRankedTier;
}
/**
 *
 * @export
 * @interface LolContentTargetingRankedStats
 */
export interface LolContentTargetingRankedStats {
  /**
   *
   * @type {LolContentTargetingRankedQueueStats}
   * @memberof LolContentTargetingRankedStats
   */
  highestRankedEntry?: LolContentTargetingRankedQueueStats;
  /**
   *
   * @type {Array<LolContentTargetingRankedQueueStats>}
   * @memberof LolContentTargetingRankedStats
   */
  queues?: Array<LolContentTargetingRankedQueueStats>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolContentTargetingRankedTier {
  NONE = 'NONE',
  IRON = 'IRON',
  BRONZE = 'BRONZE',
  SILVER = 'SILVER',
  GOLD = 'GOLD',
  PLATINUM = 'PLATINUM',
  DIAMOND = 'DIAMOND',
  MASTER = 'MASTER',
  GRANDMASTER = 'GRANDMASTER',
  CHALLENGER = 'CHALLENGER',
}

/**
 *
 * @export
 * @interface LolContentTargetingRegionLocale
 */
export interface LolContentTargetingRegionLocale {
  /**
   *
   * @type {string}
   * @memberof LolContentTargetingRegionLocale
   */
  locale?: string;
}
/**
 *
 * @export
 * @interface LolContentTargetingSettingsResource
 */
export interface LolContentTargetingSettingsResource {
  /**
   *
   * @type {object}
   * @memberof LolContentTargetingSettingsResource
   */
  data?: object;
}
/**
 *
 * @export
 * @interface LolContentTargetingSummoner
 */
export interface LolContentTargetingSummoner {
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolContentTargetingSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolContentTargetingTargetingAttributes
 */
export interface LolContentTargetingTargetingAttributes {
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolContentTargetingTargetingAttributes
   */
  result?: { [key: string]: object };
}
/**
 *
 * @export
 * @interface LolContentTargetingToken
 */
export interface LolContentTargetingToken {
  /**
   *
   * @type {Array<string>}
   * @memberof LolContentTargetingToken
   */
  entitlements?: Array<string>;
}
/**
 *
 * @export
 * @interface LolCosmeticsCapOffer
 */
export interface LolCosmeticsCapOffer {
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCapOffer
   */
  active?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOffer
   */
  createdDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOffer
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOffer
   */
  label?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOffer
   */
  merchantId?: string;
  /**
   *
   * @type {Array<LolCosmeticsCapOfferPayloadEntry>}
   * @memberof LolCosmeticsCapOffer
   */
  payload?: Array<LolCosmeticsCapOfferPayloadEntry>;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOffer
   */
  productId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOffer
   */
  startDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOffer
   */
  typeId?: string;
}
/**
 *
 * @export
 * @interface LolCosmeticsCapOfferPayloadEntry
 */
export interface LolCosmeticsCapOfferPayloadEntry {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOfferPayloadEntry
   */
  fulfillmentTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOfferPayloadEntry
   */
  inventoryTypeUUID?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCapOfferPayloadEntry
   */
  itemInstanceId?: string;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolCosmeticsCapOfferPayloadEntry
   */
  itemPriceMap?: { [key: string]: number };
}
/**
 *
 * @export
 * @interface LolCosmeticsCompanionsGroupViewModel
 */
export interface LolCosmeticsCompanionsGroupViewModel {
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCompanionsGroupViewModel
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCompanionsGroupViewModel
   */
  groupName?: string;
  /**
   *
   * @type {Array<LolCosmeticsCosmeticsCompanionViewModel>}
   * @memberof LolCosmeticsCompanionsGroupViewModel
   */
  items?: Array<LolCosmeticsCosmeticsCompanionViewModel>;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCompanionsGroupViewModel
   */
  numAvailable?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCompanionsGroupViewModel
   */
  numOwned?: number;
}
/**
 *
 * @export
 * @interface LolCosmeticsCompanionsGroupedViewModel
 */
export interface LolCosmeticsCompanionsGroupedViewModel {
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCompanionsGroupedViewModel
   */
  balance?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCompanionsGroupedViewModel
   */
  defaultItemId?: number;
  /**
   *
   * @type {Array<LolCosmeticsCompanionsGroupViewModel>}
   * @memberof LolCosmeticsCompanionsGroupedViewModel
   */
  groups?: Array<LolCosmeticsCompanionsGroupViewModel>;
  /**
   *
   * @type {LolCosmeticsCosmeticsCompanionViewModel}
   * @memberof LolCosmeticsCompanionsGroupedViewModel
   */
  selectedLoadoutItem?: LolCosmeticsCosmeticsCompanionViewModel;
}
/**
 *
 * @export
 * @interface LolCosmeticsCosmeticsCompanion
 */
export interface LolCosmeticsCosmeticsCompanion {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  color?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  groupId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  loyalty?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  owned?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  rarityValue?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  selected?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  species?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolCosmeticsCosmeticsCompanion
   */
  upgrades?: Array<string>;
}
/**
 *
 * @export
 * @interface LolCosmeticsCosmeticsCompanionViewModel
 */
export interface LolCosmeticsCosmeticsCompanionViewModel {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  color?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  groupId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  loyalty?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  name?: string;
  /**
   *
   * @type {LolCosmeticsCapOffer}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  offerData?: LolCosmeticsCapOffer;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  owned?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  rarityValue?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  selected?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  species?: string;
  /**
   *
   * @type {Array<LolCosmeticsCosmeticsCompanionViewModel>}
   * @memberof LolCosmeticsCosmeticsCompanionViewModel
   */
  upgrades?: Array<LolCosmeticsCosmeticsCompanionViewModel>;
}
/**
 *
 * @export
 * @interface LolCosmeticsCosmeticsTFTDamageSkin
 */
export interface LolCosmeticsCosmeticsTFTDamageSkin {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  groupName?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  loyalty?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  owned?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  rarityValue?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  selected?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkin
   */
  upgrades?: Array<string>;
}
/**
 *
 * @export
 * @interface LolCosmeticsCosmeticsTFTDamageSkinViewModel
 */
export interface LolCosmeticsCosmeticsTFTDamageSkinViewModel {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  groupName?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  loyalty?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  owned?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  rarityValue?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  selected?: boolean;
  /**
   *
   * @type {Array<LolCosmeticsCosmeticsTFTDamageSkinViewModel>}
   * @memberof LolCosmeticsCosmeticsTFTDamageSkinViewModel
   */
  upgrades?: Array<LolCosmeticsCosmeticsTFTDamageSkinViewModel>;
}
/**
 *
 * @export
 * @interface LolCosmeticsCosmeticsTFTMapSkin
 */
export interface LolCosmeticsCosmeticsTFTMapSkin {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  groupName?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  loyalty?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  owned?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  rarityValue?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTMapSkin
   */
  selected?: boolean;
}
/**
 *
 * @export
 * @interface LolCosmeticsCosmeticsTFTMapSkinViewModel
 */
export interface LolCosmeticsCosmeticsTFTMapSkinViewModel {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  groupName?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  loyalty?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  owned?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  rarityValue?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolCosmeticsCosmeticsTFTMapSkinViewModel
   */
  selected?: boolean;
}
/**
 *
 * @export
 * @interface LolCosmeticsGameDataCompanion
 */
export interface LolCosmeticsGameDataCompanion {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataCompanion
   */
  colorName?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataCompanion
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataCompanion
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataCompanion
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataCompanion
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataCompanion
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataCompanion
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataCompanion
   */
  rarityValue?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataCompanion
   */
  speciesId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataCompanion
   */
  speciesName?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolCosmeticsGameDataCompanion
   */
  upgrades?: Array<string>;
}
/**
 *
 * @export
 * @interface LolCosmeticsGameDataTFTDamageSkin
 */
export interface LolCosmeticsGameDataTFTDamageSkin {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  groupName?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataTFTDamageSkin
   */
  rarityValue?: number;
}
/**
 *
 * @export
 * @interface LolCosmeticsGameDataTFTMapSkin
 */
export interface LolCosmeticsGameDataTFTMapSkin {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTMapSkin
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTMapSkin
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataTFTMapSkin
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTMapSkin
   */
  groupName?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataTFTMapSkin
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTMapSkin
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsGameDataTFTMapSkin
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsGameDataTFTMapSkin
   */
  rarityValue?: number;
}
/**
 *
 * @export
 * @interface LolCosmeticsLoadout
 */
export interface LolCosmeticsLoadout {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsLoadout
   */
  id?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsLoadout
   */
  itemId?: number;
  /**
   *
   * @type {{ [key: string]: LolCosmeticsLoadoutItem; }}
   * @memberof LolCosmeticsLoadout
   */
  loadout?: { [key: string]: LolCosmeticsLoadoutItem };
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsLoadout
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsLoadout
   */
  scope?: string;
}
/**
 *
 * @export
 * @interface LolCosmeticsLoadoutItem
 */
export interface LolCosmeticsLoadoutItem {
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsLoadoutItem
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsLoadoutItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsLoadoutItem
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolCosmeticsLoadoutUpdateDto
 */
export interface LolCosmeticsLoadoutUpdateDto {
  /**
   *
   * @type {{ [key: string]: LolCosmeticsLoadoutItem; }}
   * @memberof LolCosmeticsLoadoutUpdateDto
   */
  loadout?: { [key: string]: LolCosmeticsLoadoutItem };
}
/**
 *
 * @export
 * @interface LolCosmeticsTFTDamageSkinGroupViewModel
 */
export interface LolCosmeticsTFTDamageSkinGroupViewModel {
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTDamageSkinGroupViewModel
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsTFTDamageSkinGroupViewModel
   */
  groupName?: string;
  /**
   *
   * @type {Array<LolCosmeticsCosmeticsTFTDamageSkinViewModel>}
   * @memberof LolCosmeticsTFTDamageSkinGroupViewModel
   */
  items?: Array<LolCosmeticsCosmeticsTFTDamageSkinViewModel>;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTDamageSkinGroupViewModel
   */
  numAvailable?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTDamageSkinGroupViewModel
   */
  numOwned?: number;
}
/**
 *
 * @export
 * @interface LolCosmeticsTFTDamageSkinGroupedViewModel
 */
export interface LolCosmeticsTFTDamageSkinGroupedViewModel {
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTDamageSkinGroupedViewModel
   */
  balance?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTDamageSkinGroupedViewModel
   */
  defaultItemId?: number;
  /**
   *
   * @type {Array<LolCosmeticsTFTDamageSkinGroupViewModel>}
   * @memberof LolCosmeticsTFTDamageSkinGroupedViewModel
   */
  groups?: Array<LolCosmeticsTFTDamageSkinGroupViewModel>;
  /**
   *
   * @type {LolCosmeticsCosmeticsTFTDamageSkinViewModel}
   * @memberof LolCosmeticsTFTDamageSkinGroupedViewModel
   */
  selectedLoadoutItem?: LolCosmeticsCosmeticsTFTDamageSkinViewModel;
}
/**
 *
 * @export
 * @interface LolCosmeticsTFTMapSkinGroupViewModel
 */
export interface LolCosmeticsTFTMapSkinGroupViewModel {
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTMapSkinGroupViewModel
   */
  groupId?: number;
  /**
   *
   * @type {string}
   * @memberof LolCosmeticsTFTMapSkinGroupViewModel
   */
  groupName?: string;
  /**
   *
   * @type {Array<LolCosmeticsCosmeticsTFTMapSkinViewModel>}
   * @memberof LolCosmeticsTFTMapSkinGroupViewModel
   */
  items?: Array<LolCosmeticsCosmeticsTFTMapSkinViewModel>;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTMapSkinGroupViewModel
   */
  numAvailable?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTMapSkinGroupViewModel
   */
  numOwned?: number;
}
/**
 *
 * @export
 * @interface LolCosmeticsTFTMapSkinGroupedViewModel
 */
export interface LolCosmeticsTFTMapSkinGroupedViewModel {
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTMapSkinGroupedViewModel
   */
  balance?: number;
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsTFTMapSkinGroupedViewModel
   */
  defaultItemId?: number;
  /**
   *
   * @type {Array<LolCosmeticsTFTMapSkinGroupViewModel>}
   * @memberof LolCosmeticsTFTMapSkinGroupedViewModel
   */
  groups?: Array<LolCosmeticsTFTMapSkinGroupViewModel>;
  /**
   *
   * @type {LolCosmeticsCosmeticsTFTMapSkinViewModel}
   * @memberof LolCosmeticsTFTMapSkinGroupedViewModel
   */
  selectedLoadoutItem?: LolCosmeticsCosmeticsTFTMapSkinViewModel;
}
/**
 *
 * @export
 * @interface LolCosmeticsUserResource
 */
export interface LolCosmeticsUserResource {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolCosmeticsUserResource
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof LolCosmeticsUserResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolDiscordRpGameDataChampionSummary
 */
export interface LolDiscordRpGameDataChampionSummary {
  /**
   *
   * @type {string}
   * @memberof LolDiscordRpGameDataChampionSummary
   */
  alias?: string;
  /**
   *
   * @type {number}
   * @memberof LolDiscordRpGameDataChampionSummary
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolDiscordRpGameDataChampionSummary
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolEmailVerificationAccessToken
 */
export interface LolEmailVerificationAccessToken {
  /**
   *
   * @type {number}
   * @memberof LolEmailVerificationAccessToken
   */
  expiry?: number;
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationAccessToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolEmailVerificationEmailUpdate
 */
export interface LolEmailVerificationEmailUpdate {
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationEmailUpdate
   */
  email?: string;
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationEmailUpdate
   */
  password?: string;
}
/**
 *
 * @export
 * @interface LolEmailVerificationEmailVerificationSession
 */
export interface LolEmailVerificationEmailVerificationSession {
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationEmailVerificationSession
   */
  email?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEmailVerificationEmailVerificationSession
   */
  emailVerified?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolEmailVerificationEmailVerificationSession
   */
  fatalError?: boolean;
}
/**
 *
 * @export
 * @interface LolEmailVerificationRegionLocale
 */
export interface LolEmailVerificationRegionLocale {
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationRegionLocale
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationRegionLocale
   */
  region?: string;
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationRegionLocale
   */
  webLanguage?: string;
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationRegionLocale
   */
  webRegion?: string;
}
/**
 *
 * @export
 * @interface LolEmailVerificationRemoteEmailVerificationSession
 */
export interface LolEmailVerificationRemoteEmailVerificationSession {
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationRemoteEmailVerificationSession
   */
  email?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEmailVerificationRemoteEmailVerificationSession
   */
  emailVerified?: boolean;
}
/**
 *
 * @export
 * @interface LolEmailVerificationValidationStatus
 */
export interface LolEmailVerificationValidationStatus {
  /**
   *
   * @type {string}
   * @memberof LolEmailVerificationValidationStatus
   */
  emailStatus?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameChampionMasteryGrade
 */
export interface LolEndOfGameChampionMasteryGrade {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryGrade
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameChampionMasteryGrade
   */
  grade?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryGrade
   */
  playerId?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameChampionMasteryMini
 */
export interface LolEndOfGameChampionMasteryMini {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryMini
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryMini
   */
  championLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryMini
   */
  playerId?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameChampionMasteryUpdate
 */
export interface LolEndOfGameChampionMasteryUpdate {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  bonusPointsGained?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  grade?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  hasLeveledUp?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  id?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  level?: number;
  /**
   *
   * @type {Array<LolEndOfGameChampionMasteryMini>}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  levelUpList?: Array<LolEndOfGameChampionMasteryMini>;
  /**
   *
   * @type {Array<LolEndOfGameChampionMasteryGrade>}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  memberGrades?: Array<LolEndOfGameChampionMasteryGrade>;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  playerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  pointsBeforeGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  pointsGained?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  pointsGainedIndividualContribution?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  pointsSinceLastLevelBeforeGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  pointsUntilNextLevelAfterGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  pointsUntilNextLevelBeforeGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameChampionMasteryUpdate
   */
  score?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameEndOfGamePlayer
 */
export interface LolEndOfGameEndOfGamePlayer {
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  botPlayer?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  detectedTeamPosition?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  elo?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  eloChange?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  gameId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  isReportingDisabled?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  items?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  leaver?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  leaves?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  level?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  losses?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  selectedPosition?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  skinIndex?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  skinName?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  spell2Id?: number;
  /**
   *
   * @type {object}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  stats?: object;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  teamId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  userId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayer
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameEndOfGamePlayerComplaintV2
 */
export interface LolEndOfGameEndOfGamePlayerComplaintV2 {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGamePlayerComplaintV2
   */
  comment?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayerComplaintV2
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGamePlayerComplaintV2
   */
  offenses?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePlayerComplaintV2
   */
  reportedSummonerId?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameEndOfGamePoints
 */
export interface LolEndOfGameEndOfGamePoints {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePoints
   */
  pointChangeFromChampionsOwned?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePoints
   */
  pointChangeFromGameplay?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePoints
   */
  pointsUntilNextReroll?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePoints
   */
  pointsUsed?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePoints
   */
  previousPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePoints
   */
  rerollCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGamePoints
   */
  totalPoints?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameEndOfGameStats
 */
export interface LolEndOfGameEndOfGameStats {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  basePoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  battleBoostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  boostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  boostXpEarned?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  causedEarlySurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  coOpVsAiMinutesLeftToday?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  coOpVsAiMsecsUntilReset?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  completionBonusPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  currentLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  customMinutesLeftToday?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  customMsecsUntilReset?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameStats
   */
  difficulty?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  earlySurrenderAccomplice?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  elo?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  eloChange?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  experienceEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  experienceTotal?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  firstWinBonus?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  gameEndedInEarlySurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  gameLength?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameStats
   */
  gameMode?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolEndOfGameEndOfGameStats
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameStats
   */
  gameType?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  globalBoostXpEarned?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  imbalancedTeamsNoPoints?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  invalid?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  ipEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  ipTotal?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  leveledUp?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  loyaltyBoostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  loyaltyBoostXpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  missionsXpEarned?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameStats
   */
  myTeamStatus?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolEndOfGameEndOfGameStats
   */
  newSpells?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  nextLevelXp?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  odinBonusIp?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  partyRewardsBonusIpEarned?: number;
  /**
   *
   * @type {object}
   * @memberof LolEndOfGameEndOfGameStats
   */
  pointsPenalties?: object;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  preLevelUpExperienceTotal?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  preLevelUpNextLevelXp?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  previousLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  previousXpTotal?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  queueBonusEarned?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameStats
   */
  queueType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  ranked?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  reportGameId?: number;
  /**
   *
   * @type {LolEndOfGameEndOfGamePoints}
   * @memberof LolEndOfGameEndOfGameStats
   */
  rerollData?: LolEndOfGameEndOfGamePoints;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameStats
   */
  roomName?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameStats
   */
  roomPassword?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  rpEarned?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  sendStatsToTournamentProvider?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  skinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  skinIndex?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameStats
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  talentPointsGained?: number;
  /**
   *
   * @type {LolEndOfGameEndOfGameTeamBoost}
   * @memberof LolEndOfGameEndOfGameStats
   */
  teamBoost?: LolEndOfGameEndOfGameTeamBoost;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameStats
   */
  teamEarlySurrendered?: boolean;
  /**
   *
   * @type {Array<LolEndOfGameEndOfGameTeam>}
   * @memberof LolEndOfGameEndOfGameStats
   */
  teams?: Array<LolEndOfGameEndOfGameTeam>;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  timeUntilNextFirstWinBonus?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameStats
   */
  userId?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameEndOfGameTeam
 */
export interface LolEndOfGameEndOfGameTeam {
  /**
   *
   * @type {Array<number>}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  championBans?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  fullId?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  isBottomTeam?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  isPlayerTeam?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  isWinningTeam?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  memberStatusString?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  name?: string;
  /**
   *
   * @type {Array<LolEndOfGameEndOfGamePlayer>}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  players?: Array<LolEndOfGameEndOfGamePlayer>;
  /**
   *
   * @type {object}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  stats?: object;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  tag?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameTeam
   */
  teamId?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameEndOfGameTeamBoost
 */
export interface LolEndOfGameEndOfGameTeamBoost {
  /**
   *
   * @type {Array<number>}
   * @memberof LolEndOfGameEndOfGameTeamBoost
   */
  availableSkins?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameTeamBoost
   */
  ipReward?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameTeamBoost
   */
  ipRewardForPurchaser?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameEndOfGameTeamBoost
   */
  price?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameTeamBoost
   */
  skinUnlockMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameEndOfGameTeamBoost
   */
  summonerName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameEndOfGameTeamBoost
   */
  unlocked?: boolean;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameClientEndOfGame
 */
export interface LolEndOfGameGameClientEndOfGame {
  /**
   *
   * @type {LolEndOfGameGameClientEndOfGameStats}
   * @memberof LolEndOfGameGameClientEndOfGame
   */
  gameClientEOG?: LolEndOfGameGameClientEndOfGameStats;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameClientEndOfGameStats
 */
export interface LolEndOfGameGameClientEndOfGameStats {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameGameClientEndOfGameStats
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameClientEndOfGameStats
   */
  gameMode?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameGameClientEndOfGameStats
   */
  isRanked?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameGameClientEndOfGameStats
   */
  queueId?: number;
  /**
   *
   * @type {object}
   * @memberof LolEndOfGameGameClientEndOfGameStats
   */
  statsBlock?: object;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameDataChampionSummary
 */
export interface LolEndOfGameGameDataChampionSummary {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataChampionSummary
   */
  alias?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameGameDataChampionSummary
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataChampionSummary
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataChampionSummary
   */
  squarePortraitPath?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameDataCompanion
 */
export interface LolEndOfGameGameDataCompanion {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataCompanion
   */
  colorName?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataCompanion
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataCompanion
   */
  loadoutsIcon?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataCompanion
   */
  speciesName?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameDataTftChampion
 */
export interface LolEndOfGameGameDataTftChampion {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataTftChampion
   */
  character_id?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataTftChampion
   */
  display_name?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataTftChampion
   */
  path?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameGameDataTftChampion
   */
  rarity?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameDataTftChampion
   */
  squareIconPath?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameflowAvailability
 */
export interface LolEndOfGameGameflowAvailability {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameflowAvailability
   */
  state?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameflowClient
 */
export interface LolEndOfGameGameflowClient {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameGameflowClient
   */
  observerServerIp?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameGameflowClient
   */
  observerServerPort?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameGameflowClient
   */
  running?: boolean;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameflowGameData
 */
export interface LolEndOfGameGameflowGameData {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameGameflowGameData
   */
  gameId?: number;
  /**
   *
   * @type {LolEndOfGameQueue}
   * @memberof LolEndOfGameGameflowGameData
   */
  queue?: LolEndOfGameQueue;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolEndOfGameGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolEndOfGameGameflowSession
 */
export interface LolEndOfGameGameflowSession {
  /**
   *
   * @type {LolEndOfGameGameflowClient}
   * @memberof LolEndOfGameGameflowSession
   */
  gameClient?: LolEndOfGameGameflowClient;
  /**
   *
   * @type {LolEndOfGameGameflowGameData}
   * @memberof LolEndOfGameGameflowSession
   */
  gameData?: LolEndOfGameGameflowGameData;
  /**
   *
   * @type {LolEndOfGameGameflowPhase}
   * @memberof LolEndOfGameGameflowSession
   */
  phase?: LolEndOfGameGameflowPhase;
}
/**
 *
 * @export
 * @interface LolEndOfGameGameloopPlayerInfoV1
 */
export interface LolEndOfGameGameloopPlayerInfoV1 {
  /**
   *
   * @type {LolEndOfGameRerollDataBagForClientV1}
   * @memberof LolEndOfGameGameloopPlayerInfoV1
   */
  rerollDataBag?: LolEndOfGameRerollDataBagForClientV1;
}
/**
 *
 * @export
 * @interface LolEndOfGameLobbyInvitation
 */
export interface LolEndOfGameLobbyInvitation {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameLobbyInvitation
   */
  state?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameLoginDataPacket
 */
export interface LolEndOfGameLoginDataPacket {
  /**
   *
   * @type {LolEndOfGameLoginSummonerData}
   * @memberof LolEndOfGameLoginDataPacket
   */
  allSummonerData?: LolEndOfGameLoginSummonerData;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameLoginDataPacket
   */
  platformId?: string;
  /**
   *
   * @type {Array<LolEndOfGameSimpleMessage>}
   * @memberof LolEndOfGameLoginDataPacket
   */
  simpleMessages?: Array<LolEndOfGameSimpleMessage>;
}
/**
 *
 * @export
 * @interface LolEndOfGameLoginSession
 */
export interface LolEndOfGameLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolEndOfGameLoginSessionStates}
   * @memberof LolEndOfGameLoginSession
   */
  state?: LolEndOfGameLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolEndOfGameLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolEndOfGameLoginSummonerData
 */
export interface LolEndOfGameLoginSummonerData {
  /**
   *
   * @type {LolEndOfGameLoginSummonerLevelAndPoints}
   * @memberof LolEndOfGameLoginSummonerData
   */
  summonerLevelAndPoints?: LolEndOfGameLoginSummonerLevelAndPoints;
}
/**
 *
 * @export
 * @interface LolEndOfGameLoginSummonerLevelAndPoints
 */
export interface LolEndOfGameLoginSummonerLevelAndPoints {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameLoginSummonerLevelAndPoints
   */
  expPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameLoginSummonerLevelAndPoints
   */
  expToNextLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameLoginSummonerLevelAndPoints
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameQueue
 */
export interface LolEndOfGameQueue {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameQueue
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameQueue
   */
  isRanked?: boolean;
}
/**
 *
 * @export
 * @interface LolEndOfGameRerollDataBagForClientV1
 */
export interface LolEndOfGameRerollDataBagForClientV1 {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameRerollDataBagForClientV1
   */
  maximumRerolls?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameRerollDataBagForClientV1
   */
  pointCostOfReroll?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameRerollDataBagForClientV1
   */
  pointsGainedLastGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameRerollDataBagForClientV1
   */
  pointsUntilNextReroll?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameRerollDataBagForClientV1
   */
  rerollCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameRerollDataBagForClientV1
   */
  totalPoints?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameSimpleMessage
 */
export interface LolEndOfGameSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolEndOfGameSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameSummoner
 */
export interface LolEndOfGameSummoner {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameSummoner
   */
  summonerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameSummoner
   */
  xpSinceLastLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameSummoner
   */
  xpUntilNextLevel?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameTFTEndOfGameCompanionViewModel
 */
export interface LolEndOfGameTFTEndOfGameCompanionViewModel {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameTFTEndOfGameCompanionViewModel
   */
  colorName?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameTFTEndOfGameCompanionViewModel
   */
  icon?: string;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameTFTEndOfGameCompanionViewModel
   */
  speciesName?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameTFTEndOfGamePieceViewModel
 */
export interface LolEndOfGameTFTEndOfGamePieceViewModel {
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameTFTEndOfGamePieceViewModel
   */
  icon?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGamePieceViewModel
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameTFTEndOfGamePieceViewModel
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGamePieceViewModel
   */
  price?: number;
}
/**
 *
 * @export
 * @interface LolEndOfGameTFTEndOfGamePlayerViewModel
 */
export interface LolEndOfGameTFTEndOfGamePlayerViewModel {
  /**
   *
   * @type {Array<LolEndOfGameTFTEndOfGamePieceViewModel>}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  boardPieces?: Array<LolEndOfGameTFTEndOfGamePieceViewModel>;
  /**
   *
   * @type {LolEndOfGameTFTEndOfGameCompanionViewModel}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  companion?: LolEndOfGameTFTEndOfGameCompanionViewModel;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  ffaStanding?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  health?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  iconId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  isLocalPlayer?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  rank?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEndOfGameTFTEndOfGamePlayerViewModel
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolEndOfGameTFTEndOfGameViewModel
 */
export interface LolEndOfGameTFTEndOfGameViewModel {
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGameViewModel
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGameViewModel
   */
  gameLength?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEndOfGameTFTEndOfGameViewModel
   */
  isRanked?: boolean;
  /**
   *
   * @type {LolEndOfGameTFTEndOfGamePlayerViewModel}
   * @memberof LolEndOfGameTFTEndOfGameViewModel
   */
  localPlayer?: LolEndOfGameTFTEndOfGamePlayerViewModel;
  /**
   *
   * @type {Array<LolEndOfGameTFTEndOfGamePlayerViewModel>}
   * @memberof LolEndOfGameTFTEndOfGameViewModel
   */
  players?: Array<LolEndOfGameTFTEndOfGamePlayerViewModel>;
  /**
   *
   * @type {number}
   * @memberof LolEndOfGameTFTEndOfGameViewModel
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsESportStreamNotificationsConfig
 */
export interface LolEsportStreamNotificationsESportStreamNotificationsConfig {
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  beappFailureLongPollMinutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  notificationsAssetMagickURL?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  notificationsEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  notificationsLongPollMinutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  notificationsServiceEndpoint?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  notificationsServiceEndpointV2?: string;
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  notificationsShortPollMinutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  notificationsStreamGroupSlug?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  notificationsStreamURL?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEsportStreamNotificationsESportStreamNotificationsConfig
   */
  useServiceEndpointV2?: boolean;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsESportsAPIStreamgroups
 */
export interface LolEsportStreamNotificationsESportsAPIStreamgroups {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsAPIStreamgroups
   */
  content?: string;
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsESportsAPIStreamgroups
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolEsportStreamNotificationsESportsAPIStreamgroups
   */
  live?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsAPIStreamgroups
   */
  slug?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsAPIStreamgroups
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsESportsAPIStreamgroupsRoot
 */
export interface LolEsportStreamNotificationsESportsAPIStreamgroupsRoot {
  /**
   *
   * @type {Array<LolEsportStreamNotificationsEsportsAPIHighlanderTournaments>}
   * @memberof LolEsportStreamNotificationsESportsAPIStreamgroupsRoot
   */
  highlanderTournaments?: Array<
    LolEsportStreamNotificationsEsportsAPIHighlanderTournaments
  >;
  /**
   *
   * @type {Array<LolEsportStreamNotificationsESportsAPIStreamgroups>}
   * @memberof LolEsportStreamNotificationsESportsAPIStreamgroupsRoot
   */
  streamgroups?: Array<LolEsportStreamNotificationsESportsAPIStreamgroups>;
  /**
   *
   * @type {Array<LolEsportStreamNotificationsEsportsAPITeams>}
   * @memberof LolEsportStreamNotificationsESportsAPIStreamgroupsRoot
   */
  teams?: Array<LolEsportStreamNotificationsEsportsAPITeams>;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsESportsLiveStreams
 */
export interface LolEsportStreamNotificationsESportsLiveStreams {
  /**
   *
   * @type {Array<LolEsportStreamNotificationsESportsStreams>}
   * @memberof LolEsportStreamNotificationsESportsLiveStreams
   */
  liveStreams?: Array<LolEsportStreamNotificationsESportsStreams>;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsESportsStreams
 */
export interface LolEsportStreamNotificationsESportsStreams {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamAAcronym?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamAGuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamAId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamALogoUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamAName?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamBAcronym?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamBGuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamBId?: number;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamBLogoUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  teamBName?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsESportsStreams
   */
  tournamentDescription?: string;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsEsportsAPIHighlanderTournaments
 */
export interface LolEsportStreamNotificationsEsportsAPIHighlanderTournaments {
  /**
   *
   * @type {{ [key: string]: LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsBrackets; }}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournaments
   */
  brackets?: {
    [
      key: string
    ]: LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsBrackets;
  };
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournaments
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournaments
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRosters; }}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournaments
   */
  rosters?: {
    [
      key: string
    ]: LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRosters;
  };
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournaments
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsBrackets
 */
export interface LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsBrackets {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsBrackets
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsMatches; }}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsBrackets
   */
  matches?: {
    [
      key: string
    ]: LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsMatches;
  };
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsMatches
 */
export interface LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsMatches {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsMatches
   */
  id?: string;
  /**
   *
   * @type {Array<LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRoster>}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsMatches
   */
  input?: Array<
    LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRoster
  >;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRoster
 */
export interface LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRoster {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRoster
   */
  roster?: string;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRosters
 */
export interface LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRosters {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRosters
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRosters
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsEsportsAPIHighlanderTournamentsRosters
   */
  team?: number;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsEsportsAPITeams
 */
export interface LolEsportStreamNotificationsEsportsAPITeams {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPITeams
   */
  acronym?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPITeams
   */
  guid?: string;
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsEsportsAPITeams
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPITeams
   */
  logoUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPITeams
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsEsportsAPITeams
   */
  slug?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolEsportStreamNotificationsGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolEsportStreamNotificationsGameflowSession
 */
export interface LolEsportStreamNotificationsGameflowSession {
  /**
   *
   * @type {LolEsportStreamNotificationsGameflowPhase}
   * @memberof LolEsportStreamNotificationsGameflowSession
   */
  phase?: LolEsportStreamNotificationsGameflowPhase;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsLiveMatch
 */
export interface LolEsportStreamNotificationsLiveMatch {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsLiveMatch
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsLiveMatch
   */
  streamGroup?: string;
  /**
   *
   * @type {Array<LolEsportStreamNotificationsLiveMatchTeam>}
   * @memberof LolEsportStreamNotificationsLiveMatch
   */
  teams?: Array<LolEsportStreamNotificationsLiveMatchTeam>;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsLiveMatch
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsLiveMatch
   */
  tournamentDescription?: string;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsLiveMatchTeam
 */
export interface LolEsportStreamNotificationsLiveMatchTeam {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsLiveMatchTeam
   */
  acronym?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsLiveMatchTeam
   */
  guid?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsLiveMatchTeam
   */
  logoUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsLiveMatchTeam
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolEsportStreamNotificationsPlayerNotificationResource
 */
export interface LolEsportStreamNotificationsPlayerNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  backgroundUrl?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  detailKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolEsportStreamNotificationsPlayerNotificationResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolFeaturedModesCollectionsOwnership
 */
export interface LolFeaturedModesCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolFeaturedModesCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolFeaturedModesCollectionsOwnership
   */
  owned?: boolean;
}
/**
 *
 * @export
 * @interface LolFeaturedModesCollectionsSummonerIcon
 */
export interface LolFeaturedModesCollectionsSummonerIcon {
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesCollectionsSummonerIcon
   */
  iconId?: number;
  /**
   *
   * @type {LolFeaturedModesCollectionsOwnership}
   * @memberof LolFeaturedModesCollectionsSummonerIcon
   */
  ownership?: LolFeaturedModesCollectionsOwnership;
}
/**
 *
 * @export
 * @interface LolFeaturedModesEligibility
 */
export interface LolFeaturedModesEligibility {
  /**
   *
   * @type {boolean}
   * @memberof LolFeaturedModesEligibility
   */
  eligible?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesEligibility
   */
  queueId?: number;
  /**
   *
   * @type {Array<LolFeaturedModesEligibilityRestriction>}
   * @memberof LolFeaturedModesEligibility
   */
  restrictions?: Array<LolFeaturedModesEligibilityRestriction>;
}
/**
 *
 * @export
 * @interface LolFeaturedModesEligibilityRestriction
 */
export interface LolFeaturedModesEligibilityRestriction {
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesEligibilityRestriction
   */
  expiredTimestamp?: number;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolFeaturedModesEligibilityRestriction
   */
  restrictionArgs?: { [key: string]: string };
  /**
   *
   * @type {LolFeaturedModesEligibilityRestrictionCode}
   * @memberof LolFeaturedModesEligibilityRestriction
   */
  restrictionCode?: LolFeaturedModesEligibilityRestrictionCode;
  /**
   *
   * @type {Array<number>}
   * @memberof LolFeaturedModesEligibilityRestriction
   */
  summonerIds?: Array<number>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolFeaturedModesEligibilityRestrictionCode {
  QueueDisabled = 'QueueDisabled',
  QueueUnsupported = 'QueueUnsupported',
  PlayerLevelRestriction = 'PlayerLevelRestriction',
  PlayerTimedRestriction = 'PlayerTimedRestriction',
  PlayerBannedRestriction = 'PlayerBannedRestriction',
  PlayerAvailableChampionRestriction = 'PlayerAvailableChampionRestriction',
  TeamDivisionRestriction = 'TeamDivisionRestriction',
  TeamMaxSizeRestriction = 'TeamMaxSizeRestriction',
  TeamMinSizeRestriction = 'TeamMinSizeRestriction',
  PlayerBingeRestriction = 'PlayerBingeRestriction',
  PlayerDodgeRestriction = 'PlayerDodgeRestriction',
  PlayerInGameRestriction = 'PlayerInGameRestriction',
  PlayerLeaverBustedRestriction = 'PlayerLeaverBustedRestriction',
  PlayerLeaverTaintedWarningRestriction = 'PlayerLeaverTaintedWarningRestriction',
  PlayerMaxLevelRestriction = 'PlayerMaxLevelRestriction',
  PlayerMinLevelRestriction = 'PlayerMinLevelRestriction',
  PlayerMinorRestriction = 'PlayerMinorRestriction',
  PlayerRankedSuspensionRestriction = 'PlayerRankedSuspensionRestriction',
  TeamHighMMRMaxSizeRestriction = 'TeamHighMMRMaxSizeRestriction',
  TeamSizeRestriction = 'TeamSizeRestriction',
  PrerequisiteQueuesNotPlayedRestriction = 'PrerequisiteQueuesNotPlayedRestriction',
  GameVersionMismatch = 'GameVersionMismatch',
  GameVersionMissing = 'GameVersionMissing',
  GameVersionNotSupported = 'GameVersionNotSupported',
  QueueEntryNotEntitledRestriction = 'QueueEntryNotEntitledRestriction',
  UnknownRestriction = 'UnknownRestriction',
}

/**
 *
 * @export
 * @interface LolFeaturedModesFeaturedModesConfig
 */
export interface LolFeaturedModesFeaturedModesConfig {
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesFeaturedModesConfig
   */
  MaxNotificationSaveDelayMinutes?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolFeaturedModesFeaturedModesConfig
   */
  NotificationsEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesFeaturedModesConfig
   */
  QueueToggleNotificationMinutesThreshold?: number;
}
/**
 *
 * @export
 * @interface LolFeaturedModesGameflowAvailability
 */
export interface LolFeaturedModesGameflowAvailability {
  /**
   *
   * @type {boolean}
   * @memberof LolFeaturedModesGameflowAvailability
   */
  isAvailable?: boolean;
  /**
   *
   * @type {LolFeaturedModesGameflowAvailabilityState}
   * @memberof LolFeaturedModesGameflowAvailability
   */
  state?: LolFeaturedModesGameflowAvailabilityState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolFeaturedModesGameflowAvailabilityState {
  Available = 'Available',
  Initializing = 'Initializing',
  Patching = 'Patching',
  PlayerBanned = 'PlayerBanned',
  InGameFlow = 'InGameFlow',
  Configuration = 'Configuration',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolFeaturedModesGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolFeaturedModesGameflowSession
 */
export interface LolFeaturedModesGameflowSession {
  /**
   *
   * @type {LolFeaturedModesGameflowPhase}
   * @memberof LolFeaturedModesGameflowSession
   */
  phase?: LolFeaturedModesGameflowPhase;
}
/**
 *
 * @export
 * @interface LolFeaturedModesLoginSession
 */
export interface LolFeaturedModesLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolFeaturedModesLoginSessionStates}
   * @memberof LolFeaturedModesLoginSession
   */
  state?: LolFeaturedModesLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolFeaturedModesLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolFeaturedModesMaps
 */
export interface LolFeaturedModesMaps {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolFeaturedModesMaps
   */
  assets?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesMaps
   */
  gameModeName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolFeaturedModesMaps
   */
  isRGM?: boolean;
}
/**
 *
 * @export
 * @interface LolFeaturedModesPlayerNotificationResource
 */
export interface LolFeaturedModesPlayerNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  backgroundUrl?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  detailKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesPlayerNotificationResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolFeaturedModesQueue
 */
export interface LolFeaturedModesQueue {
  /**
   *
   * @type {LolFeaturedModesQueueGameCategory}
   * @memberof LolFeaturedModesQueue
   */
  category?: LolFeaturedModesQueueGameCategory;
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesQueue
   */
  gameMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesQueue
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesQueue
   */
  lastToggledOffTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesQueue
   */
  lastToggledOnTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolFeaturedModesQueue
   */
  mapId?: number;
  /**
   *
   * @type {string}
   * @memberof LolFeaturedModesQueue
   */
  name?: string;
  /**
   *
   * @type {LolFeaturedModesQueueAvailability}
   * @memberof LolFeaturedModesQueue
   */
  queueAvailability?: LolFeaturedModesQueueAvailability;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolFeaturedModesQueueAvailability {
  Available = 'Available',
  PlatformDisabled = 'PlatformDisabled',
  DoesntMeetRequirements = 'DoesntMeetRequirements',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolFeaturedModesQueueGameCategory {
  None = 'None',
  Custom = 'Custom',
  PvP = 'PvP',
  VersusAi = 'VersusAi',
  Alpha = 'Alpha',
}

/**
 *
 * @export
 * @interface LolGameClientChatGameClientChatMessageResource
 */
export interface LolGameClientChatGameClientChatMessageResource {
  /**
   *
   * @type {string}
   * @memberof LolGameClientChatGameClientChatMessageResource
   */
  body?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameClientChatGameClientChatMessageResource
   */
  fromSummonerName?: string;
}
/**
 *
 * @export
 * @interface LolGameClientChatMutedPlayerInfo
 */
export interface LolGameClientChatMutedPlayerInfo {
  /**
   *
   * @type {string}
   * @memberof LolGameClientChatMutedPlayerInfo
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameClientChatMutedPlayerInfo
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolGameQueuesLoginDataPacket
 */
export interface LolGameQueuesLoginDataPacket {
  /**
   *
   * @type {Array<LolGameQueuesQueueGameTypeConfig>}
   * @memberof LolGameQueuesLoginDataPacket
   */
  gameTypeConfigs?: Array<LolGameQueuesQueueGameTypeConfig>;
}
/**
 *
 * @export
 * @interface LolGameQueuesLoginSession
 */
export interface LolGameQueuesLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {LolGameQueuesLoginSessionStates}
   * @memberof LolGameQueuesLoginSession
   */
  state?: LolGameQueuesLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameQueuesLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolGameQueuesPlatformConfigEnabledMap
 */
export interface LolGameQueuesPlatformConfigEnabledMap {
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesPlatformConfigEnabledMap
   */
  gameMapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesPlatformConfigEnabledMap
   */
  minPlayers?: number;
}
/**
 *
 * @export
 * @interface LolGameQueuesQueue
 */
export interface LolGameQueuesQueue {
  /**
   *
   * @type {Array<number>}
   * @memberof LolGameQueuesQueue
   */
  allowablePremadeSizes?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueue
   */
  areFreeChampionsAllowed?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueue
   */
  assetMutator?: string;
  /**
   *
   * @type {LolGameQueuesQueueGameCategory}
   * @memberof LolGameQueuesQueue
   */
  category?: LolGameQueuesQueueGameCategory;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  championsRequiredToPlay?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueue
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueue
   */
  detailedDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueue
   */
  gameMode?: string;
  /**
   *
   * @type {LolGameQueuesQueueGameTypeConfig}
   * @memberof LolGameQueuesQueue
   */
  gameTypeConfig?: LolGameQueuesQueueGameTypeConfig;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueue
   */
  isRanked?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueue
   */
  isTeamBuilderManaged?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueue
   */
  isTeamOnly?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  lastToggledOffTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  lastToggledOnTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  maxLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  maxSummonerLevelForFirstWinOfTheDay?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  maximumParticipantListSize?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  minLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  minimumParticipantListSize?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueue
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  numPlayersPerTeam?: number;
  /**
   *
   * @type {LolGameQueuesQueueAvailability}
   * @memberof LolGameQueuesQueue
   */
  queueAvailability?: LolGameQueuesQueueAvailability;
  /**
   *
   * @type {LolGameQueuesQueueReward}
   * @memberof LolGameQueuesQueue
   */
  queueRewards?: LolGameQueuesQueueReward;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueue
   */
  removalFromGameAllowed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueue
   */
  removalFromGameDelayMinutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueue
   */
  shortName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueue
   */
  showPositionSelector?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueue
   */
  spectatorEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueue
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameQueuesQueueAvailability {
  Available = 'Available',
  PlatformDisabled = 'PlatformDisabled',
  DoesntMeetRequirements = 'DoesntMeetRequirements',
}

/**
 *
 * @export
 * @interface LolGameQueuesQueueCustomGame
 */
export interface LolGameQueuesQueueCustomGame {
  /**
   *
   * @type {Array<string>}
   * @memberof LolGameQueuesQueueCustomGame
   */
  gameServerRegions?: Array<string>;
  /**
   *
   * @type {LolGameQueuesQueueAvailability}
   * @memberof LolGameQueuesQueueCustomGame
   */
  queueAvailability?: LolGameQueuesQueueAvailability;
  /**
   *
   * @type {Array<LolGameQueuesQueueCustomGameSpectatorPolicy>}
   * @memberof LolGameQueuesQueueCustomGame
   */
  spectatorPolicies?: Array<LolGameQueuesQueueCustomGameSpectatorPolicy>;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueCustomGame
   */
  spectatorSlotLimit?: number;
  /**
   *
   * @type {Array<LolGameQueuesQueueCustomGameSubcategory>}
   * @memberof LolGameQueuesQueueCustomGame
   */
  subcategories?: Array<LolGameQueuesQueueCustomGameSubcategory>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameQueuesQueueCustomGameSpectatorPolicy {
  NotAllowed = 'NotAllowed',
  LobbyAllowed = 'LobbyAllowed',
  FriendsAllowed = 'FriendsAllowed',
  AllAllowed = 'AllAllowed',
}

/**
 *
 * @export
 * @interface LolGameQueuesQueueCustomGameSubcategory
 */
export interface LolGameQueuesQueueCustomGameSubcategory {
  /**
   *
   * @type {Array<LolGameQueuesQueueCustomGameSpectatorPolicy>}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  customSpectatorPolicies?: Array<LolGameQueuesQueueCustomGameSpectatorPolicy>;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  gameMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  maxLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  maxPlayerCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  maximumParticipantListSize?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  minLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  minimumParticipantListSize?: number;
  /**
   *
   * @type {Array<LolGameQueuesQueueGameTypeConfig>}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  mutators?: Array<LolGameQueuesQueueGameTypeConfig>;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  numPlayersPerTeam?: number;
  /**
   *
   * @type {LolGameQueuesQueueAvailability}
   * @memberof LolGameQueuesQueueCustomGameSubcategory
   */
  queueAvailability?: LolGameQueuesQueueAvailability;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameQueuesQueueGameCategory {
  None = 'None',
  Custom = 'Custom',
  PvP = 'PvP',
  VersusAi = 'VersusAi',
  Alpha = 'Alpha',
}

/**
 *
 * @export
 * @interface LolGameQueuesQueueGameTypeConfig
 */
export interface LolGameQueuesQueueGameTypeConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  advancedLearningQuests?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  allowTrades?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  banMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  banTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  battleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  crossTeamChampionPool?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  deathMatch?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  doNotRemove?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  duplicatePick?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  exclusivePick?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  gameModeOverride?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  learningQuests?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  mainPickTimerDuration?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  maxAllowableBans?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  numPlayersPerTeamOverride?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  onboardCoopBeginner?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  pickMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  postPickTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  reroll?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueGameTypeConfig
   */
  teamChampionPool?: boolean;
}
/**
 *
 * @export
 * @interface LolGameQueuesQueueReward
 */
export interface LolGameQueuesQueueReward {
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueReward
   */
  isChampionPointsEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueReward
   */
  isIpEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameQueuesQueueReward
   */
  isXpEnabled?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolGameQueuesQueueReward
   */
  partySizeIpRewards?: Array<number>;
}
/**
 *
 * @export
 * @interface LolGameQueuesQueueTranslation
 */
export interface LolGameQueuesQueueTranslation {
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueTranslation
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueTranslation
   */
  detailedDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueTranslation
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameQueuesQueueTranslation
   */
  shortName?: string;
}
/**
 *
 * @export
 * @interface LolGameSettingsLoginSession
 */
export interface LolGameSettingsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolGameSettingsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof LolGameSettingsLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {LolGameSettingsLoginSessionStates}
   * @memberof LolGameSettingsLoginSession
   */
  state?: LolGameSettingsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolGameSettingsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameSettingsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolGameSettingsgamesettingsgameclient
 */
export interface LolGameSettingsgamesettingsgameclient {
  /**
   *
   * @type {boolean}
   * @memberof LolGameSettingsgamesettingsgameclient
   */
  running?: boolean;
}
/**
 *
 * @export
 * @interface LolGameSettingsgamesettingsgameflowsession
 */
export interface LolGameSettingsgamesettingsgameflowsession {
  /**
   *
   * @type {LolGameSettingsgamesettingsgameclient}
   * @memberof LolGameSettingsgamesettingsgameflowsession
   */
  gameClient?: LolGameSettingsgamesettingsgameclient;
}
/**
 *
 * @export
 * @interface LolGameflowCrashReportingSettings
 */
export interface LolGameflowCrashReportingSettings {
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowCrashReportingSettings
   */
  enabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowCrashReportingSettings
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolGameflowGameflowAvailability
 */
export interface LolGameflowGameflowAvailability {
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowGameflowAvailability
   */
  isAvailable?: boolean;
  /**
   *
   * @type {LolGameflowGameflowAvailabilityState}
   * @memberof LolGameflowGameflowAvailability
   */
  state?: LolGameflowGameflowAvailabilityState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowGameflowAvailabilityState {
  Available = 'Available',
  Initializing = 'Initializing',
  Patching = 'Patching',
  PlayerBanned = 'PlayerBanned',
  InGameFlow = 'InGameFlow',
  Configuration = 'Configuration',
  EligibilityInfoMissing = 'EligibilityInfoMissing',
}

/**
 *
 * @export
 * @interface LolGameflowGameflowGameClient
 */
export interface LolGameflowGameflowGameClient {
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameClient
   */
  observerServerIp?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameflowGameflowGameClient
   */
  observerServerPort?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowGameflowGameClient
   */
  running?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameClient
   */
  serverIp?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameflowGameflowGameClient
   */
  serverPort?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowGameflowGameClient
   */
  visible?: boolean;
}
/**
 *
 * @export
 * @interface LolGameflowGameflowGameData
 */
export interface LolGameflowGameflowGameData {
  /**
   *
   * @type {number}
   * @memberof LolGameflowGameflowGameData
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameData
   */
  gameName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowGameflowGameData
   */
  isCustomGame?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameData
   */
  password?: string;
  /**
   *
   * @type {Array<object>}
   * @memberof LolGameflowGameflowGameData
   */
  playerChampionSelections?: Array<object>;
  /**
   *
   * @type {LolGameflowQueue}
   * @memberof LolGameflowGameflowGameData
   */
  queue?: LolGameflowQueue;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowGameflowGameData
   */
  spectatorsAllowed?: boolean;
  /**
   *
   * @type {Array<object>}
   * @memberof LolGameflowGameflowGameData
   */
  teamOne?: Array<object>;
  /**
   *
   * @type {Array<object>}
   * @memberof LolGameflowGameflowGameData
   */
  teamTwo?: Array<object>;
}
/**
 *
 * @export
 * @interface LolGameflowGameflowGameDodge
 */
export interface LolGameflowGameflowGameDodge {
  /**
   *
   * @type {Array<number>}
   * @memberof LolGameflowGameflowGameDodge
   */
  dodgeIds?: Array<number>;
  /**
   *
   * @type {LolGameflowGameflowPhase}
   * @memberof LolGameflowGameflowGameDodge
   */
  phase?: LolGameflowGameflowPhase;
  /**
   *
   * @type {LolGameflowGameflowGameDodgeState}
   * @memberof LolGameflowGameflowGameDodge
   */
  state?: LolGameflowGameflowGameDodgeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowGameflowGameDodgeState {
  Invalid = 'Invalid',
  PartyDodged = 'PartyDodged',
  StrangerDodged = 'StrangerDodged',
  TournamentDodged = 'TournamentDodged',
}

/**
 *
 * @export
 * @interface LolGameflowGameflowGameMap
 */
export interface LolGameflowGameflowGameMap {
  /**
   *
   * @type {object}
   * @memberof LolGameflowGameflowGameMap
   */
  assets?: object;
  /**
   *
   * @type {object}
   * @memberof LolGameflowGameflowGameMap
   */
  categorizedContentBundles?: object;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  gameModeName?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  gameModeShortName?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  gameMutator?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameflowGameflowGameMap
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowGameflowGameMap
   */
  isRGM?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  mapStringId?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowGameflowGameMap
   */
  platformName?: string;
  /**
   *
   * @type {object}
   * @memberof LolGameflowGameflowGameMap
   */
  properties?: object;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolGameflowGameflowProcessInfo
 */
export interface LolGameflowGameflowProcessInfo {
  /**
   *
   * @type {number}
   * @memberof LolGameflowGameflowProcessInfo
   */
  pid?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolGameflowGameflowProcessInfo
   */
  rawArgs?: Array<string>;
}
/**
 *
 * @export
 * @interface LolGameflowGameflowSession
 */
export interface LolGameflowGameflowSession {
  /**
   *
   * @type {LolGameflowGameflowGameClient}
   * @memberof LolGameflowGameflowSession
   */
  gameClient?: LolGameflowGameflowGameClient;
  /**
   *
   * @type {LolGameflowGameflowGameData}
   * @memberof LolGameflowGameflowSession
   */
  gameData?: LolGameflowGameflowGameData;
  /**
   *
   * @type {LolGameflowGameflowGameDodge}
   * @memberof LolGameflowGameflowSession
   */
  gameDodge?: LolGameflowGameflowGameDodge;
  /**
   *
   * @type {LolGameflowGameflowGameMap}
   * @memberof LolGameflowGameflowSession
   */
  map?: LolGameflowGameflowGameMap;
  /**
   *
   * @type {LolGameflowGameflowPhase}
   * @memberof LolGameflowGameflowSession
   */
  phase?: LolGameflowGameflowPhase;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowGameflowWatchPhase {
  None = 'None',
  WatchStarted = 'WatchStarted',
  WatchInProgress = 'WatchInProgress',
  WatchFailedToLaunch = 'WatchFailedToLaunch',
}

/**
 *
 * @export
 * @interface LolGameflowInstallPaths
 */
export interface LolGameflowInstallPaths {
  /**
   *
   * @type {string}
   * @memberof LolGameflowInstallPaths
   */
  gameExecutablePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowInstallPaths
   */
  gameInstallRoot?: string;
}
/**
 *
 * @export
 * @interface LolGameflowLobbyStatus
 */
export interface LolGameflowLobbyStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowLobbyStatus
   */
  allowedPlayAgain?: boolean;
  /**
   *
   * @type {LolGameflowQueueCustomGameSpectatorPolicy}
   * @memberof LolGameflowLobbyStatus
   */
  customSpectatorPolicy?: LolGameflowQueueCustomGameSpectatorPolicy;
  /**
   *
   * @type {Array<number>}
   * @memberof LolGameflowLobbyStatus
   */
  invitedSummonerIds?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowLobbyStatus
   */
  isCustom?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowLobbyStatus
   */
  isLeader?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowLobbyStatus
   */
  isPracticeTool?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowLobbyStatus
   */
  isSpectator?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowLobbyStatus
   */
  lobbyId?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolGameflowLobbyStatus
   */
  memberSummonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolGameflowLobbyStatus
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolGameflowLoginSession
 */
export interface LolGameflowLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolGameflowLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {LolGameflowLoginSessionStates}
   * @memberof LolGameflowLoginSession
   */
  state?: LolGameflowLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolGameflowLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolGameflowPatcherProductState
 */
export interface LolGameflowPatcherProductState {
  /**
   *
   * @type {LolGameflowPatcherProductStateAction}
   * @memberof LolGameflowPatcherProductState
   */
  action?: LolGameflowPatcherProductStateAction;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowPatcherProductState
   */
  isCorrupted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowPatcherProductState
   */
  isStopped?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowPatcherProductState
   */
  isUpToDate?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowPatcherProductState
   */
  isUpdateAvailable?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowPatcherProductStateAction {
  Idle = 'Idle',
  CheckingForUpdates = 'CheckingForUpdates',
  Patching = 'Patching',
  Repairing = 'Repairing',
  Migrating = 'Migrating',
}

/**
 *
 * @export
 * @interface LolGameflowPlayerStatus
 */
export interface LolGameflowPlayerStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowPlayerStatus
   */
  canInviteOthersAtEog?: boolean;
  /**
   *
   * @type {LolGameflowLobbyStatus}
   * @memberof LolGameflowPlayerStatus
   */
  currentLobbyStatus?: LolGameflowLobbyStatus;
  /**
   *
   * @type {LolGameflowLobbyStatus}
   * @memberof LolGameflowPlayerStatus
   */
  lastQueuedLobbyStatus?: LolGameflowLobbyStatus;
}
/**
 *
 * @export
 * @interface LolGameflowQueue
 */
export interface LolGameflowQueue {
  /**
   *
   * @type {Array<number>}
   * @memberof LolGameflowQueue
   */
  allowablePremadeSizes?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueue
   */
  areFreeChampionsAllowed?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueue
   */
  assetMutator?: string;
  /**
   *
   * @type {LolGameflowQueueGameCategory}
   * @memberof LolGameflowQueue
   */
  category?: LolGameflowQueueGameCategory;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  championsRequiredToPlay?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueue
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueue
   */
  detailedDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueue
   */
  gameMode?: string;
  /**
   *
   * @type {LolGameflowQueueGameTypeConfig}
   * @memberof LolGameflowQueue
   */
  gameTypeConfig?: LolGameflowQueueGameTypeConfig;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueue
   */
  isRanked?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueue
   */
  isTeamBuilderManaged?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueue
   */
  isTeamOnly?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  lastToggledOffTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  lastToggledOnTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  maxLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  maxSummonerLevelForFirstWinOfTheDay?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  maximumParticipantListSize?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  minLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  minimumParticipantListSize?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueue
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  numPlayersPerTeam?: number;
  /**
   *
   * @type {LolGameflowQueueAvailability}
   * @memberof LolGameflowQueue
   */
  queueAvailability?: LolGameflowQueueAvailability;
  /**
   *
   * @type {LolGameflowQueueReward}
   * @memberof LolGameflowQueue
   */
  queueRewards?: LolGameflowQueueReward;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueue
   */
  removalFromGameAllowed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueue
   */
  removalFromGameDelayMinutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueue
   */
  shortName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueue
   */
  showPositionSelector?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueue
   */
  spectatorEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueue
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowQueueAvailability {
  Available = 'Available',
  PlatformDisabled = 'PlatformDisabled',
  DoesntMeetRequirements = 'DoesntMeetRequirements',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowQueueCustomGameSpectatorPolicy {
  NotAllowed = 'NotAllowed',
  LobbyAllowed = 'LobbyAllowed',
  FriendsAllowed = 'FriendsAllowed',
  AllAllowed = 'AllAllowed',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolGameflowQueueGameCategory {
  None = 'None',
  Custom = 'Custom',
  PvP = 'PvP',
  VersusAi = 'VersusAi',
  Alpha = 'Alpha',
}

/**
 *
 * @export
 * @interface LolGameflowQueueGameTypeConfig
 */
export interface LolGameflowQueueGameTypeConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  advancedLearningQuests?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  allowTrades?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  banMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  banTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  battleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  crossTeamChampionPool?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  deathMatch?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  doNotRemove?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  duplicatePick?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  exclusivePick?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  learningQuests?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  mainPickTimerDuration?: number;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  maxAllowableBans?: number;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  onboardCoopBeginner?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  pickMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  postPickTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  reroll?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueGameTypeConfig
   */
  teamChampionPool?: boolean;
}
/**
 *
 * @export
 * @interface LolGameflowQueueReward
 */
export interface LolGameflowQueueReward {
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueReward
   */
  isChampionPointsEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueReward
   */
  isIpEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowQueueReward
   */
  isXpEnabled?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolGameflowQueueReward
   */
  partySizeIpRewards?: Array<number>;
}
/**
 *
 * @export
 * @interface LolGameflowRegionLocale
 */
export interface LolGameflowRegionLocale {
  /**
   *
   * @type {string}
   * @memberof LolGameflowRegionLocale
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowRegionLocale
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolGameflowRegistrationStatus
 */
export interface LolGameflowRegistrationStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolGameflowRegistrationStatus
   */
  complete?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolGameflowRegistrationStatus
   */
  errorCodes?: Array<string>;
}
/**
 *
 * @export
 * @interface LolGameflowReplaysSettingsData
 */
export interface LolGameflowReplaysSettingsData {
  /**
   *
   * @type {string}
   * @memberof LolGameflowReplaysSettingsData
   */
  highlights_folder_path?: string;
}
/**
 *
 * @export
 * @interface LolGameflowReplaysSettingsResource
 */
export interface LolGameflowReplaysSettingsResource {
  /**
   *
   * @type {LolGameflowReplaysSettingsData}
   * @memberof LolGameflowReplaysSettingsResource
   */
  data?: LolGameflowReplaysSettingsData;
}
/**
 *
 * @export
 * @interface LolGameflowSpectateGameInfoResource
 */
export interface LolGameflowSpectateGameInfoResource {
  /**
   *
   * @type {string}
   * @memberof LolGameflowSpectateGameInfoResource
   */
  allowObserveMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowSpectateGameInfoResource
   */
  dropInSpectateGameId?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowSpectateGameInfoResource
   */
  gameQueueType?: string;
  /**
   *
   * @type {string}
   * @memberof LolGameflowSpectateGameInfoResource
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolGamhsAccessToken
 */
export interface LolGamhsAccessToken {
  /**
   *
   * @type {number}
   * @memberof LolGamhsAccessToken
   */
  expiry?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolGamhsAccessToken
   */
  scopes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolGamhsAccessToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolGamhsLoginSession
 */
export interface LolGamhsLoginSession {
  /**
   *
   * @type {string}
   * @memberof LolGamhsLoginSession
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolGamhsMatchHistoryData
 */
export interface LolGamhsMatchHistoryData {
  /**
   *
   * @type {object}
   * @memberof LolGamhsMatchHistoryData
   */
  json?: object;
  /**
   *
   * @type {LolGamhsMatchHistoryMetadata}
   * @memberof LolGamhsMatchHistoryData
   */
  metadata?: LolGamhsMatchHistoryMetadata;
}
/**
 *
 * @export
 * @interface LolGamhsMatchHistoryList
 */
export interface LolGamhsMatchHistoryList {
  /**
   *
   * @type {string}
   * @memberof LolGamhsMatchHistoryList
   */
  active_puuid?: string;
  /**
   *
   * @type {Array<LolGamhsMatchHistoryData>}
   * @memberof LolGamhsMatchHistoryList
   */
  games?: Array<LolGamhsMatchHistoryData>;
}
/**
 *
 * @export
 * @interface LolGamhsMatchHistoryMetadata
 */
export interface LolGamhsMatchHistoryMetadata {
  /**
   *
   * @type {number}
   * @memberof LolGamhsMatchHistoryMetadata
   */
  data_version?: number;
  /**
   *
   * @type {string}
   * @memberof LolGamhsMatchHistoryMetadata
   */
  info_type?: string;
  /**
   *
   * @type {string}
   * @memberof LolGamhsMatchHistoryMetadata
   */
  match_id?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolGamhsMatchHistoryMetadata
   */
  participants?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolGamhsMatchHistoryMetadata
   */
  product?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolGamhsMatchHistoryMetadata
   */
  tags?: Array<string>;
}
/**
 *
 * @export
 * @interface LolGeoinfoGeoInfo
 */
export interface LolGeoinfoGeoInfo {
  /**
   *
   * @type {string}
   * @memberof LolGeoinfoGeoInfo
   */
  city?: string;
  /**
   *
   * @type {string}
   * @memberof LolGeoinfoGeoInfo
   */
  country?: string;
  /**
   *
   * @type {string}
   * @memberof LolGeoinfoGeoInfo
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolGeoinfoGeoInfoConfig
 */
export interface LolGeoinfoGeoInfoConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolGeoinfoGeoInfoConfig
   */
  Enabled?: boolean;
}
/**
 *
 * @export
 * @interface LolGeoinfoGeoInfoResponse
 */
export interface LolGeoinfoGeoInfoResponse {
  /**
   *
   * @type {string}
   * @memberof LolGeoinfoGeoInfoResponse
   */
  errorMessage?: string;
  /**
   *
   * @type {LolGeoinfoGeoInfo}
   * @memberof LolGeoinfoGeoInfoResponse
   */
  geoInfo?: LolGeoinfoGeoInfo;
  /**
   *
   * @type {boolean}
   * @memberof LolGeoinfoGeoInfoResponse
   */
  isInitialized?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGeoinfoGeoInfoResponse
   */
  isLatest?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolGeoinfoGeoInfoResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolGeoinfoLoginSession
 */
export interface LolGeoinfoLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolGeoinfoLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolGeoinfoLoginSessionState}
   * @memberof LolGeoinfoLoginSession
   */
  state?: LolGeoinfoLoginSessionState;
  /**
   *
   * @type {number}
   * @memberof LolGeoinfoLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolGeoinfoLoginSessionState {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolGeoinfoWhereAmIRequest
 */
export interface LolGeoinfoWhereAmIRequest {
  /**
   *
   * @type {string}
   * @memberof LolGeoinfoWhereAmIRequest
   */
  ipAddress?: string;
}
/**
 *
 * @export
 * @interface LolGeoinfoWhereAmIResponse
 */
export interface LolGeoinfoWhereAmIResponse {
  /**
   *
   * @type {string}
   * @memberof LolGeoinfoWhereAmIResponse
   */
  city?: string;
  /**
   *
   * @type {string}
   * @memberof LolGeoinfoWhereAmIResponse
   */
  country?: string;
  /**
   *
   * @type {string}
   * @memberof LolGeoinfoWhereAmIResponse
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolHeartbeatLoginSession
 */
export interface LolHeartbeatLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolHeartbeatLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolHeartbeatLoginSessionStates}
   * @memberof LolHeartbeatLoginSession
   */
  state?: LolHeartbeatLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolHeartbeatLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolHeartbeatLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolHighlightsHighlight
 */
export interface LolHighlightsHighlight {
  /**
   *
   * @type {number}
   * @memberof LolHighlightsHighlight
   */
  fileSizeBytes?: number;
  /**
   *
   * @type {string}
   * @memberof LolHighlightsHighlight
   */
  filepath?: string;
  /**
   *
   * @type {number}
   * @memberof LolHighlightsHighlight
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolHighlightsHighlight
   */
  mtimeIso8601?: string;
  /**
   *
   * @type {number}
   * @memberof LolHighlightsHighlight
   */
  mtimeMsUtc?: number;
  /**
   *
   * @type {string}
   * @memberof LolHighlightsHighlight
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolHighlightsHighlight
   */
  url?: string;
}
/**
 *
 * @export
 * @interface LolHighlightsHighlightsConfig
 */
export interface LolHighlightsHighlightsConfig {
  /**
   *
   * @type {string}
   * @memberof LolHighlightsHighlightsConfig
   */
  invalidHighlightNameCharacters?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolHighlightsHighlightsConfig
   */
  isHighlightsEnabled?: boolean;
}
/**
 *
 * @export
 * @interface LolHighlightsHighlightsDynamicConfig
 */
export interface LolHighlightsHighlightsDynamicConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolHighlightsHighlightsDynamicConfig
   */
  Enabled?: boolean;
}
/**
 *
 * @export
 * @interface LolHighlightsHighlightsSettingsData
 */
export interface LolHighlightsHighlightsSettingsData {
  /**
   *
   * @type {string}
   * @memberof LolHighlightsHighlightsSettingsData
   */
  highlights_folder_path?: string;
}
/**
 *
 * @export
 * @interface LolHighlightsHighlightsSettingsResource
 */
export interface LolHighlightsHighlightsSettingsResource {
  /**
   *
   * @type {LolHighlightsHighlightsSettingsData}
   * @memberof LolHighlightsHighlightsSettingsResource
   */
  data?: LolHighlightsHighlightsSettingsData;
}
/**
 *
 * @export
 * @interface LolHonorV2ApiHonorPlayerServerRequest
 */
export interface LolHonorV2ApiHonorPlayerServerRequest {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2ApiHonorPlayerServerRequest
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2ApiHonorPlayerServerRequest
   */
  honorCategory?: string;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2ApiHonorPlayerServerRequest
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2Ballot
 */
export interface LolHonorV2Ballot {
  /**
   *
   * @type {Array<LolHonorV2EligiblePlayer>}
   * @memberof LolHonorV2Ballot
   */
  eligiblePlayers?: Array<LolHonorV2EligiblePlayer>;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2Ballot
   */
  gameId?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2DynamicHonorMessage
 */
export interface LolHonorV2DynamicHonorMessage {
  /**
   *
   * @type {string}
   * @memberof LolHonorV2DynamicHonorMessage
   */
  messageId?: string;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2DynamicHonorMessage
   */
  value?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2EligiblePlayer
 */
export interface LolHonorV2EligiblePlayer {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EligiblePlayer
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EligiblePlayer
   */
  skinIndex?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EligiblePlayer
   */
  skinName?: string;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EligiblePlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EligiblePlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolHonorV2EndOfGamePlayer
 */
export interface LolHonorV2EndOfGamePlayer {
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  botPlayer?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  gameId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  isReportingDisabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  leaver?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  skinIndex?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  skinName?: string;
  /**
   *
   * @type {object}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  stats?: object;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  teamId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  userId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGamePlayer
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2EndOfGameStats
 */
export interface LolHonorV2EndOfGameStats {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGameStats
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGameStats
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameStats
   */
  difficulty?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGameStats
   */
  gameEndedInEarlySurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGameStats
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGameStats
   */
  gameLength?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameStats
   */
  gameMode?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolHonorV2EndOfGameStats
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameStats
   */
  gameType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGameStats
   */
  imbalancedTeamsNoPoints?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGameStats
   */
  invalid?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameStats
   */
  myTeamStatus?: string;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameStats
   */
  queueType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGameStats
   */
  ranked?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGameStats
   */
  reportGameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGameStats
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameStats
   */
  summonerName?: string;
  /**
   *
   * @type {Array<LolHonorV2EndOfGameTeam>}
   * @memberof LolHonorV2EndOfGameStats
   */
  teams?: Array<LolHonorV2EndOfGameTeam>;
}
/**
 *
 * @export
 * @interface LolHonorV2EndOfGameTeam
 */
export interface LolHonorV2EndOfGameTeam {
  /**
   *
   * @type {Array<number>}
   * @memberof LolHonorV2EndOfGameTeam
   */
  championBans?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameTeam
   */
  fullId?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGameTeam
   */
  isBottomTeam?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGameTeam
   */
  isPlayerTeam?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2EndOfGameTeam
   */
  isWinningTeam?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameTeam
   */
  memberStatusString?: string;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameTeam
   */
  name?: string;
  /**
   *
   * @type {Array<LolHonorV2EndOfGamePlayer>}
   * @memberof LolHonorV2EndOfGameTeam
   */
  players?: Array<LolHonorV2EndOfGamePlayer>;
  /**
   *
   * @type {object}
   * @memberof LolHonorV2EndOfGameTeam
   */
  stats?: object;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2EndOfGameTeam
   */
  tag?: string;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2EndOfGameTeam
   */
  teamId?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2GameflowGameData
 */
export interface LolHonorV2GameflowGameData {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2GameflowGameData
   */
  gameId?: number;
  /**
   *
   * @type {LolHonorV2Queue}
   * @memberof LolHonorV2GameflowGameData
   */
  queue?: LolHonorV2Queue;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolHonorV2GameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolHonorV2GameflowSession
 */
export interface LolHonorV2GameflowSession {
  /**
   *
   * @type {LolHonorV2GameflowGameData}
   * @memberof LolHonorV2GameflowSession
   */
  gameData?: LolHonorV2GameflowGameData;
  /**
   *
   * @type {LolHonorV2GameflowPhase}
   * @memberof LolHonorV2GameflowSession
   */
  phase?: LolHonorV2GameflowPhase;
}
/**
 *
 * @export
 * @interface LolHonorV2Honor
 */
export interface LolHonorV2Honor {
  /**
   *
   * @type {string}
   * @memberof LolHonorV2Honor
   */
  honorCategory?: string;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2Honor
   */
  voterRelationship?: string;
}
/**
 *
 * @export
 * @interface LolHonorV2HonorConfig
 */
export interface LolHonorV2HonorConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2HonorConfig
   */
  DayOneModalEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2HonorConfig
   */
  Enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2HonorConfig
   */
  Honor2018Enabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2HonorConfig
   */
  SecondsToVote?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2HonorRecipient
 */
export interface LolHonorV2HonorRecipient {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2HonorRecipient
   */
  gameId?: number;
  /**
   *
   * @type {Array<LolHonorV2Honor>}
   * @memberof LolHonorV2HonorRecipient
   */
  honors?: Array<LolHonorV2Honor>;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2HonorRecipient
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2LoginSession
 */
export interface LolHonorV2LoginSession {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2LoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolHonorV2LoginSessionStates}
   * @memberof LolHonorV2LoginSession
   */
  state?: LolHonorV2LoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2LoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolHonorV2LoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolHonorV2MutualHonor
 */
export interface LolHonorV2MutualHonor {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2MutualHonor
   */
  gameId?: number;
  /**
   *
   * @type {Array<LolHonorV2MutualHonorPlayer>}
   * @memberof LolHonorV2MutualHonor
   */
  summoners?: Array<LolHonorV2MutualHonorPlayer>;
}
/**
 *
 * @export
 * @interface LolHonorV2MutualHonorPlayer
 */
export interface LolHonorV2MutualHonorPlayer {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2MutualHonorPlayer
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2MutualHonorPlayer
   */
  skinIndex?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2MutualHonorPlayer
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2ProfileInfo
 */
export interface LolHonorV2ProfileInfo {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2ProfileInfo
   */
  checkpoint?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2ProfileInfo
   */
  honorLevel?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2ProfileInfo
   */
  rewardsLocked?: boolean;
}
/**
 *
 * @export
 * @interface LolHonorV2Queue
 */
export interface LolHonorV2Queue {
  /**
   *
   * @type {string}
   * @memberof LolHonorV2Queue
   */
  gameMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2Queue
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2Queue
   */
  mapId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2Queue
   */
  removalFromGameAllowed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2Queue
   */
  removalFromGameDelayMinutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2Queue
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolHonorV2Reward
 */
export interface LolHonorV2Reward {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2Reward
   */
  quantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2Reward
   */
  rewardType?: string;
}
/**
 *
 * @export
 * @interface LolHonorV2SequenceEvent
 */
export interface LolHonorV2SequenceEvent {
  /**
   *
   * @type {string}
   * @memberof LolHonorV2SequenceEvent
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2SequenceEvent
   */
  priority?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2ServiceProxyHonorPlayerServerRequest
 */
export interface LolHonorV2ServiceProxyHonorPlayerServerRequest {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2ServiceProxyHonorPlayerServerRequest
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2ServiceProxyHonorPlayerServerRequest
   */
  honorType?: string;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2ServiceProxyHonorPlayerServerRequest
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolHonorV2ServiceProxyRetrieveProfileResponse
 */
export interface LolHonorV2ServiceProxyRetrieveProfileResponse {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2ServiceProxyRetrieveProfileResponse
   */
  checkpoint?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2ServiceProxyRetrieveProfileResponse
   */
  honorLevel?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2ServiceProxyRetrieveProfileResponse
   */
  rewardsLocked?: boolean;
}
/**
 *
 * @export
 * @interface LolHonorV2VendedHonorChange
 */
export interface LolHonorV2VendedHonorChange {
  /**
   *
   * @type {string}
   * @memberof LolHonorV2VendedHonorChange
   */
  actionType?: string;
  /**
   *
   * @type {LolHonorV2VendedHonorState}
   * @memberof LolHonorV2VendedHonorChange
   */
  currentState?: LolHonorV2VendedHonorState;
  /**
   *
   * @type {LolHonorV2DynamicHonorMessage}
   * @memberof LolHonorV2VendedHonorChange
   */
  dynamicHonorMessage?: LolHonorV2DynamicHonorMessage;
  /**
   *
   * @type {LolHonorV2VendedHonorState}
   * @memberof LolHonorV2VendedHonorChange
   */
  previousState?: LolHonorV2VendedHonorState;
  /**
   *
   * @type {LolHonorV2Reward}
   * @memberof LolHonorV2VendedHonorChange
   */
  reward?: LolHonorV2Reward;
}
/**
 *
 * @export
 * @interface LolHonorV2VendedHonorState
 */
export interface LolHonorV2VendedHonorState {
  /**
   *
   * @type {number}
   * @memberof LolHonorV2VendedHonorState
   */
  checkpoint?: number;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2VendedHonorState
   */
  level?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2VendedHonorState
   */
  rewardsLocked?: boolean;
}
/**
 *
 * @export
 * @interface LolHonorV2VendedReward
 */
export interface LolHonorV2VendedReward {
  /**
   *
   * @type {LolHonorV2DynamicHonorMessage}
   * @memberof LolHonorV2VendedReward
   */
  dynamicHonorMessage?: LolHonorV2DynamicHonorMessage;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2VendedReward
   */
  quantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolHonorV2VendedReward
   */
  rewardType?: string;
}
/**
 *
 * @export
 * @interface LolHonorV2VoteCompletion
 */
export interface LolHonorV2VoteCompletion {
  /**
   *
   * @type {boolean}
   * @memberof LolHonorV2VoteCompletion
   */
  fullTeamVote?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolHonorV2VoteCompletion
   */
  gameId?: number;
}
/**
 *
 * @export
 * @interface LolHovercardChatSession
 */
export interface LolHovercardChatSession {
  /**
   *
   * @type {string}
   * @memberof LolHovercardChatSession
   */
  sessionState?: string;
}
/**
 *
 * @export
 * @interface LolHovercardContentCookies
 */
export interface LolHovercardContentCookies {
  /**
   *
   * @type {string}
   * @memberof LolHovercardContentCookies
   */
  content_id?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardContentCookies
   */
  content_path?: string;
  /**
   *
   * @type {Array<LolHovercardcookie>}
   * @memberof LolHovercardContentCookies
   */
  cookies?: Array<LolHovercardcookie>;
}
/**
 *
 * @export
 * @interface LolHovercardFriendResult
 */
export interface LolHovercardFriendResult {
  /**
   *
   * @type {number}
   * @memberof LolHovercardFriendResult
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  availability?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  gameName?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  gameTag?: string;
  /**
   *
   * @type {number}
   * @memberof LolHovercardFriendResult
   */
  icon?: number;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolHovercardFriendResult
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  note?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  product?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  productName?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolHovercardFriendResult
   */
  score?: number;
  /**
   *
   * @type {string}
   * @memberof LolHovercardFriendResult
   */
  statusMessage?: string;
  /**
   *
   * @type {number}
   * @memberof LolHovercardFriendResult
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolHovercardHovercardUserInfo
 */
export interface LolHovercardHovercardUserInfo {
  /**
   *
   * @type {number}
   * @memberof LolHovercardHovercardUserInfo
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  availability?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  gameName?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  gameTag?: string;
  /**
   *
   * @type {number}
   * @memberof LolHovercardHovercardUserInfo
   */
  icon?: number;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolHovercardHovercardUserInfo
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  note?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolHovercardHovercardUserInfo
   */
  partySummoners?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  patchline?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  product?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  productName?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  puuid?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolHovercardHovercardUserInfo
   */
  remotePlatform?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolHovercardHovercardUserInfo
   */
  remoteProduct?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  remoteProductBackdropUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  remoteProductIconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolHovercardHovercardUserInfo
   */
  score?: number;
  /**
   *
   * @type {string}
   * @memberof LolHovercardHovercardUserInfo
   */
  statusMessage?: string;
  /**
   *
   * @type {number}
   * @memberof LolHovercardHovercardUserInfo
   */
  summonerIcon?: number;
  /**
   *
   * @type {number}
   * @memberof LolHovercardHovercardUserInfo
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHovercardHovercardUserInfo
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolHovercardPartyInfo
 */
export interface LolHovercardPartyInfo {
  /**
   *
   * @type {Array<number>}
   * @memberof LolHovercardPartyInfo
   */
  summoners?: Array<number>;
}
/**
 *
 * @export
 * @interface LolHovercardPatchlineMetadata
 */
export interface LolHovercardPatchlineMetadata {
  /**
   *
   * @type {Array<LolHovercardContentCookies>}
   * @memberof LolHovercardPatchlineMetadata
   */
  content_cookies?: Array<LolHovercardContentCookies>;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolHovercardPatchlineMetadata
   */
  content_paths?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolHovercardPatchlineMetadata
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardPatchlineMetadata
   */
  product_id?: string;
}
/**
 *
 * @export
 * @interface LolHovercardProductMetadata
 */
export interface LolHovercardProductMetadata {
  /**
   *
   * @type {string}
   * @memberof LolHovercardProductMetadata
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardProductMetadata
   */
  name?: string;
  /**
   *
   * @type {{ [key: string]: LolHovercardPatchlineMetadata; }}
   * @memberof LolHovercardProductMetadata
   */
  patchlines?: { [key: string]: LolHovercardPatchlineMetadata };
}
/**
 *
 * @export
 * @interface LolHovercardProductMetadataMap
 */
export interface LolHovercardProductMetadataMap {
  /**
   *
   * @type {{ [key: string]: LolHovercardProductMetadata; }}
   * @memberof LolHovercardProductMetadataMap
   */
  products?: { [key: string]: LolHovercardProductMetadata };
}
/**
 *
 * @export
 * @interface LolHovercardSummoner
 */
export interface LolHovercardSummoner {
  /**
   *
   * @type {number}
   * @memberof LolHovercardSummoner
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolHovercardSummoner
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardSummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolHovercardSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolHovercardSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolHovercardSummonerIdAndIcon
 */
export interface LolHovercardSummonerIdAndIcon {
  /**
   *
   * @type {number}
   * @memberof LolHovercardSummonerIdAndIcon
   */
  profileIconId?: number;
}
/**
 *
 * @export
 * @interface LolHovercardSummonerIdAndName
 */
export interface LolHovercardSummonerIdAndName {
  /**
   *
   * @type {string}
   * @memberof LolHovercardSummonerIdAndName
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LolHovercardSummonerIdAndName
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolHovercardTopChampionMastery
 */
export interface LolHovercardTopChampionMastery {
  /**
   *
   * @type {number}
   * @memberof LolHovercardTopChampionMastery
   */
  score?: number;
}
/**
 *
 * @export
 * @interface LolHovercardcookie
 */
export interface LolHovercardcookie {
  /**
   *
   * @type {string}
   * @memberof LolHovercardcookie
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolHovercardcookie
   */
  value?: string;
}
/**
 *
 * @export
 * @interface LolInventoryAccessTokenResource
 */
export interface LolInventoryAccessTokenResource {
  /**
   *
   * @type {number}
   * @memberof LolInventoryAccessTokenResource
   */
  expiry?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolInventoryAccessTokenResource
   */
  scopes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolInventoryAccessTokenResource
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolInventoryCatalogItem
 */
export interface LolInventoryCatalogItem {
  /**
   *
   * @type {string}
   * @memberof LolInventoryCatalogItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryCatalogItem
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryCatalogItem
   */
  itemInstanceId?: string;
}
/**
 *
 * @export
 * @interface LolInventoryClientCacheClearMessageDTO
 */
export interface LolInventoryClientCacheClearMessageDTO {
  /**
   *
   * @type {boolean}
   * @memberof LolInventoryClientCacheClearMessageDTO
   */
  clearAll?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolInventoryClientCacheClearMessageDTO
   */
  inventoryTypes?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolInventoryClientCacheClearMessageDTO
   */
  regions?: Array<string>;
}
/**
 *
 * @export
 * @interface LolInventoryCurrencyDTO
 */
export interface LolInventoryCurrencyDTO {
  /**
   *
   * @type {number}
   * @memberof LolInventoryCurrencyDTO
   */
  amount?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolInventoryCurrencyDTO
   */
  subCurrencies?: { [key: string]: number };
}
/**
 *
 * @export
 * @interface LolInventoryInventoryCacheEntry
 */
export interface LolInventoryInventoryCacheEntry {
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryCacheEntry
   */
  expirationMS?: number;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryCacheEntry
   */
  issuedAtMS?: number;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryCacheEntry
   */
  receivedAtMS?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryCacheEntry
   */
  signedInventoryJwt?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolInventoryInventoryCacheEntry
   */
  valid?: boolean;
}
/**
 *
 * @export
 * @interface LolInventoryInventoryDTO
 */
export interface LolInventoryInventoryDTO {
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryDTO
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryDTO
   */
  expires?: string;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolInventoryInventoryDTO
   */
  items?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryDTO
   */
  itemsJwt?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryDTO
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryDTO
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolInventoryInventoryItem
 */
export interface LolInventoryInventoryItem {
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryItem
   */
  itemId?: number;
  /**
   *
   * @type {LolInventoryItemOwnershipType}
   * @memberof LolInventoryInventoryItem
   */
  ownershipType?: LolInventoryItemOwnershipType;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItem
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryItem
   */
  quantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItem
   */
  uuid?: string;
}
/**
 *
 * @export
 * @interface LolInventoryInventoryItemDTO
 */
export interface LolInventoryInventoryItemDTO {
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemDTO
   */
  entitlementId?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemDTO
   */
  entitlementTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemDTO
   */
  expirationDate?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolInventoryInventoryItemDTO
   */
  f2p?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemDTO
   */
  instanceId?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemDTO
   */
  instanceTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemDTO
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryItemDTO
   */
  itemId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolInventoryInventoryItemDTO
   */
  loyalty?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolInventoryInventoryItemDTO
   */
  lsb?: boolean;
  /**
   *
   * @type {object}
   * @memberof LolInventoryInventoryItemDTO
   */
  payload?: object;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemDTO
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryItemDTO
   */
  quantity?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolInventoryInventoryItemDTO
   */
  rental?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemDTO
   */
  usedInGameDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryItemDTO
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LolInventoryInventoryItemWithPayload
 */
export interface LolInventoryInventoryItemWithPayload {
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemWithPayload
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryItemWithPayload
   */
  itemId?: number;
  /**
   *
   * @type {LolInventoryItemOwnershipType}
   * @memberof LolInventoryInventoryItemWithPayload
   */
  ownershipType?: LolInventoryItemOwnershipType;
  /**
   *
   * @type {object}
   * @memberof LolInventoryInventoryItemWithPayload
   */
  payload?: object;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemWithPayload
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryItemWithPayload
   */
  quantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryItemWithPayload
   */
  uuid?: string;
}
/**
 *
 * @export
 * @interface LolInventoryInventoryNotification
 */
export interface LolInventoryInventoryNotification {
  /**
   *
   * @type {boolean}
   * @memberof LolInventoryInventoryNotification
   */
  acknowledged?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryNotification
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryNotification
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryInventoryNotification
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryInventoryNotification
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolInventoryInventoryResponseDTO
 */
export interface LolInventoryInventoryResponseDTO {
  /**
   *
   * @type {LolInventoryInventoryDTO}
   * @memberof LolInventoryInventoryResponseDTO
   */
  data?: LolInventoryInventoryDTO;
}
/**
 *
 * @export
 * @interface LolInventoryItemKey
 */
export interface LolInventoryItemKey {
  /**
   *
   * @type {string}
   * @memberof LolInventoryItemKey
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryItemKey
   */
  itemId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolInventoryItemOwnershipType {
  OWNED = 'OWNED',
  RENTED = 'RENTED',
  LOYALTY = 'LOYALTY',
  F2P = 'F2P',
}

/**
 *
 * @export
 * @interface LolInventoryLoginSession
 */
export interface LolInventoryLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolInventoryLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof LolInventoryLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolInventoryLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolInventoryLoginSessionStates}
   * @memberof LolInventoryLoginSession
   */
  state?: LolInventoryLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolInventoryLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolInventoryLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolInventoryLoyaltyRewards
 */
export interface LolInventoryLoyaltyRewards {
  /**
   *
   * @type {Array<number>}
   * @memberof LolInventoryLoyaltyRewards
   */
  championIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolInventoryLoyaltyRewards
   */
  freeRewardedChampionsCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolInventoryLoyaltyRewards
   */
  freeRewardedSkinsCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolInventoryLoyaltyRewards
   */
  ipBoost?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolInventoryLoyaltyRewards
   */
  skinIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolInventoryLoyaltyRewards
   */
  xpBoost?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolInventoryLoyaltyStatus {
  LEGACY = 'LEGACY',
  REWARDSGRANT = 'REWARDS_GRANT',
  EXPIRY = 'EXPIRY',
  CHANGE = 'CHANGE',
  REVOKE = 'REVOKE',
  DISABLED = 'DISABLED',
}

/**
 *
 * @export
 * @interface LolInventoryLoyaltyStatusNotification
 */
export interface LolInventoryLoyaltyStatusNotification {
  /**
   *
   * @type {LolInventoryLoyaltyRewards}
   * @memberof LolInventoryLoyaltyStatusNotification
   */
  rewards?: LolInventoryLoyaltyRewards;
  /**
   *
   * @type {LolInventoryLoyaltyStatus}
   * @memberof LolInventoryLoyaltyStatusNotification
   */
  status?: LolInventoryLoyaltyStatus;
}
/**
 *
 * @export
 * @interface LolInventoryRiotMessagingServiceMessage
 */
export interface LolInventoryRiotMessagingServiceMessage {
  /**
   *
   * @type {string}
   * @memberof LolInventoryRiotMessagingServiceMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryRiotMessagingServiceMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryRiotMessagingServiceMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof LolInventoryRiotMessagingServiceMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryRiotMessagingServiceMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @interface LolInventoryRmsEntitlementPayload
 */
export interface LolInventoryRmsEntitlementPayload {
  /**
   *
   * @type {string}
   * @memberof LolInventoryRmsEntitlementPayload
   */
  entitlementTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryRmsEntitlementPayload
   */
  itemId?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryRmsEntitlementPayload
   */
  itemTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryRmsEntitlementPayload
   */
  resourceOperation?: string;
}
/**
 *
 * @export
 * @interface LolInventoryRmsStoreEntitlementItem
 */
export interface LolInventoryRmsStoreEntitlementItem {
  /**
   *
   * @type {string}
   * @memberof LolInventoryRmsStoreEntitlementItem
   */
  inventoryType?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryRmsStoreEntitlementItem
   */
  itemId?: string;
}
/**
 *
 * @export
 * @interface LolInventoryRmsStoreEntitlementPayload
 */
export interface LolInventoryRmsStoreEntitlementPayload {
  /**
   *
   * @type {Array<LolInventoryRmsStoreEntitlementItem>}
   * @memberof LolInventoryRmsStoreEntitlementPayload
   */
  items?: Array<LolInventoryRmsStoreEntitlementItem>;
  /**
   *
   * @type {string}
   * @memberof LolInventoryRmsStoreEntitlementPayload
   */
  transactionId?: string;
}
/**
 *
 * @export
 * @interface LolInventorySimpleInventoryDTO
 */
export interface LolInventorySimpleInventoryDTO {
  /**
   *
   * @type {string}
   * @memberof LolInventorySimpleInventoryDTO
   */
  expires?: string;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolInventorySimpleInventoryDTO
   */
  items?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof LolInventorySimpleInventoryDTO
   */
  itemsJwt?: string;
}
/**
 *
 * @export
 * @interface LolInventorySimpleInventoryResponseDTO
 */
export interface LolInventorySimpleInventoryResponseDTO {
  /**
   *
   * @type {LolInventorySimpleInventoryDTO}
   * @memberof LolInventorySimpleInventoryResponseDTO
   */
  data?: LolInventorySimpleInventoryDTO;
}
/**
 *
 * @export
 * @interface LolInventoryWalletCacheEntry
 */
export interface LolInventoryWalletCacheEntry {
  /**
   *
   * @type {number}
   * @memberof LolInventoryWalletCacheEntry
   */
  expirationMS?: number;
  /**
   *
   * @type {number}
   * @memberof LolInventoryWalletCacheEntry
   */
  issuedAtMS?: number;
  /**
   *
   * @type {number}
   * @memberof LolInventoryWalletCacheEntry
   */
  receivedAtMS?: number;
  /**
   *
   * @type {string}
   * @memberof LolInventoryWalletCacheEntry
   */
  signedBalancesJwt?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolInventoryWalletCacheEntry
   */
  valid?: boolean;
}
/**
 *
 * @export
 * @interface LolInventoryWalletDTO
 */
export interface LolInventoryWalletDTO {
  /**
   *
   * @type {number}
   * @memberof LolInventoryWalletDTO
   */
  accountId?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolInventoryWalletDTO
   */
  balances?: { [key: string]: number };
  /**
   *
   * @type {string}
   * @memberof LolInventoryWalletDTO
   */
  balancesJwt?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryWalletDTO
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolInventoryWalletDTO
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolInventoryWalletResponseDTO
 */
export interface LolInventoryWalletResponseDTO {
  /**
   *
   * @type {LolInventoryWalletDTO}
   * @memberof LolInventoryWalletResponseDTO
   */
  data?: LolInventoryWalletDTO;
}
/**
 *
 * @export
 * @interface LolItemSetsGameDataChampion
 */
export interface LolItemSetsGameDataChampion {
  /**
   *
   * @type {string}
   * @memberof LolItemSetsGameDataChampion
   */
  alias?: string;
}
/**
 *
 * @export
 * @interface LolItemSetsItemSet
 */
export interface LolItemSetsItemSet {
  /**
   *
   * @type {Array<number>}
   * @memberof LolItemSetsItemSet
   */
  associatedChampions?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolItemSetsItemSet
   */
  associatedMaps?: Array<number>;
  /**
   *
   * @type {Array<LolItemSetsItemSetBlock>}
   * @memberof LolItemSetsItemSet
   */
  blocks?: Array<LolItemSetsItemSetBlock>;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSet
   */
  map?: string;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSet
   */
  mode?: string;
  /**
   *
   * @type {Array<LolItemSetsPreferredItemSlot>}
   * @memberof LolItemSetsItemSet
   */
  preferredItemSlots?: Array<LolItemSetsPreferredItemSlot>;
  /**
   *
   * @type {number}
   * @memberof LolItemSetsItemSet
   */
  sortrank?: number;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSet
   */
  startedFrom?: string;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSet
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSet
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSet
   */
  uid?: string;
}
/**
 *
 * @export
 * @interface LolItemSetsItemSetBlock
 */
export interface LolItemSetsItemSetBlock {
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSetBlock
   */
  hideIfSummonerSpell?: string;
  /**
   *
   * @type {Array<LolItemSetsItemSetItem>}
   * @memberof LolItemSetsItemSetBlock
   */
  items?: Array<LolItemSetsItemSetItem>;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSetBlock
   */
  showIfSummonerSpell?: string;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSetBlock
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolItemSetsItemSetItem
 */
export interface LolItemSetsItemSetItem {
  /**
   *
   * @type {number}
   * @memberof LolItemSetsItemSetItem
   */
  count?: number;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsItemSetItem
   */
  id?: string;
}
/**
 *
 * @export
 * @interface LolItemSetsItemSets
 */
export interface LolItemSetsItemSets {
  /**
   *
   * @type {number}
   * @memberof LolItemSetsItemSets
   */
  accountId?: number;
  /**
   *
   * @type {Array<LolItemSetsItemSet>}
   * @memberof LolItemSetsItemSets
   */
  itemSets?: Array<LolItemSetsItemSet>;
  /**
   *
   * @type {number}
   * @memberof LolItemSetsItemSets
   */
  timestamp?: number;
}
/**
 *
 * @export
 * @interface LolItemSetsLoginSession
 */
export interface LolItemSetsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolItemSetsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolItemSetsLoginSessionStates}
   * @memberof LolItemSetsLoginSession
   */
  state?: LolItemSetsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolItemSetsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolItemSetsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolItemSetsNameCheckPayload
 */
export interface LolItemSetsNameCheckPayload {
  /**
   *
   * @type {string}
   * @memberof LolItemSetsNameCheckPayload
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolItemSetsNameCheckPayload
   */
  shard?: string;
}
/**
 *
 * @export
 * @interface LolItemSetsNameCheckResponse
 */
export interface LolItemSetsNameCheckResponse {
  /**
   *
   * @type {Array<string>}
   * @memberof LolItemSetsNameCheckResponse
   */
  errors?: Array<string>;
}
/**
 *
 * @export
 * @interface LolItemSetsPreferredItemSlot
 */
export interface LolItemSetsPreferredItemSlot {
  /**
   *
   * @type {string}
   * @memberof LolItemSetsPreferredItemSlot
   */
  id?: string;
  /**
   *
   * @type {number}
   * @memberof LolItemSetsPreferredItemSlot
   */
  preferredItemSlot?: number;
}
/**
 *
 * @export
 * @interface LolItemSetsValidateItemSetNameInput
 */
export interface LolItemSetsValidateItemSetNameInput {
  /**
   *
   * @type {string}
   * @memberof LolItemSetsValidateItemSetNameInput
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolItemSetsValidateItemSetNameResponse
 */
export interface LolItemSetsValidateItemSetNameResponse {
  /**
   *
   * @type {LolItemSetsNameCheckResponse}
   * @memberof LolItemSetsValidateItemSetNameResponse
   */
  nameCheckResponse?: LolItemSetsNameCheckResponse;
  /**
   *
   * @type {boolean}
   * @memberof LolItemSetsValidateItemSetNameResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolKickoutKickoutMessage
 */
export interface LolKickoutKickoutMessage {
  /**
   *
   * @type {string}
   * @memberof LolKickoutKickoutMessage
   */
  message?: string;
}
/**
 *
 * @export
 * @interface LolKrPlaytimeReminderPlaytimeReminder
 */
export interface LolKrPlaytimeReminderPlaytimeReminder {
  /**
   *
   * @type {number}
   * @memberof LolKrPlaytimeReminderPlaytimeReminder
   */
  hours?: number;
}
/**
 *
 * @export
 * @interface LolKrShutdownLawAllQueueShutdownStatus
 */
export interface LolKrShutdownLawAllQueueShutdownStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolKrShutdownLawAllQueueShutdownStatus
   */
  isAllQueuesDisabled?: boolean;
}
/**
 *
 * @export
 * @interface LolKrShutdownLawAntiAddictionState
 */
export interface LolKrShutdownLawAntiAddictionState {
  /**
   *
   * @type {LolKrShutdownLawPolicyType}
   * @memberof LolKrShutdownLawAntiAddictionState
   */
  policyType?: LolKrShutdownLawPolicyType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolKrShutdownLawPolicyType {
  Shutdown = 'shutdown',
  PlayTime = 'playTime',
  WarningMessage = 'warningMessage',
  DisableMatchMaking = 'disableMatchMaking',
}

/**
 *
 * @export
 * @interface LolKrShutdownLawQueueShutdownStatus
 */
export interface LolKrShutdownLawQueueShutdownStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolKrShutdownLawQueueShutdownStatus
   */
  isDisabled?: boolean;
}
/**
 *
 * @export
 * @interface LolKrShutdownLawRatingScreenInfo
 */
export interface LolKrShutdownLawRatingScreenInfo {
  /**
   *
   * @type {boolean}
   * @memberof LolKrShutdownLawRatingScreenInfo
   */
  shown?: boolean;
}
/**
 *
 * @export
 * @interface LolKrShutdownLawShutdownLawNotification
 */
export interface LolKrShutdownLawShutdownLawNotification {
  /**
   *
   * @type {LolKrShutdownLawShutdownLawStatus}
   * @memberof LolKrShutdownLawShutdownLawNotification
   */
  type?: LolKrShutdownLawShutdownLawStatus;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolKrShutdownLawShutdownLawStatus {
  NONE = 'NONE',
  WARNING = 'WARNING',
  CUTOFF = 'CUT_OFF',
}

/**
 *
 * @export
 * @interface LolLeagueSessionLeagueSessionRMSNotification
 */
export interface LolLeagueSessionLeagueSessionRMSNotification {
  /**
   *
   * @type {string}
   * @memberof LolLeagueSessionLeagueSessionRMSNotification
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolLeagueSessionLeagueSessionRMSNotification
   */
  sessionId?: string;
  /**
   *
   * @type {number}
   * @memberof LolLeagueSessionLeagueSessionRMSNotification
   */
  sessionInitiatedAt?: number;
  /**
   *
   * @type {string}
   * @memberof LolLeagueSessionLeagueSessionRMSNotification
   */
  state?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLeagueSessionLeagueSessionStatus {
  UNINITIALIZED = 'UNINITIALIZED',
  INITIALIZED = 'INITIALIZED',
  EXPIRED = 'EXPIRED',
  DUPLICATED = 'DUPLICATED',
}

/**
 *
 * @export
 * @interface LolLeagueSessionLeagueSessionTokenEnvelope
 */
export interface LolLeagueSessionLeagueSessionTokenEnvelope {
  /**
   *
   * @type {boolean}
   * @memberof LolLeagueSessionLeagueSessionTokenEnvelope
   */
  logoutOnFailure?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLeagueSessionLeagueSessionTokenEnvelope
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolLeaverBusterAllSummonerData
 */
export interface LolLeaverBusterAllSummonerData {
  /**
   *
   * @type {LolLeaverBusterSummoner}
   * @memberof LolLeaverBusterAllSummonerData
   */
  summoner?: LolLeaverBusterSummoner;
}
/**
 *
 * @export
 * @interface LolLeaverBusterLeaverBusterNotificationResource
 */
export interface LolLeaverBusterLeaverBusterNotificationResource {
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterLeaverBusterNotificationResource
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterLeaverBusterNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterLeaverBusterNotificationResource
   */
  msgId?: string;
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterLeaverBusterNotificationResource
   */
  punishedGamesRemaining?: number;
  /**
   *
   * @type {LolLeaverBusterLeaverBusterNotificationType}
   * @memberof LolLeaverBusterLeaverBusterNotificationResource
   */
  type?: LolLeaverBusterLeaverBusterNotificationType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLeaverBusterLeaverBusterNotificationType {
  Invalid = 'Invalid',
  TaintedWarning = 'TaintedWarning',
  PunishmentIncurred = 'PunishmentIncurred',
  PunishedGamesRemaining = 'PunishedGamesRemaining',
  Reforming = 'Reforming',
}

/**
 *
 * @export
 * @interface LolLeaverBusterLoginDataPacket
 */
export interface LolLeaverBusterLoginDataPacket {
  /**
   *
   * @type {LolLeaverBusterAllSummonerData}
   * @memberof LolLeaverBusterLoginDataPacket
   */
  allSummonerData?: LolLeaverBusterAllSummonerData;
  /**
   *
   * @type {Array<LolLeaverBusterSimpleMessage>}
   * @memberof LolLeaverBusterLoginDataPacket
   */
  simpleMessages?: Array<LolLeaverBusterSimpleMessage>;
}
/**
 *
 * @export
 * @interface LolLeaverBusterMatchmakingSearchErrorResource
 */
export interface LolLeaverBusterMatchmakingSearchErrorResource {
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterMatchmakingSearchErrorResource
   */
  errorType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterMatchmakingSearchErrorResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterMatchmakingSearchErrorResource
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterMatchmakingSearchErrorResource
   */
  penalizedSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterMatchmakingSearchErrorResource
   */
  penaltyTimeRemaining?: number;
}
/**
 *
 * @export
 * @interface LolLeaverBusterMatchmakingSearchResource
 */
export interface LolLeaverBusterMatchmakingSearchResource {
  /**
   *
   * @type {Array<LolLeaverBusterMatchmakingSearchErrorResource>}
   * @memberof LolLeaverBusterMatchmakingSearchResource
   */
  errors?: Array<LolLeaverBusterMatchmakingSearchErrorResource>;
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterMatchmakingSearchResource
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLeaverBusterPlayerNotificationResource
 */
export interface LolLeaverBusterPlayerNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  created?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  detailKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterPlayerNotificationResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolLeaverBusterSimpleMessage
 */
export interface LolLeaverBusterSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLeaverBusterSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLeaverBusterSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolLeaverBusterSummoner
 */
export interface LolLeaverBusterSummoner {
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterSummoner
   */
  acctId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLeaverBusterSummoner
   */
  sumId?: number;
}
/**
 *
 * @export
 * @interface LolLicenseAgreementLicenseAgreement
 */
export interface LolLicenseAgreementLicenseAgreement {
  /**
   *
   * @type {string}
   * @memberof LolLicenseAgreementLicenseAgreement
   */
  id?: string;
  /**
   *
   * @type {LolLicenseAgreementLicenseAgreementType}
   * @memberof LolLicenseAgreementLicenseAgreement
   */
  licenseType?: LolLicenseAgreementLicenseAgreementType;
  /**
   *
   * @type {string}
   * @memberof LolLicenseAgreementLicenseAgreement
   */
  text?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLicenseAgreementLicenseAgreementType {
  PrivacyNotice = 'PrivacyNotice',
  TermsOfUse = 'TermsOfUse',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolLicenseAgreementLicenseServeLocation {
  Preparing = 'Preparing',
  Local = 'Local',
  External = 'External',
}

/**
 *
 * @export
 * @interface LolLicenseAgreementPluginRegionLocaleChangedEvent
 */
export interface LolLicenseAgreementPluginRegionLocaleChangedEvent {
  /**
   *
   * @type {string}
   * @memberof LolLicenseAgreementPluginRegionLocaleChangedEvent
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolLicenseAgreementPluginRegionLocaleChangedEvent
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolLoadoutsAccessTokenResource
 */
export interface LolLoadoutsAccessTokenResource {
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsAccessTokenResource
   */
  expiry?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLoadoutsAccessTokenResource
   */
  scopes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsAccessTokenResource
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolLoadoutsCreateLoadoutDTO
 */
export interface LolLoadoutsCreateLoadoutDTO {
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsCreateLoadoutDTO
   */
  itemId?: number;
  /**
   *
   * @type {{ [key: string]: LolLoadoutsItemKey; }}
   * @memberof LolLoadoutsCreateLoadoutDTO
   */
  loadout?: { [key: string]: LolLoadoutsItemKey };
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsCreateLoadoutDTO
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsCreateLoadoutDTO
   */
  refreshTime?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsCreateLoadoutDTO
   */
  scope?: string;
}
/**
 *
 * @export
 * @interface LolLoadoutsCreateLoadoutRequestDTO
 */
export interface LolLoadoutsCreateLoadoutRequestDTO {
  /**
   *
   * @type {LolLoadoutsCreateLoadoutDTO}
   * @memberof LolLoadoutsCreateLoadoutRequestDTO
   */
  loadout?: LolLoadoutsCreateLoadoutDTO;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLoadoutsCreateLoadoutRequestDTO
   */
  serviceToJwtsMap?: { [key: string]: object };
}
/**
 *
 * @export
 * @interface LolLoadoutsCreateOrUpdateItemsRequest
 */
export interface LolLoadoutsCreateOrUpdateItemsRequest {
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsCreateOrUpdateItemsRequest
   */
  id?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLoadoutsCreateOrUpdateItemsRequest
   */
  inventoryJWTs?: Array<string>;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLoadoutsCreateOrUpdateItemsRequest
   */
  items?: { [key: string]: object };
}
/**
 *
 * @export
 * @interface LolLoadoutsFrontendInventoryResponse
 */
export interface LolLoadoutsFrontendInventoryResponse {
  /**
   *
   * @type {Array<LolLoadoutsItemKey>}
   * @memberof LolLoadoutsFrontendInventoryResponse
   */
  entitlements?: Array<LolLoadoutsItemKey>;
}
/**
 *
 * @export
 * @interface LolLoadoutsGameflowGameData
 */
export interface LolLoadoutsGameflowGameData {
  /**
   *
   * @type {LolLoadoutsQueue}
   * @memberof LolLoadoutsGameflowGameData
   */
  queue?: LolLoadoutsQueue;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoadoutsGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolLoadoutsGameflowSession
 */
export interface LolLoadoutsGameflowSession {
  /**
   *
   * @type {LolLoadoutsGameflowGameData}
   * @memberof LolLoadoutsGameflowSession
   */
  gameData?: LolLoadoutsGameflowGameData;
  /**
   *
   * @type {LolLoadoutsGameflowPhase}
   * @memberof LolLoadoutsGameflowSession
   */
  phase?: LolLoadoutsGameflowPhase;
}
/**
 *
 * @export
 * @interface LolLoadoutsGetItemsRequest
 */
export interface LolLoadoutsGetItemsRequest {
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsGetItemsRequest
   */
  id?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLoadoutsGetItemsRequest
   */
  inventoryJWTs?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLoadoutsGetItemsRequest
   */
  inventoryTypes?: Array<string>;
}
/**
 *
 * @export
 * @interface LolLoadoutsInventoryDTO
 */
export interface LolLoadoutsInventoryDTO {
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsInventoryDTO
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryDTO
   */
  expires?: string;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLoadoutsInventoryDTO
   */
  items?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryDTO
   */
  itemsJwt?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryDTO
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsInventoryDTO
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLoadoutsInventoryItemDTO
 */
export interface LolLoadoutsInventoryItemDTO {
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  entitlementId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  entitlementTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  expirationDate?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  f2p?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  instanceId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  instanceTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  itemId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  lsb?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  quantity?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  rental?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  usedInGameDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsInventoryItemDTO
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LolLoadoutsInventoryResponseDTO
 */
export interface LolLoadoutsInventoryResponseDTO {
  /**
   *
   * @type {LolLoadoutsInventoryDTO}
   * @memberof LolLoadoutsInventoryResponseDTO
   */
  data?: LolLoadoutsInventoryDTO;
}
/**
 *
 * @export
 * @interface LolLoadoutsItemKey
 */
export interface LolLoadoutsItemKey {
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsItemKey
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsItemKey
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsItemKey
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolLoadoutsLoadout
 */
export interface LolLoadoutsLoadout {
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsLoadout
   */
  id?: number;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLoadoutsLoadout
   */
  items?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsLoadout
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolLoadoutsLoadoutRequestDTOBase
 */
export interface LolLoadoutsLoadoutRequestDTOBase {
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLoadoutsLoadoutRequestDTOBase
   */
  serviceToJwtsMap?: { [key: string]: object };
}
/**
 *
 * @export
 * @interface LolLoadoutsLoginSession
 */
export interface LolLoadoutsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof LolLoadoutsLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolLoadoutsLoginSessionStates}
   * @memberof LolLoadoutsLoginSession
   */
  state?: LolLoadoutsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoadoutsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolLoadoutsQueue
 */
export interface LolLoadoutsQueue {
  /**
   *
   * @type {boolean}
   * @memberof LolLoadoutsQueue
   */
  isTeamBuilderManaged?: boolean;
}
/**
 *
 * @export
 * @interface LolLoadoutsScopedLoadout
 */
export interface LolLoadoutsScopedLoadout {
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsScopedLoadout
   */
  id?: string;
  /**
   *
   * @type {number}
   * @memberof LolLoadoutsScopedLoadout
   */
  itemId?: number;
  /**
   *
   * @type {{ [key: string]: LolLoadoutsItemKey; }}
   * @memberof LolLoadoutsScopedLoadout
   */
  loadout?: { [key: string]: LolLoadoutsItemKey };
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsScopedLoadout
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsScopedLoadout
   */
  refreshTime?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsScopedLoadout
   */
  scope?: string;
}
/**
 *
 * @export
 * @interface LolLoadoutsSignGCORequestDTO
 */
export interface LolLoadoutsSignGCORequestDTO {
  /**
   *
   * @type {{ [key: string]: LolLoadoutsItemKey; }}
   * @memberof LolLoadoutsSignGCORequestDTO
   */
  loadout?: { [key: string]: LolLoadoutsItemKey };
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLoadoutsSignGCORequestDTO
   */
  serviceToJwtsMap?: { [key: string]: object };
}
/**
 *
 * @export
 * @interface LolLoadoutsUpdateLoadoutDTO
 */
export interface LolLoadoutsUpdateLoadoutDTO {
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsUpdateLoadoutDTO
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: LolLoadoutsItemKey; }}
   * @memberof LolLoadoutsUpdateLoadoutDTO
   */
  loadout?: { [key: string]: LolLoadoutsItemKey };
  /**
   *
   * @type {string}
   * @memberof LolLoadoutsUpdateLoadoutDTO
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolLoadoutsUpdateLoadoutRequestDTO
 */
export interface LolLoadoutsUpdateLoadoutRequestDTO {
  /**
   *
   * @type {LolLoadoutsUpdateLoadoutDTO}
   * @memberof LolLoadoutsUpdateLoadoutRequestDTO
   */
  loadout?: LolLoadoutsUpdateLoadoutDTO;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLoadoutsUpdateLoadoutRequestDTO
   */
  serviceToJwtsMap?: { [key: string]: object };
}
/**
 *
 * @export
 * @interface LolLobbyAmbassadorMessage
 */
export interface LolLobbyAmbassadorMessage {
  /**
   *
   * @type {string}
   * @memberof LolLobbyAmbassadorMessage
   */
  errorCode?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyAmbassadorMessage
   */
  httpStatus?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyAmbassadorMessage
   */
  implementationDetails?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyAmbassadorMessage
   */
  message?: string;
  /**
   *
   * @type {object}
   * @memberof LolLobbyAmbassadorMessage
   */
  payload?: object;
}
/**
 *
 * @export
 * @interface LolLobbyAutoFillQueueDto
 */
export interface LolLobbyAutoFillQueueDto {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyAutoFillQueueDto
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyAutoFillQueueDto
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyAutoFillQueueDto
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyAutoFillQueueDto
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyChampionSkinSelection
 */
export interface LolLobbyChampionSkinSelection {
  /**
   *
   * @type {number}
   * @memberof LolLobbyChampionSkinSelection
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChampionSkinSelection
   */
  skinId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyChatBlockedPlayerResource
 */
export interface LolLobbyChatBlockedPlayerResource {
  /**
   *
   * @type {string}
   * @memberof LolLobbyChatBlockedPlayerResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatBlockedPlayerResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyChatFriend
 */
export interface LolLobbyChatFriend {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolLobbyChatFriend
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriend
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyChatFriendCounts
 */
export interface LolLobbyChatFriendCounts {
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriendCounts
   */
  numFriends?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriendCounts
   */
  numFriendsAvailable?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriendCounts
   */
  numFriendsAway?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriendCounts
   */
  numFriendsInChampSelect?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriendCounts
   */
  numFriendsInGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriendCounts
   */
  numFriendsInQueue?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriendCounts
   */
  numFriendsMobile?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyChatFriendCounts
   */
  numFriendsOnline?: number;
}
/**
 *
 * @export
 * @interface LolLobbyCollectionsChampion
 */
export interface LolLobbyCollectionsChampion {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyCollectionsChampion
   */
  active?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyCollectionsChampion
   */
  botEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyCollectionsChampion
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyCollectionsChampion
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolLobbyCollectionsChampionMinimal
 */
export interface LolLobbyCollectionsChampionMinimal {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyCollectionsChampionMinimal
   */
  active?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyCollectionsChampionMinimal
   */
  disabledQueues?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyCollectionsChampionMinimal
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyCollectionsChampionMinimal
   */
  id?: number;
  /**
   *
   * @type {LolLobbyCollectionsOwnership}
   * @memberof LolLobbyCollectionsChampionMinimal
   */
  ownership?: LolLobbyCollectionsOwnership;
}
/**
 *
 * @export
 * @interface LolLobbyCollectionsOwnership
 */
export interface LolLobbyCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyCollectionsOwnership
   */
  owned?: boolean;
  /**
   *
   * @type {object}
   * @memberof LolLobbyCollectionsOwnership
   */
  rental?: object;
}
/**
 *
 * @export
 * @interface LolLobbyCustomEligibilityDto
 */
export interface LolLobbyCustomEligibilityDto {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyCustomEligibilityDto
   */
  eligible?: boolean;
  /**
   *
   * @type {Array<LolLobbyGatekeeperRestrictionDto>}
   * @memberof LolLobbyCustomEligibilityDto
   */
  restrictions?: Array<LolLobbyGatekeeperRestrictionDto>;
}
/**
 *
 * @export
 * @interface LolLobbyEligibility
 */
export interface LolLobbyEligibility {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyEligibility
   */
  eligible?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyEligibility
   */
  queueId?: number;
  /**
   *
   * @type {Array<LolLobbyEligibilityRestriction>}
   * @memberof LolLobbyEligibility
   */
  restrictions?: Array<LolLobbyEligibilityRestriction>;
}
/**
 *
 * @export
 * @interface LolLobbyEligibilityRestriction
 */
export interface LolLobbyEligibilityRestriction {
  /**
   *
   * @type {number}
   * @memberof LolLobbyEligibilityRestriction
   */
  expiredTimestamp?: number;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolLobbyEligibilityRestriction
   */
  restrictionArgs?: { [key: string]: string };
  /**
   *
   * @type {LolLobbyEligibilityRestrictionCode}
   * @memberof LolLobbyEligibilityRestriction
   */
  restrictionCode?: LolLobbyEligibilityRestrictionCode;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyEligibilityRestriction
   */
  summonerIds?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyEligibilityRestriction
   */
  summonerIdsString?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyEligibilityRestrictionCode {
  QueueDisabled = 'QueueDisabled',
  QueueUnsupported = 'QueueUnsupported',
  PlayerLevelRestriction = 'PlayerLevelRestriction',
  PlayerTimedRestriction = 'PlayerTimedRestriction',
  PlayerBannedRestriction = 'PlayerBannedRestriction',
  PlayerAvailableChampionRestriction = 'PlayerAvailableChampionRestriction',
  TeamDivisionRestriction = 'TeamDivisionRestriction',
  TeamMaxSizeRestriction = 'TeamMaxSizeRestriction',
  TeamMinSizeRestriction = 'TeamMinSizeRestriction',
  PlayerBingeRestriction = 'PlayerBingeRestriction',
  PlayerDodgeRestriction = 'PlayerDodgeRestriction',
  PlayerInGameRestriction = 'PlayerInGameRestriction',
  PlayerLeaverBustedRestriction = 'PlayerLeaverBustedRestriction',
  PlayerLeaverTaintedWarningRestriction = 'PlayerLeaverTaintedWarningRestriction',
  PlayerMaxLevelRestriction = 'PlayerMaxLevelRestriction',
  PlayerMinLevelRestriction = 'PlayerMinLevelRestriction',
  PlayerMinorRestriction = 'PlayerMinorRestriction',
  PlayerTimePlayedRestriction = 'PlayerTimePlayedRestriction',
  PlayerRankedSuspensionRestriction = 'PlayerRankedSuspensionRestriction',
  TeamHighMMRMaxSizeRestriction = 'TeamHighMMRMaxSizeRestriction',
  TeamSizeRestriction = 'TeamSizeRestriction',
  PrerequisiteQueuesNotPlayedRestriction = 'PrerequisiteQueuesNotPlayedRestriction',
  GameVersionMismatch = 'GameVersionMismatch',
  GameVersionMissing = 'GameVersionMissing',
  GameVersionNotSupported = 'GameVersionNotSupported',
  QueueEntryNotEntitledRestriction = 'QueueEntryNotEntitledRestriction',
  UnknownRestriction = 'UnknownRestriction',
  BanInfoNotAvailable = 'BanInfoNotAvailable',
  MinorInfoNotAvailable = 'MinorInfoNotAvailable',
  SummonerInfoNotAvailable = 'SummonerInfoNotAvailable',
  LeaguesInfoNotAvailable = 'LeaguesInfoNotAvailable',
  InventoryChampsInfoNotAvailable = 'InventoryChampsInfoNotAvailable',
  InventoryQueuesInfoNotAvailable = 'InventoryQueuesInfoNotAvailable',
}

/**
 *
 * @export
 * @interface LolLobbyFriendAvailabilityAnalytics
 */
export interface LolLobbyFriendAvailabilityAnalytics {
  /**
   *
   * @type {object}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  eventData?: object;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  eventTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  eventType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  numFriends?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  numFriendsAvailable?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  numFriendsAway?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  numFriendsInChampSelect?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  numFriendsInGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  numFriendsInQueue?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  numFriendsMobile?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  numFriendsOnline?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  partyType?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyFriendAvailabilityAnalytics
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyGameDataChampionSummary
 */
export interface LolLobbyGameDataChampionSummary {
  /**
   *
   * @type {string}
   * @memberof LolLobbyGameDataChampionSummary
   */
  alias?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyGameDataChampionSummary
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LolLobbyGameModeDto
 */
export interface LolLobbyGameModeDto {
  /**
   *
   * @type {string}
   * @memberof LolLobbyGameModeDto
   */
  botDifficulty?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolLobbyGameModeDto
   */
  gameCustomization?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolLobbyGameModeDto
   */
  gameType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyGameModeDto
   */
  maxPartySize?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyGameModeDto
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyGameflowGameClient
 */
export interface LolLobbyGameflowGameClient {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyGameflowGameClient
   */
  running?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyGameflowGameData
 */
export interface LolLobbyGameflowGameData {
  /**
   *
   * @type {LolLobbyQueue}
   * @memberof LolLobbyGameflowGameData
   */
  queue?: LolLobbyQueue;
}
/**
 *
 * @export
 * @interface LolLobbyGameflowGameDodge
 */
export interface LolLobbyGameflowGameDodge {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyGameflowGameDodge
   */
  dodgeIds?: Array<number>;
  /**
   *
   * @type {LolLobbyGameflowPhase}
   * @memberof LolLobbyGameflowGameDodge
   */
  phase?: LolLobbyGameflowPhase;
  /**
   *
   * @type {LolLobbyMatchmakingDodgeState}
   * @memberof LolLobbyGameflowGameDodge
   */
  state?: LolLobbyMatchmakingDodgeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolLobbyGameflowSession
 */
export interface LolLobbyGameflowSession {
  /**
   *
   * @type {LolLobbyGameflowGameClient}
   * @memberof LolLobbyGameflowSession
   */
  gameClient?: LolLobbyGameflowGameClient;
  /**
   *
   * @type {LolLobbyGameflowGameData}
   * @memberof LolLobbyGameflowSession
   */
  gameData?: LolLobbyGameflowGameData;
  /**
   *
   * @type {LolLobbyGameflowGameDodge}
   * @memberof LolLobbyGameflowSession
   */
  gameDodge?: LolLobbyGameflowGameDodge;
  /**
   *
   * @type {LolLobbyGameflowPhase}
   * @memberof LolLobbyGameflowSession
   */
  phase?: LolLobbyGameflowPhase;
}
/**
 *
 * @export
 * @interface LolLobbyGatekeeperRestrictionDto
 */
export interface LolLobbyGatekeeperRestrictionDto {
  /**
   *
   * @type {number}
   * @memberof LolLobbyGatekeeperRestrictionDto
   */
  accountId?: number;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolLobbyGatekeeperRestrictionDto
   */
  details?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolLobbyGatekeeperRestrictionDto
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyGatekeeperRestrictionDto
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyGatekeeperRestrictionDto
   */
  queueId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyGatekeeperRestrictionDto
   */
  reason?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyGatekeeperRestrictionDto
   */
  remainingMillis?: number;
}
/**
 *
 * @export
 * @interface LolLobbyInventoryCacheEntry
 */
export interface LolLobbyInventoryCacheEntry {
  /**
   *
   * @type {number}
   * @memberof LolLobbyInventoryCacheEntry
   */
  expirationMS?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyInventoryCacheEntry
   */
  signedInventoryJwt?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyInventoryCacheEntry
   */
  valid?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyInventoryItem
 */
export interface LolLobbyInventoryItem {
  /**
   *
   * @type {number}
   * @memberof LolLobbyInventoryItem
   */
  itemId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyInvitationType {
  Invalid = 'invalid',
  Lobby = 'lobby',
  Party = 'party',
}

/**
 *
 * @export
 * @interface LolLobbyJoinPartyAnalytics
 */
export interface LolLobbyJoinPartyAnalytics {
  /**
   *
   * @type {object}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  eventData?: object;
  /**
   *
   * @type {number}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  eventTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  eventType?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  gameMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  numFriendsOnline?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  numOpenFriends?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  numOpenParties?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  numOtherInvites?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  numPartyInvites?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  numTotalInvites?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  partyId?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  partySize?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyJoinPartyAnalytics
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLcdsDynamicClientConfig
 */
export interface LolLobbyLcdsDynamicClientConfig {
  /**
   *
   * @type {LolLobbyLcdsPartyRewardsConfig}
   * @memberof LolLobbyLcdsDynamicClientConfig
   */
  PartyRewards?: LolLobbyLcdsPartyRewardsConfig;
}
/**
 *
 * @export
 * @interface LolLobbyLcdsGameMetaData
 */
export interface LolLobbyLcdsGameMetaData {
  /**
   *
   * @type {number}
   * @memberof LolLobbyLcdsGameMetaData
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLcdsGameMetaData
   */
  mapId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyLcdsPartyRewardsConfig
 */
export interface LolLobbyLcdsPartyRewardsConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLcdsPartyRewardsConfig
   */
  Enabled?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyLobby
 */
export interface LolLobbyLobby {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyLobby
   */
  allowablePremadeSizes?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  canStartMatchmaking?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobby
   */
  chatRoomId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobby
   */
  chatRoomKey?: string;
  /**
   *
   * @type {LolLobbyLobbyCustomGameLobby}
   * @memberof LolLobbyLobby
   */
  customGameLobby?: LolLobbyLobbyCustomGameLobby;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobby
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobby
   */
  invitationId?: string;
  /**
   *
   * @type {Array<LolLobbyLobbyInvitation>}
   * @memberof LolLobbyLobby
   */
  invitations?: Array<LolLobbyLobbyInvitation>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  isCustom?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  isTeamBuilderManaged?: boolean;
  /**
   *
   * @type {LolLobbyLobbyMember}
   * @memberof LolLobbyLobby
   */
  localMember?: LolLobbyLobbyMember;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobby
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobby
   */
  maximumParticipantListSize?: number;
  /**
   *
   * @type {Array<LolLobbyLobbyMember>}
   * @memberof LolLobbyLobby
   */
  members?: Array<LolLobbyLobbyMember>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  premadeSizeAllowed?: boolean;
  /**
   *
   * @type {LolLobbyQueueAvailability}
   * @memberof LolLobbyLobby
   */
  queueAvailability?: LolLobbyQueueAvailability;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobby
   */
  queueId?: number;
  /**
   *
   * @type {LolLobbyLobbyRemovedFromGameReason}
   * @memberof LolLobbyLobby
   */
  removalReason?: LolLobbyLobbyRemovedFromGameReason;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  requiredPositionCoverageMet?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  showPositionExcluder?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  showPositionSelector?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyLobby
   */
  specifiablePositionPreferences?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobby
   */
  wasKicked?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyBotChampion
 */
export interface LolLobbyLobbyBotChampion {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyBotChampion
   */
  active?: boolean;
  /**
   *
   * @type {Array<LolLobbyLobbyBotDifficulty>}
   * @memberof LolLobbyLobbyBotChampion
   */
  botDifficulties?: Array<LolLobbyLobbyBotDifficulty>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyBotChampion
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyBotChampion
   */
  name?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyLobbyBotDifficulty {
  NONE = 'NONE',
  EASY = 'EASY',
  MEDIUM = 'MEDIUM',
  HARD = 'HARD',
  UBER = 'UBER',
  TUTORIAL = 'TUTORIAL',
  INTRO = 'INTRO',
}

/**
 *
 * @export
 * @interface LolLobbyLobbyBotParams
 */
export interface LolLobbyLobbyBotParams {
  /**
   *
   * @type {LolLobbyLobbyBotDifficulty}
   * @memberof LolLobbyLobbyBotParams
   */
  botDifficulty?: LolLobbyLobbyBotDifficulty;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyBotParams
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyBotParams
   */
  teamId?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyChangeGameDto
 */
export interface LolLobbyLobbyChangeGameDto {
  /**
   *
   * @type {LolLobbyLobbyCustomGameLobby}
   * @memberof LolLobbyLobbyChangeGameDto
   */
  customGameLobby?: LolLobbyLobbyCustomGameLobby;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolLobbyLobbyChangeGameDto
   */
  gameCustomization?: { [key: string]: string };
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyChangeGameDto
   */
  isCustom?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyChangeGameDto
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyChangeQueue
 */
export interface LolLobbyLobbyChangeQueue {
  /**
   *
   * @type {LolLobbyLobbyCustomGameLobby}
   * @memberof LolLobbyLobbyChangeQueue
   */
  customGameLobby?: LolLobbyLobbyCustomGameLobby;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyChangeQueue
   */
  isCustom?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyChangeQueue
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyCustomChampSelectStartResponse
 */
export interface LolLobbyLobbyCustomChampSelectStartResponse {
  /**
   *
   * @type {Array<LolLobbyLobbyCustomFailedPlayer>}
   * @memberof LolLobbyLobbyCustomChampSelectStartResponse
   */
  failedPlayers?: Array<LolLobbyLobbyCustomFailedPlayer>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyCustomChampSelectStartResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyCustomFailedPlayer
 */
export interface LolLobbyLobbyCustomFailedPlayer {
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomFailedPlayer
   */
  reason?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomFailedPlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomFailedPlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyCustomGame
 */
export interface LolLobbyLobbyCustomGame {
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGame
   */
  filledPlayerSlots?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGame
   */
  filledSpectatorSlots?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGame
   */
  gameType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyCustomGame
   */
  hasPassword?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGame
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGame
   */
  lobbyName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGame
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGame
   */
  maxPlayerSlots?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGame
   */
  maxSpectatorSlots?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGame
   */
  ownerSummonerName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGame
   */
  passbackUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGame
   */
  spectatorPolicy?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyCustomGameConfiguration
 */
export interface LolLobbyLobbyCustomGameConfiguration {
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  gameServerRegion?: string;
  /**
   *
   * @type {LolLobbyQueueGameTypeConfig}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  gameTypeConfig?: LolLobbyQueueGameTypeConfig;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  maxPlayerCount?: number;
  /**
   *
   * @type {LolLobbyQueueGameTypeConfig}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  mutators?: LolLobbyQueueGameTypeConfig;
  /**
   *
   * @type {LolLobbyQueueCustomGameSpectatorPolicy}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  spectatorPolicy?: LolLobbyQueueCustomGameSpectatorPolicy;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  teamSize?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  tournamentGameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  tournamentPassbackDataPacket?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGameConfiguration
   */
  tournamentPassbackUrl?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyCustomGameLobby
 */
export interface LolLobbyLobbyCustomGameLobby {
  /**
   *
   * @type {LolLobbyLobbyCustomGameConfiguration}
   * @memberof LolLobbyLobbyCustomGameLobby
   */
  configuration?: LolLobbyLobbyCustomGameConfiguration;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyCustomGameLobby
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGameLobby
   */
  lobbyName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomGameLobby
   */
  lobbyPassword?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyLobbyCustomGameLobby
   */
  practiceGameRewardsDisabledReasons?: Array<string>;
  /**
   *
   * @type {Array<LolLobbyLobbyMember>}
   * @memberof LolLobbyLobbyCustomGameLobby
   */
  spectators?: Array<LolLobbyLobbyMember>;
  /**
   *
   * @type {Array<LolLobbyLobbyMember>}
   * @memberof LolLobbyLobbyCustomGameLobby
   */
  teamOne?: Array<LolLobbyLobbyMember>;
  /**
   *
   * @type {Array<LolLobbyLobbyMember>}
   * @memberof LolLobbyLobbyCustomGameLobby
   */
  teamTwo?: Array<LolLobbyLobbyMember>;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyCustomJoinParameters
 */
export interface LolLobbyLobbyCustomJoinParameters {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyCustomJoinParameters
   */
  asSpectator?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyCustomJoinParameters
   */
  password?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyDto
 */
export interface LolLobbyLobbyDto {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyDto
   */
  canStartActivity?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyDto
   */
  chatRoomId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyDto
   */
  chatRoomKey?: string;
  /**
   *
   * @type {LolLobbyLobbyGameConfigDto}
   * @memberof LolLobbyLobbyDto
   */
  gameConfig?: LolLobbyLobbyGameConfigDto;
  /**
   *
   * @type {Array<LolLobbyLobbyInvitationDto>}
   * @memberof LolLobbyLobbyDto
   */
  invitations?: Array<LolLobbyLobbyInvitationDto>;
  /**
   *
   * @type {LolLobbyLobbyParticipantDto}
   * @memberof LolLobbyLobbyDto
   */
  localMember?: LolLobbyLobbyParticipantDto;
  /**
   *
   * @type {Array<LolLobbyLobbyParticipantDto>}
   * @memberof LolLobbyLobbyDto
   */
  members?: Array<LolLobbyLobbyParticipantDto>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyDto
   */
  partyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyDto
   */
  partyType?: string;
  /**
   *
   * @type {Array<LolLobbyEligibilityRestriction>}
   * @memberof LolLobbyLobbyDto
   */
  restrictions?: Array<LolLobbyEligibilityRestriction>;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyGameConfigDto
 */
export interface LolLobbyLobbyGameConfigDto {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  allowablePremadeSizes?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  customLobbyName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  customMutatorName?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  customRewardsDisabledReasons?: Array<string>;
  /**
   *
   * @type {LolLobbyQueueCustomGameSpectatorPolicy}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  customSpectatorPolicy?: LolLobbyQueueCustomGameSpectatorPolicy;
  /**
   *
   * @type {Array<LolLobbyLobbyParticipantDto>}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  customSpectators?: Array<LolLobbyLobbyParticipantDto>;
  /**
   *
   * @type {Array<LolLobbyLobbyParticipantDto>}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  customTeam100?: Array<LolLobbyLobbyParticipantDto>;
  /**
   *
   * @type {Array<LolLobbyLobbyParticipantDto>}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  customTeam200?: Array<LolLobbyLobbyParticipantDto>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  gameMode?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  isCustom?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  isLobbyFull?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  isTeamBuilderManaged?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  maxHumanPlayers?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  maxLobbySize?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  maxTeamSize?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  pickType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  premadeSizeAllowed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  queueId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyGameConfigDto
   */
  showPositionSelector?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyInvitation
 */
export interface LolLobbyLobbyInvitation {
  /**
   *
   * @type {LolLobbyEligibility}
   * @memberof LolLobbyLobbyInvitation
   */
  eligibility?: LolLobbyEligibility;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyInvitation
   */
  errorType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyInvitation
   */
  fromSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyInvitation
   */
  fromSummonerName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyInvitation
   */
  id?: string;
  /**
   *
   * @type {object}
   * @memberof LolLobbyLobbyInvitation
   */
  invitationMetaData?: object;
  /**
   *
   * @type {LolLobbyLobbyInvitationState}
   * @memberof LolLobbyLobbyInvitation
   */
  state?: LolLobbyLobbyInvitationState;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyInvitation
   */
  timestamp?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyInvitation
   */
  toSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyInvitation
   */
  toSummonerName?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyInvitationDto
 */
export interface LolLobbyLobbyInvitationDto {
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyInvitationDto
   */
  invitationId?: string;
  /**
   *
   * @type {LolLobbyLobbyInvitationState}
   * @memberof LolLobbyLobbyInvitationDto
   */
  state?: LolLobbyLobbyInvitationState;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyInvitationDto
   */
  timestamp?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyInvitationDto
   */
  toSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyInvitationDto
   */
  toSummonerName?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyLobbyInvitationState {
  Requested = 'Requested',
  Pending = 'Pending',
  Accepted = 'Accepted',
  Joined = 'Joined',
  Declined = 'Declined',
  Kicked = 'Kicked',
  OnHold = 'OnHold',
  Error = 'Error',
}

/**
 *
 * @export
 * @interface LolLobbyLobbyLastQueuedLobby
 */
export interface LolLobbyLobbyLastQueuedLobby {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyLastQueuedLobby
   */
  canPlayAgain?: boolean;
  /**
   *
   * @type {Array<LolLobbyLobbyLastQueuedMember>}
   * @memberof LolLobbyLobbyLastQueuedLobby
   */
  members?: Array<LolLobbyLobbyLastQueuedMember>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyLastQueuedLobby
   */
  queueId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyLastQueuedLobby
   */
  wasOwner?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyLastQueuedMember
 */
export interface LolLobbyLobbyLastQueuedMember {
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyLastQueuedMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyMatchmakingLowPriorityDataResource
 */
export interface LolLobbyLobbyMatchmakingLowPriorityDataResource {
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyMatchmakingLowPriorityDataResource
   */
  bustedLeaverAccessToken?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyLobbyMatchmakingLowPriorityDataResource
   */
  penalizedSummonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyMatchmakingLowPriorityDataResource
   */
  penaltyTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyMatchmakingLowPriorityDataResource
   */
  penaltyTimeRemaining?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyMatchmakingLowPriorityDataResource
   */
  reason?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyMatchmakingSearchErrorResource
 */
export interface LolLobbyLobbyMatchmakingSearchErrorResource {
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyMatchmakingSearchErrorResource
   */
  errorType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyMatchmakingSearchErrorResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyMatchmakingSearchErrorResource
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyMatchmakingSearchErrorResource
   */
  penalizedSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyMatchmakingSearchErrorResource
   */
  penaltyTimeRemaining?: number;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyMatchmakingSearchResource
 */
export interface LolLobbyLobbyMatchmakingSearchResource {
  /**
   *
   * @type {Array<LolLobbyLobbyMatchmakingSearchErrorResource>}
   * @memberof LolLobbyLobbyMatchmakingSearchResource
   */
  errors?: Array<LolLobbyLobbyMatchmakingSearchErrorResource>;
  /**
   *
   * @type {LolLobbyLobbyMatchmakingLowPriorityDataResource}
   * @memberof LolLobbyLobbyMatchmakingSearchResource
   */
  lowPriorityData?: LolLobbyLobbyMatchmakingLowPriorityDataResource;
  /**
   *
   * @type {LolLobbyLobbyMatchmakingSearchState}
   * @memberof LolLobbyLobbyMatchmakingSearchResource
   */
  searchState?: LolLobbyLobbyMatchmakingSearchState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyLobbyMatchmakingSearchState {
  Invalid = 'Invalid',
  AbandonedLowPriorityQueue = 'AbandonedLowPriorityQueue',
  Canceled = 'Canceled',
  Searching = 'Searching',
  Found = 'Found',
  Error = 'Error',
  ServiceError = 'ServiceError',
  ServiceShutdown = 'ServiceShutdown',
}

/**
 *
 * @export
 * @interface LolLobbyLobbyMember
 */
export interface LolLobbyLobbyMember {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  autoFillProtectedForSoloing?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyMember
   */
  botChampionId?: number;
  /**
   *
   * @type {LolLobbyLobbyBotDifficulty}
   * @memberof LolLobbyLobbyMember
   */
  botDifficulty?: LolLobbyLobbyBotDifficulty;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  canInviteOthers?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyMember
   */
  excludedPositionPreference?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyMember
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  isBot?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  isOwner?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  isSpectator?: boolean;
  /**
   *
   * @type {LolLobbyLobbyPositionPreferences}
   * @memberof LolLobbyLobbyMember
   */
  positionPreferences?: LolLobbyLobbyPositionPreferences;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyMember
   */
  showPositionExcluder?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyMember
   */
  summonerInternalName?: string;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyNotification
 */
export interface LolLobbyLobbyNotification {
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyNotification
   */
  notificationId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyNotification
   */
  notificationReason?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyLobbyNotification
   */
  summonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyNotification
   */
  timestamp?: number;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyParticipantDto
 */
export interface LolLobbyLobbyParticipantDto {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  allowedChangeActivity?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  allowedInviteOthers?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  allowedKickOthers?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  allowedStartActivity?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  allowedToggleInvite?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  autoFillProtectedForSoloing?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyParticipantDto
   */
  botChampionId?: number;
  /**
   *
   * @type {LolLobbyLobbyBotDifficulty}
   * @memberof LolLobbyLobbyParticipantDto
   */
  botDifficulty?: LolLobbyLobbyBotDifficulty;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyParticipantDto
   */
  botId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyParticipantDto
   */
  firstPositionPreference?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  isBot?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  isLeader?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  isSpectator?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyParticipantDto
   */
  puuid?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  ready?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyParticipantDto
   */
  secondPositionPreference?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyParticipantDto
   */
  showGhostedBanner?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyParticipantDto
   */
  summonerIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyParticipantDto
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyParticipantDto
   */
  summonerInternalName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyParticipantDto
   */
  summonerLevel?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyParticipantDto
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyParticipantDto
   */
  teamId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyLobbyPartyRewardType {
  Ip = 'Ip',
  Icon = 'Icon',
  None = 'None',
}

/**
 *
 * @export
 * @interface LolLobbyLobbyPartyRewards
 */
export interface LolLobbyLobbyPartyRewards {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyPartyRewards
   */
  isCustom?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyPartyRewards
   */
  isEnabled?: boolean;
  /**
   *
   * @type {Array<LolLobbyPartyReward>}
   * @memberof LolLobbyLobbyPartyRewards
   */
  partyRewards?: Array<LolLobbyPartyReward>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyPartyRewards
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyPositionPreferences
 */
export interface LolLobbyLobbyPositionPreferences {
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyPositionPreferences
   */
  firstPreference?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyPositionPreferences
   */
  secondPreference?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyLobbyRemovedFromGameReason {
  None = 'None',
  Kicked = 'Kicked',
  Disbanded = 'Disbanded',
  Left = 'Left',
  ServiceError = 'ServiceError',
  Other = 'Other',
  Timeout = 'Timeout',
  GameStartError = 'GameStartError',
  ServiceShutdown = 'ServiceShutdown',
}

/**
 *
 * @export
 * @interface LolLobbyLobbyStatus
 */
export interface LolLobbyLobbyStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyStatus
   */
  allowedPlayAgain?: boolean;
  /**
   *
   * @type {LolLobbyQueueCustomGameSpectatorPolicy}
   * @memberof LolLobbyLobbyStatus
   */
  customSpectatorPolicy?: LolLobbyQueueCustomGameSpectatorPolicy;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyLobbyStatus
   */
  invitedSummonerIds?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyStatus
   */
  isCustom?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyStatus
   */
  isLeader?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyStatus
   */
  isPracticeTool?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyStatus
   */
  isSpectator?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLobbyStatus
   */
  lobbyId?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyLobbyStatus
   */
  memberSummonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyStatus
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyLobbyTimer
 */
export interface LolLobbyLobbyTimer {
  /**
   *
   * @type {number}
   * @memberof LolLobbyLobbyTimer
   */
  countdown?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLobbyTimer
   */
  enabled?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyLoginSession
 */
export interface LolLobbyLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolLobbyLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {object}
   * @memberof LolLobbyLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyLoginSession
   */
  isNewPlayer?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolLobbyLoginSessionStates}
   * @memberof LolLobbyLoginSession
   */
  state?: LolLobbyLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolLobbyLoginSession
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLoginSession
   */
  userAuthToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyLoginSession
   */
  username?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyMatchmakingDodgeState {
  Invalid = 'Invalid',
  PartyDodged = 'PartyDodged',
  StrangerDodged = 'StrangerDodged',
}

/**
 *
 * @export
 * @interface LolLobbyOpenPartyToggleAnalytics
 */
export interface LolLobbyOpenPartyToggleAnalytics {
  /**
   *
   * @type {number}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  elapsedTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  endTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  endTransition?: string;
  /**
   *
   * @type {object}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  eventData?: object;
  /**
   *
   * @type {number}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  eventTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  eventType?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  finalState?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  initialState?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  numOfToggles?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  partyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  playerId?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  startTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyOpenPartyToggleAnalytics
   */
  startTransition?: string;
}
/**
 *
 * @export
 * @interface LolLobbyPartiesInvitationAnalytics
 */
export interface LolLobbyPartiesInvitationAnalytics {
  /**
   *
   * @type {object}
   * @memberof LolLobbyPartiesInvitationAnalytics
   */
  eventData?: object;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartiesInvitationAnalytics
   */
  eventTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartiesInvitationAnalytics
   */
  eventType?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartiesInvitationAnalytics
   */
  partyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartiesInvitationAnalytics
   */
  platformId?: string;
  /**
   *
   * @type {Array<LolLobbyPartiesInvitationPlayerAnalytics>}
   * @memberof LolLobbyPartiesInvitationAnalytics
   */
  players?: Array<LolLobbyPartiesInvitationPlayerAnalytics>;
}
/**
 *
 * @export
 * @interface LolLobbyPartiesInvitationPlayerAnalytics
 */
export interface LolLobbyPartiesInvitationPlayerAnalytics {
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartiesInvitationPlayerAnalytics
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartiesInvitationPlayerAnalytics
   */
  role?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartiesInvitationPlayerAnalytics
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyPartyChatDto
 */
export interface LolLobbyPartyChatDto {
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyChatDto
   */
  jid?: string;
}
/**
 *
 * @export
 * @interface LolLobbyPartyDto
 */
export interface LolLobbyPartyDto {
  /**
   *
   * @type {LolLobbyQueueRestrictionDto}
   * @memberof LolLobbyPartyDto
   */
  activeRestrictions?: LolLobbyQueueRestrictionDto;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyPartyDto
   */
  activityLocked?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyDto
   */
  activityResumeUtcMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyDto
   */
  activityStartedUtcMillis?: number;
  /**
   *
   * @type {LolLobbyPartyChatDto}
   * @memberof LolLobbyPartyDto
   */
  chat?: LolLobbyPartyChatDto;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyDto
   */
  eligibilityHash?: number;
  /**
   *
   * @type {Array<LolLobbyGatekeeperRestrictionDto>}
   * @memberof LolLobbyPartyDto
   */
  eligibilityRestrictions?: Array<LolLobbyGatekeeperRestrictionDto>;
  /**
   *
   * @type {LolLobbyGameModeDto}
   * @memberof LolLobbyPartyDto
   */
  gameMode?: LolLobbyGameModeDto;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyDto
   */
  maxPartySize?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyDto
   */
  partyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyDto
   */
  partyType?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyDto
   */
  platformId?: string;
  /**
   *
   * @type {Array<LolLobbyPartyMemberDto>}
   * @memberof LolLobbyPartyDto
   */
  players?: Array<LolLobbyPartyMemberDto>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyDto
   */
  version?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyPartyEogStatusCategory {
  KLeft = 'kLeft',
  KPlayAgain = 'kPlayAgain',
  KOnEog = 'kOnEog',
}

/**
 *
 * @export
 * @interface LolLobbyPartyInviteAnalytics
 */
export interface LolLobbyPartyInviteAnalytics {
  /**
   *
   * @type {object}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  eventData?: object;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  eventTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  eventType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  fromSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  partyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  partyType?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  platformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyInviteAnalytics
   */
  toSummonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyPartyMemberDto
 */
export interface LolLobbyPartyMemberDto {
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyMemberDto
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyPartyMemberDto
   */
  canInvite?: boolean;
  /**
   *
   * @type {LolLobbyGameModeDto}
   * @memberof LolLobbyPartyMemberDto
   */
  gameMode?: LolLobbyGameModeDto;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyMemberDto
   */
  inviteTimestamp?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyMemberDto
   */
  invitedBySummonerId?: number;
  /**
   *
   * @type {LolLobbyPartyMemberMetadataDto}
   * @memberof LolLobbyPartyMemberDto
   */
  metadata?: LolLobbyPartyMemberMetadataDto;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyMemberDto
   */
  partyId?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyMemberDto
   */
  partyVersion?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyMemberDto
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyMemberDto
   */
  puuid?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyPartyMemberDto
   */
  ready?: boolean;
  /**
   *
   * @type {LolLobbyPartyMemberRoleEnum}
   * @memberof LolLobbyPartyMemberDto
   */
  role?: LolLobbyPartyMemberRoleEnum;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyMemberDto
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyPartyMemberMetadataDto
 */
export interface LolLobbyPartyMemberMetadataDto {
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyMemberMetadataDto
   */
  championSelection?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyPartyMemberMetadataDto
   */
  positionPref?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyMemberMetadataDto
   */
  skinSelection?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyPartyMemberRoleEnum {
  LEADER = 'LEADER',
  MEMBER = 'MEMBER',
  INVITED = 'INVITED',
  HOLD = 'HOLD',
  KICKED = 'KICKED',
  DECLINED = 'DECLINED',
  NONE = 'NONE',
}

/**
 *
 * @export
 * @interface LolLobbyPartyNotificationEnvelopeDto
 */
export interface LolLobbyPartyNotificationEnvelopeDto {
  /**
   *
   * @type {LolLobbyPlayerDto}
   * @memberof LolLobbyPartyNotificationEnvelopeDto
   */
  player?: LolLobbyPlayerDto;
  /**
   *
   * @type {LolLobbyQueueRestrictionDto}
   * @memberof LolLobbyPartyNotificationEnvelopeDto
   */
  queueRestriction?: LolLobbyQueueRestrictionDto;
}
/**
 *
 * @export
 * @interface LolLobbyPartyPresenceData
 */
export interface LolLobbyPartyPresenceData {
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyPresenceData
   */
  partyId?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyPresenceData
   */
  queueId?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyPartyPresenceData
   */
  summoners?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyPartyQueueEligibilityDto
 */
export interface LolLobbyPartyQueueEligibilityDto {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyPartyQueueEligibilityDto
   */
  availableQueueIds?: Array<number>;
  /**
   *
   * @type {Array<LolLobbyGatekeeperRestrictionDto>}
   * @memberof LolLobbyPartyQueueEligibilityDto
   */
  partyRestrictions?: Array<LolLobbyGatekeeperRestrictionDto>;
}
/**
 *
 * @export
 * @interface LolLobbyPartyReward
 */
export interface LolLobbyPartyReward {
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyReward
   */
  premadeSize?: number;
  /**
   *
   * @type {LolLobbyLobbyPartyRewardType}
   * @memberof LolLobbyPartyReward
   */
  type?: LolLobbyLobbyPartyRewardType;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPartyReward
   */
  value?: string;
}
/**
 *
 * @export
 * @interface LolLobbyPartyStatusDto
 */
export interface LolLobbyPartyStatusDto {
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyPartyStatusDto
   */
  eogPlayers?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyPartyStatusDto
   */
  leftPlayers?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPartyStatusDto
   */
  partySize?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyPartyStatusDto
   */
  readyPlayers?: Array<string>;
}
/**
 *
 * @export
 * @interface LolLobbyPlayerCollectionDto
 */
export interface LolLobbyPlayerCollectionDto {
  /**
   *
   * @type {Array<LolLobbyPlayerDto>}
   * @memberof LolLobbyPlayerCollectionDto
   */
  players?: Array<LolLobbyPlayerDto>;
}
/**
 *
 * @export
 * @interface LolLobbyPlayerDto
 */
export interface LolLobbyPlayerDto {
  /**
   *
   * @type {number}
   * @memberof LolLobbyPlayerDto
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPlayerDto
   */
  createdAt?: number;
  /**
   *
   * @type {LolLobbyPartyDto}
   * @memberof LolLobbyPlayerDto
   */
  currentParty?: LolLobbyPartyDto;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPlayerDto
   */
  eligibilityHash?: number;
  /**
   *
   * @type {Array<LolLobbyPartyMemberDto>}
   * @memberof LolLobbyPlayerDto
   */
  parties?: Array<LolLobbyPartyMemberDto>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPlayerDto
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPlayerDto
   */
  puuid?: string;
  /**
   *
   * @type {LolLobbyRegistrationCredentials}
   * @memberof LolLobbyPlayerDto
   */
  registration?: LolLobbyRegistrationCredentials;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPlayerDto
   */
  serverUtcMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPlayerDto
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPlayerDto
   */
  version?: number;
}
/**
 *
 * @export
 * @interface LolLobbyPlayerStatus
 */
export interface LolLobbyPlayerStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyPlayerStatus
   */
  canInviteOthersAtEog?: boolean;
  /**
   *
   * @type {LolLobbyLobbyStatus}
   * @memberof LolLobbyPlayerStatus
   */
  currentLobbyStatus?: LolLobbyLobbyStatus;
  /**
   *
   * @type {LolLobbyLobbyStatus}
   * @memberof LolLobbyPlayerStatus
   */
  lastQueuedLobbyStatus?: LolLobbyLobbyStatus;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyPlayerUpdateType {
  None = 'None',
  Direct = 'Direct',
  ServiceProxy = 'ServiceProxy',
  RMS = 'RMS',
}

/**
 *
 * @export
 * @interface LolLobbyPremadeMemberDto
 */
export interface LolLobbyPremadeMemberDto {
  /**
   *
   * @type {string}
   * @memberof LolLobbyPremadeMemberDto
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPremadeMemberDto
   */
  partyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPremadeMemberDto
   */
  puuid?: string;
  /**
   *
   * @type {LolLobbyPartyMemberRoleEnum}
   * @memberof LolLobbyPremadeMemberDto
   */
  role?: LolLobbyPartyMemberRoleEnum;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPremadeMemberDto
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyPremadePartyDto
 */
export interface LolLobbyPremadePartyDto {
  /**
   *
   * @type {string}
   * @memberof LolLobbyPremadePartyDto
   */
  partyId?: string;
  /**
   *
   * @type {{ [key: string]: LolLobbyPremadeMemberDto; }}
   * @memberof LolLobbyPremadePartyDto
   */
  players?: { [key: string]: LolLobbyPremadeMemberDto };
}
/**
 *
 * @export
 * @interface LolLobbyPremadeRelationshipAnalytics
 */
export interface LolLobbyPremadeRelationshipAnalytics {
  /**
   *
   * @type {object}
   * @memberof LolLobbyPremadeRelationshipAnalytics
   */
  eventData?: object;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPremadeRelationshipAnalytics
   */
  eventTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPremadeRelationshipAnalytics
   */
  eventType?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyPremadeRelationshipAnalytics
   */
  friendPlayers?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPremadeRelationshipAnalytics
   */
  platformId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyPremadeRelationshipAnalytics
   */
  premadePlayers?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyPremadeRelationshipAnalytics
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyPremadeRelationshipAnalytics
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyQueue
 */
export interface LolLobbyQueue {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyQueue
   */
  allowablePremadeSizes?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueue
   */
  areFreeChampionsAllowed?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueue
   */
  assetMutator?: string;
  /**
   *
   * @type {LolLobbyQueueGameCategory}
   * @memberof LolLobbyQueue
   */
  category?: LolLobbyQueueGameCategory;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  championsRequiredToPlay?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueue
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueue
   */
  detailedDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueue
   */
  gameMode?: string;
  /**
   *
   * @type {LolLobbyQueueGameTypeConfig}
   * @memberof LolLobbyQueue
   */
  gameTypeConfig?: LolLobbyQueueGameTypeConfig;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueue
   */
  isRanked?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueue
   */
  isTeamBuilderManaged?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueue
   */
  isTeamOnly?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  lastToggledOffTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  lastToggledOnTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  maxLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  maxSummonerLevelForFirstWinOfTheDay?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  maximumParticipantListSize?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  minLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  minimumParticipantListSize?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueue
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  numPlayersPerTeam?: number;
  /**
   *
   * @type {LolLobbyQueueAvailability}
   * @memberof LolLobbyQueue
   */
  queueAvailability?: LolLobbyQueueAvailability;
  /**
   *
   * @type {LolLobbyQueueReward}
   * @memberof LolLobbyQueue
   */
  queueRewards?: LolLobbyQueueReward;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueue
   */
  removalFromGameAllowed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueue
   */
  removalFromGameDelayMinutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueue
   */
  shortName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueue
   */
  showPositionSelector?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueue
   */
  spectatorEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueue
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyQueueAvailability {
  Available = 'Available',
  PlatformDisabled = 'PlatformDisabled',
  DoesntMeetRequirements = 'DoesntMeetRequirements',
}

/**
 *
 * @export
 * @interface LolLobbyQueueCustomGame
 */
export interface LolLobbyQueueCustomGame {
  /**
   *
   * @type {LolLobbyQueueAvailability}
   * @memberof LolLobbyQueueCustomGame
   */
  queueAvailability?: LolLobbyQueueAvailability;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyQueueCustomGameSpectatorPolicy {
  NotAllowed = 'NotAllowed',
  LobbyAllowed = 'LobbyAllowed',
  FriendsAllowed = 'FriendsAllowed',
  AllAllowed = 'AllAllowed',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyQueueGameCategory {
  None = 'None',
  Custom = 'Custom',
  PvP = 'PvP',
  VersusAi = 'VersusAi',
  Alpha = 'Alpha',
}

/**
 *
 * @export
 * @interface LolLobbyQueueGameTypeConfig
 */
export interface LolLobbyQueueGameTypeConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  advancedLearningQuests?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  allowTrades?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  banMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  banTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  battleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  crossTeamChampionPool?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  deathMatch?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  doNotRemove?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  duplicatePick?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  exclusivePick?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  gameModeOverride?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  learningQuests?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  mainPickTimerDuration?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  maxAllowableBans?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  numPlayersPerTeamOverride?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  onboardCoopBeginner?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  pickMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  postPickTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  reroll?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueGameTypeConfig
   */
  teamChampionPool?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyQueueRestrictionDto
 */
export interface LolLobbyQueueRestrictionDto {
  /**
   *
   * @type {Array<LolLobbyGatekeeperRestrictionDto>}
   * @memberof LolLobbyQueueRestrictionDto
   */
  gatekeeperRestrictions?: Array<LolLobbyGatekeeperRestrictionDto>;
}
/**
 *
 * @export
 * @interface LolLobbyQueueReward
 */
export interface LolLobbyQueueReward {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueReward
   */
  isChampionPointsEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueReward
   */
  isIpEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyQueueReward
   */
  isXpEnabled?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyQueueReward
   */
  partySizeIpRewards?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyRankedPositionInfoDTO
 */
export interface LolLobbyRankedPositionInfoDTO {
  /**
   *
   * @type {string}
   * @memberof LolLobbyRankedPositionInfoDTO
   */
  queue?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRankedPositionInfoDTO
   */
  rank?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRankedPositionInfoDTO
   */
  tier?: string;
}
/**
 *
 * @export
 * @interface LolLobbyRankedStatsUnsignedDTO
 */
export interface LolLobbyRankedStatsUnsignedDTO {
  /**
   *
   * @type {string}
   * @memberof LolLobbyRankedStatsUnsignedDTO
   */
  highestPreviousSeasonEndRank?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRankedStatsUnsignedDTO
   */
  highestPreviousSeasonEndTier?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRankedStatsUnsignedDTO
   */
  jwt?: string;
  /**
   *
   * @type {Array<LolLobbyRankedPositionInfoDTO>}
   * @memberof LolLobbyRankedStatsUnsignedDTO
   */
  queues?: Array<LolLobbyRankedPositionInfoDTO>;
}
/**
 *
 * @export
 * @interface LolLobbyReadyDto
 */
export interface LolLobbyReadyDto {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyReadyDto
   */
  ready?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyReceivedInvitationDto
 */
export interface LolLobbyReceivedInvitationDto {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyReceivedInvitationDto
   */
  canAcceptInvitation?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyReceivedInvitationDto
   */
  fromSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyReceivedInvitationDto
   */
  fromSummonerName?: string;
  /**
   *
   * @type {LolLobbyReceivedInvitationGameConfigDto}
   * @memberof LolLobbyReceivedInvitationDto
   */
  gameConfig?: LolLobbyReceivedInvitationGameConfigDto;
  /**
   *
   * @type {string}
   * @memberof LolLobbyReceivedInvitationDto
   */
  invitationId?: string;
  /**
   *
   * @type {Array<LolLobbyEligibilityRestriction>}
   * @memberof LolLobbyReceivedInvitationDto
   */
  restrictions?: Array<LolLobbyEligibilityRestriction>;
  /**
   *
   * @type {LolLobbyLobbyInvitationState}
   * @memberof LolLobbyReceivedInvitationDto
   */
  state?: LolLobbyLobbyInvitationState;
  /**
   *
   * @type {string}
   * @memberof LolLobbyReceivedInvitationDto
   */
  timestamp?: string;
}
/**
 *
 * @export
 * @interface LolLobbyReceivedInvitationGameConfigDto
 */
export interface LolLobbyReceivedInvitationGameConfigDto {
  /**
   *
   * @type {string}
   * @memberof LolLobbyReceivedInvitationGameConfigDto
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyReceivedInvitationGameConfigDto
   */
  inviteGameType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyReceivedInvitationGameConfigDto
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyReceivedInvitationGameConfigDto
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyRegistrationCredentials
 */
export interface LolLobbyRegistrationCredentials {
  /**
   *
   * @type {string}
   * @memberof LolLobbyRegistrationCredentials
   */
  gameClientVersion?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRegistrationCredentials
   */
  inventoryToken?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyRegistrationCredentials
   */
  inventoryTokens?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRegistrationCredentials
   */
  rankedOverviewToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRegistrationCredentials
   */
  simpleInventoryToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRegistrationCredentials
   */
  summonerToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRegistrationCredentials
   */
  userInfoToken?: string;
}
/**
 *
 * @export
 * @interface LolLobbyRegistrationStatus
 */
export interface LolLobbyRegistrationStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyRegistrationStatus
   */
  complete?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyRegistrationStatus
   */
  errorCodes?: Array<string>;
}
/**
 *
 * @export
 * @interface LolLobbyRiotMessagingServiceMessage
 */
export interface LolLobbyRiotMessagingServiceMessage {
  /**
   *
   * @type {string}
   * @memberof LolLobbyRiotMessagingServiceMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRiotMessagingServiceMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRiotMessagingServiceMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyRiotMessagingServiceMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyRiotMessagingServiceMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @interface LolLobbyServiceProxyPayload
 */
export interface LolLobbyServiceProxyPayload {
  /**
   *
   * @type {string}
   * @memberof LolLobbyServiceProxyPayload
   */
  body?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyServiceProxyPayload
   */
  method?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyServiceProxyPayload
   */
  url?: string;
}
/**
 *
 * @export
 * @interface LolLobbySummoner
 */
export interface LolLobbySummoner {
  /**
   *
   * @type {number}
   * @memberof LolLobbySummoner
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbySummoner
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbySummoner
   */
  internalName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbySummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbySummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbySummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbySummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderActionV1
 */
export interface LolLobbyTeamBuilderActionV1 {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderActionV1
   */
  actionId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderActionV1
   */
  actorCellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderActionV1
   */
  championId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderActionV1
   */
  completed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderActionV1
   */
  duration?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderActionV1
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderAfkCheckStateV1
 */
export interface LolLobbyTeamBuilderAfkCheckStateV1 {
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyTeamBuilderAfkCheckStateV1
   */
  additionalInventoryTypes?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderAfkCheckStateV1
   */
  afkReady?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderAfkCheckStateV1
   */
  compressAfkCheckPayload?: boolean;
  /**
   *
   * @type {LolLobbyTeamBuilderTbdInventory}
   * @memberof LolLobbyTeamBuilderAfkCheckStateV1
   */
  inventoryDraft?: LolLobbyTeamBuilderTbdInventory;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderAfkCheckStateV1
   */
  maxAfkMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderAfkCheckStateV1
   */
  remainingAfkMillis?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderBackwardsTransitionInfoV1
 */
export interface LolLobbyTeamBuilderBackwardsTransitionInfoV1 {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderBackwardsTransitionInfoV1
   */
  backwardsTransitionReason?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderBackwardsTransitionInfoV1
   */
  initiatorSummonerIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderCellV1
 */
export interface LolLobbyTeamBuilderCellV1 {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  assignedPosition?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  championPickIntent?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  entitledFeatureType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  skinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCellV1
   */
  teamId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderCellsV1
 */
export interface LolLobbyTeamBuilderCellsV1 {
  /**
   *
   * @type {Array<LolLobbyTeamBuilderCellV1>}
   * @memberof LolLobbyTeamBuilderCellsV1
   */
  alliedTeam?: Array<LolLobbyTeamBuilderCellV1>;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderCellV1>}
   * @memberof LolLobbyTeamBuilderCellsV1
   */
  enemyTeam?: Array<LolLobbyTeamBuilderCellV1>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderCeremonyV1
 */
export interface LolLobbyTeamBuilderCeremonyV1 {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCeremonyV1
   */
  duration?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderCeremonyV1
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectAction
 */
export interface LolLobbyTeamBuilderChampSelectAction {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectAction
   */
  actorCellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectAction
   */
  championId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectAction
   */
  completed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectAction
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectAction
   */
  isAllyAction?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectAction
   */
  isInProgress?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectAction
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectChatRoomDetails
 */
export interface LolLobbyTeamBuilderChampSelectChatRoomDetails {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectChatRoomDetails
   */
  chatRoomName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectChatRoomDetails
   */
  chatRoomPassword?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectMySelection
 */
export interface LolLobbyTeamBuilderChampSelectMySelection {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectMySelection
   */
  selectedSkinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectMySelection
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectMySelection
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectMySelection
   */
  wardSkinId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectPickableSkins
 */
export interface LolLobbyTeamBuilderChampSelectPickableSkins {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderChampSelectPickableSkins
   */
  skinIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectPlayerSelection
 */
export interface LolLobbyTeamBuilderChampSelectPlayerSelection {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  assignedPosition?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  championPickIntent?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  entitledFeatureType?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  playerType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  selectedSkinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  team?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectPlayerSelection
   */
  wardSkinId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectReport
 */
export interface LolLobbyTeamBuilderChampSelectReport {
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyTeamBuilderChampSelectReport
   */
  categories?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectReport
   */
  comment?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectReport
   */
  location?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectReport
   */
  match_token?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectReport
   */
  offender_puuid?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectSession
 */
export interface LolLobbyTeamBuilderChampSelectSession {
  /**
   *
   * @type {Array<object>}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  actions?: Array<object>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  allowBattleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  allowDuplicatePicks?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  allowLockedEvents?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  allowRerolling?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  allowSkinSelection?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  benchChampionIds?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  benchEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  boostableSkinCount?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderChampSelectChatRoomDetails}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  chatDetails?: LolLobbyTeamBuilderChampSelectChatRoomDetails;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  counter?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderEntitledFeatureState}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  entitledFeatureState?: LolLobbyTeamBuilderEntitledFeatureState;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  gameId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  hasSimultaneousBans?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  hasSimultaneousPicks?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  isSpectating?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  localPlayerCellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  lockedEventIndex?: number;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderChampSelectPlayerSelection>}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  myTeam?: Array<LolLobbyTeamBuilderChampSelectPlayerSelection>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  rerollsRemaining?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  skipChampionSelect?: boolean;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderChampSelectPlayerSelection>}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  theirTeam?: Array<LolLobbyTeamBuilderChampSelectPlayerSelection>;
  /**
   *
   * @type {LolLobbyTeamBuilderChampSelectTimer}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  timer?: LolLobbyTeamBuilderChampSelectTimer;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderChampSelectTradeContract>}
   * @memberof LolLobbyTeamBuilderChampSelectSession
   */
  trades?: Array<LolLobbyTeamBuilderChampSelectTradeContract>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectTimer
 */
export interface LolLobbyTeamBuilderChampSelectTimer {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectTimer
   */
  adjustedTimeLeftInPhase?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectTimer
   */
  internalNowInEpochMs?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampSelectTimer
   */
  isInfinite?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampSelectTimer
   */
  phase?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectTimer
   */
  totalTimeInPhase?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampSelectTradeContract
 */
export interface LolLobbyTeamBuilderChampSelectTradeContract {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectTradeContract
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampSelectTradeContract
   */
  id?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderChampSelectTradeState}
   * @memberof LolLobbyTeamBuilderChampSelectTradeContract
   */
  state?: LolLobbyTeamBuilderChampSelectTradeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderChampSelectTradeState {
  AVAILABLE = 'AVAILABLE',
  BUSY = 'BUSY',
  INVALID = 'INVALID',
  RECEIVED = 'RECEIVED',
  SENT = 'SENT',
}

/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampionBenchStateV1
 */
export interface LolLobbyTeamBuilderChampionBenchStateV1 {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampionBenchStateV1
   */
  benchEnabled?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderChampionBenchStateV1
   */
  championIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampionSelectPreferences
 */
export interface LolLobbyTeamBuilderChampionSelectPreferences {
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolLobbyTeamBuilderChampionSelectPreferences
   */
  skins?: { [key: string]: number };
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLobbyTeamBuilderChampionSelectPreferences
   */
  spells?: { [key: string]: object };
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderChampionSelectStateV1
 */
export interface LolLobbyTeamBuilderChampionSelectStateV1 {
  /**
   *
   * @type {Array<object>}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  actionSetList?: Array<object>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  allowDuplicatePicks?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  allowOptingOutOfBanning?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  allowSkinSelection?: boolean;
  /**
   *
   * @type {LolLobbyTeamBuilderTeamBuilderBoostInfo}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  battleBoostState?: LolLobbyTeamBuilderTeamBuilderBoostInfo;
  /**
   *
   * @type {LolLobbyTeamBuilderCellsV1}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  cells?: LolLobbyTeamBuilderCellsV1;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  ceremoniesByActionSetIndex?: { [key: string]: object };
  /**
   *
   * @type {LolLobbyTeamBuilderChampionBenchStateV1}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  championBenchState?: LolLobbyTeamBuilderChampionBenchStateV1;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  currentActionSetIndex?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  currentTimeRemainingMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  currentTotalTimeMillis?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderEntitledFeatureStateV1}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  entitledFeatureState?: LolLobbyTeamBuilderEntitledFeatureStateV1;
  /**
   *
   * @type {LolLobbyTeamBuilderTbdInventory}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  inventoryDraft?: LolLobbyTeamBuilderTbdInventory;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  isSpectating?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  lcuSkipsSendingLoadoutsGco?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  localPlayerCellId?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderLockedEventsStateV1}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  lockedEventsState?: LolLobbyTeamBuilderLockedEventsStateV1;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  pickIntentClearedReason?: string;
  /**
   *
   * @type {LolLobbyTeamBuilderRerollStateV1}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  rerollState?: LolLobbyTeamBuilderRerollStateV1;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  skipChampionSelect?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  subphase?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  teamChatRoomId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  teamId?: string;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderTradeV1>}
   * @memberof LolLobbyTeamBuilderChampionSelectStateV1
   */
  trades?: Array<LolLobbyTeamBuilderTradeV1>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderCountdownTimer
 */
export interface LolLobbyTeamBuilderCountdownTimer {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCountdownTimer
   */
  counter?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderCountdownTimer
   */
  phaseName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCountdownTimer
   */
  timer?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderCreatePremadeV1
 */
export interface LolLobbyTeamBuilderCreatePremadeV1 {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderCreatePremadeV1
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderEntitledFeatureState
 */
export interface LolLobbyTeamBuilderEntitledFeatureState {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderEntitledFeatureState
   */
  additionalRerolls?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderEntitledFeatureState
   */
  unlockedSkinIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderEntitledFeatureStateV1
 */
export interface LolLobbyTeamBuilderEntitledFeatureStateV1 {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderEntitledFeatureStateV1
   */
  additionalRerolls?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderUnlockedSkinsStateV1}
   * @memberof LolLobbyTeamBuilderEntitledFeatureStateV1
   */
  unlockedSkinsState?: LolLobbyTeamBuilderUnlockedSkinsStateV1;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderGameflowGameClient
 */
export interface LolLobbyTeamBuilderGameflowGameClient {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderGameflowGameClient
   */
  running?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderGameflowSession
 */
export interface LolLobbyTeamBuilderGameflowSession {
  /**
   *
   * @type {LolLobbyTeamBuilderGameflowGameClient}
   * @memberof LolLobbyTeamBuilderGameflowSession
   */
  gameClient?: LolLobbyTeamBuilderGameflowGameClient;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderGatekeeperRestricted
 */
export interface LolLobbyTeamBuilderGatekeeperRestricted {
  /**
   *
   * @type {Array<LolLobbyTeamBuilderGatekeeperRestriction>}
   * @memberof LolLobbyTeamBuilderGatekeeperRestricted
   */
  gatekeeperRestrictions?: Array<LolLobbyTeamBuilderGatekeeperRestriction>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderGatekeeperRestriction
 */
export interface LolLobbyTeamBuilderGatekeeperRestriction {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderGatekeeperRestriction
   */
  payload?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderGatekeeperRestriction
   */
  queueId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderGatekeeperRestriction
   */
  reason?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderGatekeeperRestriction
   */
  remainingMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderGatekeeperRestriction
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLeaverBusterAbandoned
 */
export interface LolLobbyTeamBuilderLeaverBusterAbandoned {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLeaverBusterAbandoned
   */
  abandonerName?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLobby
 */
export interface LolLobbyTeamBuilderLobby {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderLobby
   */
  allowablePremadeSizes?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  canStartMatchmaking?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobby
   */
  chatRoomId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobby
   */
  chatRoomKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobby
   */
  invitationId?: string;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderLobbyInvitation>}
   * @memberof LolLobbyTeamBuilderLobby
   */
  invitations?: Array<LolLobbyTeamBuilderLobbyInvitation>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  isTeamBuilderManaged?: boolean;
  /**
   *
   * @type {LolLobbyTeamBuilderLobbyMember}
   * @memberof LolLobbyTeamBuilderLobby
   */
  localMember?: LolLobbyTeamBuilderLobbyMember;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderLobbyMember>}
   * @memberof LolLobbyTeamBuilderLobby
   */
  members?: Array<LolLobbyTeamBuilderLobbyMember>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  premadeSizeAllowed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderLobby
   */
  queueId?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderLobbyRemovedFromGameReason}
   * @memberof LolLobbyTeamBuilderLobby
   */
  removalReason?: LolLobbyTeamBuilderLobbyRemovedFromGameReason;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  requiredPositionCoverageMet?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  showPositionExcluder?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  showPositionSelector?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyTeamBuilderLobby
   */
  specifiablePositionPreferences?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobby
   */
  wasKicked?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLobbyCountdownTimer
 */
export interface LolLobbyTeamBuilderLobbyCountdownTimer {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderLobbyCountdownTimer
   */
  counter?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobbyCountdownTimer
   */
  phaseName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderLobbyCountdownTimer
   */
  timer?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLobbyInvitation
 */
export interface LolLobbyTeamBuilderLobbyInvitation {
  /**
   *
   * @type {object}
   * @memberof LolLobbyTeamBuilderLobbyInvitation
   */
  invitationMetaData?: object;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLobbyMember
 */
export interface LolLobbyTeamBuilderLobbyMember {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  autoFillProtectedForSoloing?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  canInviteOthers?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  excludedPositionPreference?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  isOwner?: boolean;
  /**
   *
   * @type {LolLobbyTeamBuilderLobbyPositionPreferences}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  positionPreferences?: LolLobbyTeamBuilderLobbyPositionPreferences;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLobbyMember
   */
  showPositionExcluder?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLobbyPositionPreferences
 */
export interface LolLobbyTeamBuilderLobbyPositionPreferences {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobbyPositionPreferences
   */
  firstPreference?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobbyPositionPreferences
   */
  secondPreference?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLobbyPositionPreferencesV2
 */
export interface LolLobbyTeamBuilderLobbyPositionPreferencesV2 {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobbyPositionPreferencesV2
   */
  excludedPreference?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobbyPositionPreferencesV2
   */
  firstPreference?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderLobbyPositionPreferencesV2
   */
  secondPreference?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderLobbyRemovedFromGameReason {
  None = 'None',
  Kicked = 'Kicked',
  Disbanded = 'Disbanded',
  Left = 'Left',
  ServiceError = 'ServiceError',
  Other = 'Other',
  Timeout = 'Timeout',
  GameStartError = 'GameStartError',
  ServiceShutdown = 'ServiceShutdown',
}

/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLockedEventsStateV1
 */
export interface LolLobbyTeamBuilderLockedEventsStateV1 {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLockedEventsStateV1
   */
  allowLockedEvents?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderLockedEventsStateV1
   */
  lockedEventIndex?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderLoginSession
 */
export interface LolLobbyTeamBuilderLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {LolLobbyTeamBuilderLoginSessionState}
   * @memberof LolLobbyTeamBuilderLoginSession
   */
  state?: LolLobbyTeamBuilderLoginSessionState;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderLoginSessionState {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolLobbyTeamBuilderMatchmakingDodgeData
 */
export interface LolLobbyTeamBuilderMatchmakingDodgeData {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingDodgeData
   */
  dodgerId?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingDodgeState}
   * @memberof LolLobbyTeamBuilderMatchmakingDodgeData
   */
  state?: LolLobbyTeamBuilderMatchmakingDodgeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderMatchmakingDodgeState {
  Invalid = 'Invalid',
  PartyDodged = 'PartyDodged',
  StrangerDodged = 'StrangerDodged',
  TournamentDodged = 'TournamentDodged',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderMatchmakingDodgeWarning {
  None = 'None',
  Warning = 'Warning',
  Penalty = 'Penalty',
}

/**
 *
 * @export
 * @interface LolLobbyTeamBuilderMatchmakingLowPriorityData
 */
export interface LolLobbyTeamBuilderMatchmakingLowPriorityData {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderMatchmakingLowPriorityData
   */
  bustedLeaverAccessToken?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderMatchmakingLowPriorityData
   */
  penalizedSummonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingLowPriorityData
   */
  penaltyTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingLowPriorityData
   */
  penaltyTimeRemaining?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderMatchmakingReadyCheckResource
 */
export interface LolLobbyTeamBuilderMatchmakingReadyCheckResource {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderMatchmakingReadyCheckResource
   */
  declinerIds?: Array<number>;
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingDodgeWarning}
   * @memberof LolLobbyTeamBuilderMatchmakingReadyCheckResource
   */
  dodgeWarning?: LolLobbyTeamBuilderMatchmakingDodgeWarning;
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingReadyCheckResponse}
   * @memberof LolLobbyTeamBuilderMatchmakingReadyCheckResource
   */
  playerResponse?: LolLobbyTeamBuilderMatchmakingReadyCheckResponse;
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingReadyCheckState}
   * @memberof LolLobbyTeamBuilderMatchmakingReadyCheckResource
   */
  state?: LolLobbyTeamBuilderMatchmakingReadyCheckState;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingReadyCheckResource
   */
  timer?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderMatchmakingReadyCheckResponse {
  None = 'None',
  Accepted = 'Accepted',
  Declined = 'Declined',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderMatchmakingReadyCheckState {
  Invalid = 'Invalid',
  InProgress = 'InProgress',
  EveryoneReady = 'EveryoneReady',
  StrangerNotReady = 'StrangerNotReady',
  PartyNotReady = 'PartyNotReady',
  Error = 'Error',
}

/**
 *
 * @export
 * @interface LolLobbyTeamBuilderMatchmakingSearch
 */
export interface LolLobbyTeamBuilderMatchmakingSearch {
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingSearchState}
   * @memberof LolLobbyTeamBuilderMatchmakingSearch
   */
  searchState?: LolLobbyTeamBuilderMatchmakingSearchState;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderMatchmakingSearchErrorResource
 */
export interface LolLobbyTeamBuilderMatchmakingSearchErrorResource {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchErrorResource
   */
  errorType?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchErrorResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchErrorResource
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchErrorResource
   */
  penalizedSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchErrorResource
   */
  penaltyTimeRemaining?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderMatchmakingSearchResource
 */
export interface LolLobbyTeamBuilderMatchmakingSearchResource {
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingDodgeData}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  dodgeData?: LolLobbyTeamBuilderMatchmakingDodgeData;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderMatchmakingSearchErrorResource>}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  errors?: Array<LolLobbyTeamBuilderMatchmakingSearchErrorResource>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  estimatedQueueTime?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  isCurrentlyInQueue?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  lobbyId?: string;
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingLowPriorityData}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  lowPriorityData?: LolLobbyTeamBuilderMatchmakingLowPriorityData;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  queueId?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingReadyCheckResource}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  readyCheck?: LolLobbyTeamBuilderMatchmakingReadyCheckResource;
  /**
   *
   * @type {LolLobbyTeamBuilderMatchmakingSearchState}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  searchState?: LolLobbyTeamBuilderMatchmakingSearchState;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderMatchmakingSearchResource
   */
  timeInQueue?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderMatchmakingSearchState {
  Invalid = 'Invalid',
  AbandonedLowPriorityQueue = 'AbandonedLowPriorityQueue',
  Canceled = 'Canceled',
  Searching = 'Searching',
  Found = 'Found',
  Error = 'Error',
  ServiceError = 'ServiceError',
  ServiceShutdown = 'ServiceShutdown',
}

/**
 *
 * @export
 * @interface LolLobbyTeamBuilderQueue
 */
export interface LolLobbyTeamBuilderQueue {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderQueue
   */
  allowablePremadeSizes?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueue
   */
  areFreeChampionsAllowed?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueue
   */
  assetMutator?: string;
  /**
   *
   * @type {LolLobbyTeamBuilderQueueGameCategory}
   * @memberof LolLobbyTeamBuilderQueue
   */
  category?: LolLobbyTeamBuilderQueueGameCategory;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  championsRequiredToPlay?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueue
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueue
   */
  detailedDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueue
   */
  gameMode?: string;
  /**
   *
   * @type {LolLobbyTeamBuilderQueueGameTypeConfig}
   * @memberof LolLobbyTeamBuilderQueue
   */
  gameTypeConfig?: LolLobbyTeamBuilderQueueGameTypeConfig;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueue
   */
  isRanked?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueue
   */
  isTeamBuilderManaged?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueue
   */
  isTeamOnly?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  lastToggledOffTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  lastToggledOnTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  mapId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  maxLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  maxSummonerLevelForFirstWinOfTheDay?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  maximumParticipantListSize?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  minLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  minimumParticipantListSize?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueue
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  numPlayersPerTeam?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderQueueAvailability}
   * @memberof LolLobbyTeamBuilderQueue
   */
  queueAvailability?: LolLobbyTeamBuilderQueueAvailability;
  /**
   *
   * @type {LolLobbyTeamBuilderQueueReward}
   * @memberof LolLobbyTeamBuilderQueue
   */
  queueRewards?: LolLobbyTeamBuilderQueueReward;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueue
   */
  removalFromGameAllowed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueue
   */
  removalFromGameDelayMinutes?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueue
   */
  shortName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueue
   */
  showPositionSelector?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueue
   */
  spectatorEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueue
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderQueueAvailability {
  Available = 'Available',
  PlatformDisabled = 'PlatformDisabled',
  DoesntMeetRequirements = 'DoesntMeetRequirements',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolLobbyTeamBuilderQueueGameCategory {
  None = 'None',
  Custom = 'Custom',
  PvP = 'PvP',
  VersusAi = 'VersusAi',
  Alpha = 'Alpha',
}

/**
 *
 * @export
 * @interface LolLobbyTeamBuilderQueueGameTypeConfig
 */
export interface LolLobbyTeamBuilderQueueGameTypeConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  advancedLearningQuests?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  allowTrades?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  banMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  banTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  battleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  crossTeamChampionPool?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  deathMatch?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  doNotRemove?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  duplicatePick?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  exclusivePick?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  learningQuests?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  mainPickTimerDuration?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  maxAllowableBans?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  onboardCoopBeginner?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  pickMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  postPickTimerDuration?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  reroll?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueGameTypeConfig
   */
  teamChampionPool?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderQueueReward
 */
export interface LolLobbyTeamBuilderQueueReward {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueReward
   */
  isChampionPointsEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueReward
   */
  isIpEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderQueueReward
   */
  isXpEnabled?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderQueueReward
   */
  partySizeIpRewards?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderReadyStateV1
 */
export interface LolLobbyTeamBuilderReadyStateV1 {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderReadyStateV1
   */
  allowablePremadeSizes?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderReadyStateV1
   */
  premadeSizeAllowed?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderReadyStateV1
   */
  readyToMatchmake?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderReadyStateV1
   */
  requiredPositionCoverageMet?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderRerollStateV1
 */
export interface LolLobbyTeamBuilderRerollStateV1 {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderRerollStateV1
   */
  allowRerolling?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderRerollStateV1
   */
  rerollsRemaining?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderSettingCategoryResource
 */
export interface LolLobbyTeamBuilderSettingCategoryResource {
  /**
   *
   * @type {LolLobbyTeamBuilderChampionSelectPreferences}
   * @memberof LolLobbyTeamBuilderSettingCategoryResource
   */
  data?: LolLobbyTeamBuilderChampionSelectPreferences;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderSettingCategoryResource
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderSpecifyPositionPreferencesV1
 */
export interface LolLobbyTeamBuilderSpecifyPositionPreferencesV1 {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderSpecifyPositionPreferencesV1
   */
  firstPreference?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderSpecifyPositionPreferencesV1
   */
  secondPreference?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderSpecifyPositionPreferencesV2
 */
export interface LolLobbyTeamBuilderSpecifyPositionPreferencesV2 {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderSpecifyPositionPreferencesV2
   */
  excludedPreference?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderSpecifyPositionPreferencesV2
   */
  firstPreference?: string;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderSpecifyPositionPreferencesV2
   */
  secondPreference?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTBDMatchmakingState
 */
export interface LolLobbyTeamBuilderTBDMatchmakingState {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTBDMatchmakingState
   */
  backwardsTransitionReason?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTBDMatchmakingState
   */
  estimatedMatchmakingTimeMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTBDMatchmakingState
   */
  timeInMatchmakingMillis?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTbLobbyBackwardsToPremadeTransitionResource
 */
export interface LolLobbyTeamBuilderTbLobbyBackwardsToPremadeTransitionResource {
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTbLobbyBackwardsToPremadeTransitionResource
   */
  backwardsTransitionReason?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderTbLobbyBackwardsToPremadeTransitionResource
   */
  slotIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTbLobbyEnabledFeaturesResource
 */
export interface LolLobbyTeamBuilderTbLobbyEnabledFeaturesResource {
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyTeamBuilderTbLobbyEnabledFeaturesResource
   */
  enabledFeatures?: Array<string>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTbLobbyPremadeStateResource
 */
export interface LolLobbyTeamBuilderTbLobbyPremadeStateResource {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {LolLobbyTeamBuilderTbLobbyBackwardsToPremadeTransitionResource}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  backwardsToPremadeTransitionReason?: LolLobbyTeamBuilderTbLobbyBackwardsToPremadeTransitionResource;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  captainSlotId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  draftPremadeId?: string;
  /**
   *
   * @type {Array<LolLobbyTeamBuilderTbLobbySlotResource>}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  draftSlots?: Array<LolLobbyTeamBuilderTbLobbySlotResource>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  localPlayerSlotId?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  playableDraftPositions?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  premadeChatRoomId?: string;
  /**
   *
   * @type {LolLobbyTeamBuilderReadyStateV1}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  readyState?: LolLobbyTeamBuilderReadyStateV1;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  readyToMatchmake?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  showPositionExcluder?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  showPositionSelector?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTbLobbyPremadeStateResource
   */
  timer?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTbLobbySlotResource
 */
export interface LolLobbyTeamBuilderTbLobbySlotResource {
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  autoFillProtectedForSoloing?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  draftPositionPreferences?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  excludedPositionPreference?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  showPositionExcluder?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  slotId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTbLobbySlotResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTbLobbyStateResource
 */
export interface LolLobbyTeamBuilderTbLobbyStateResource {
  /**
   *
   * @type {LolLobbyTeamBuilderAfkCheckStateV1}
   * @memberof LolLobbyTeamBuilderTbLobbyStateResource
   */
  afkCheckState?: LolLobbyTeamBuilderAfkCheckStateV1;
  /**
   *
   * @type {LolLobbyTeamBuilderChampionSelectStateV1}
   * @memberof LolLobbyTeamBuilderTbLobbyStateResource
   */
  championSelectState?: LolLobbyTeamBuilderChampionSelectStateV1;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTbLobbyStateResource
   */
  counter?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTbLobbyStateResource
   */
  gameId?: number;
  /**
   *
   * @type {LolLobbyTeamBuilderTBDMatchmakingState}
   * @memberof LolLobbyTeamBuilderTbLobbyStateResource
   */
  matchmakingState?: LolLobbyTeamBuilderTBDMatchmakingState;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTbLobbyStateResource
   */
  phaseName?: string;
  /**
   *
   * @type {LolLobbyTeamBuilderTbLobbyPremadeStateResource}
   * @memberof LolLobbyTeamBuilderTbLobbyStateResource
   */
  premadeState?: LolLobbyTeamBuilderTbLobbyPremadeStateResource;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTbLobbyStateResource
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTbRemovedFromServiceNotification
 */
export interface LolLobbyTeamBuilderTbRemovedFromServiceNotification {
  /**
   *
   * @type {LolLobbyTeamBuilderBackwardsTransitionInfoV1}
   * @memberof LolLobbyTeamBuilderTbRemovedFromServiceNotification
   */
  backwardsTransitionInfo?: LolLobbyTeamBuilderBackwardsTransitionInfoV1;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTbRemovedFromServiceNotification
   */
  reason?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTbdInventory
 */
export interface LolLobbyTeamBuilderTbdInventory {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderTbdInventory
   */
  allChampionIds?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderTbdInventory
   */
  disabledChampionIds?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderTbdInventory
   */
  initialSpellIds?: Array<number>;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolLobbyTeamBuilderTbdInventory
   */
  lastSelectedSkinIdByChampionId?: { [key: string]: number };
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderTbdInventory
   */
  skinIds?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderTbdInventory
   */
  spellIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTeamBoost
 */
export interface LolLobbyTeamBuilderTeamBoost {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderTeamBoost
   */
  availableSkins?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTeamBoost
   */
  ipReward?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTeamBoost
   */
  ipRewardForPurchaser?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTeamBoost
   */
  price?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTeamBoost
   */
  skinUnlockMode?: string;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTeamBoost
   */
  summonerId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTeamBoost
   */
  unlocked?: boolean;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTeamBuilderBoostInfo
 */
export interface LolLobbyTeamBuilderTeamBuilderBoostInfo {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTeamBuilderBoostInfo
   */
  activatorCellId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTeamBuilderBoostInfo
   */
  allowBattleBoost?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLobbyTeamBuilderTeamBuilderBoostInfo
   */
  battleBoostActivated?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTeamBuilderBoostInfo
   */
  boostableSkinCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTeamBuilderBoostInfo
   */
  cost?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderTeamBuilderBoostInfo
   */
  unlockedSkinIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTeambuilderLeagueEdgeResponse
 */
export interface LolLobbyTeamBuilderTeambuilderLeagueEdgeResponse {
  /**
   *
   * @type {LolLobbyTeamBuilderTbLobbyStateResource}
   * @memberof LolLobbyTeamBuilderTeambuilderLeagueEdgeResponse
   */
  payload?: LolLobbyTeamBuilderTbLobbyStateResource;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTeambuilderLeagueEdgeResponse
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderTradeV1
 */
export interface LolLobbyTeamBuilderTradeV1 {
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTradeV1
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLobbyTeamBuilderTradeV1
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLobbyTeamBuilderTradeV1
   */
  state?: string;
}
/**
 *
 * @export
 * @interface LolLobbyTeamBuilderUnlockedSkinsStateV1
 */
export interface LolLobbyTeamBuilderUnlockedSkinsStateV1 {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLobbyTeamBuilderUnlockedSkinsStateV1
   */
  unlockedSkinIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLobbyUserInfoToken
 */
export interface LolLobbyUserInfoToken {
  /**
   *
   * @type {string}
   * @memberof LolLobbyUserInfoToken
   */
  userInfo?: string;
}
/**
 *
 * @export
 * @interface LolLobbyUserResource
 */
export interface LolLobbyUserResource {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolLobbyUserResource
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof LolLobbyUserResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLoginAccessToken
 */
export interface LolLoginAccessToken {
  /**
   *
   * @type {number}
   * @memberof LolLoginAccessToken
   */
  expiry?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLoginAccessToken
   */
  scopes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLoginAccessToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolLoginAccountStateResource
 */
export interface LolLoginAccountStateResource {
  /**
   *
   * @type {LolLoginAccountStateType}
   * @memberof LolLoginAccountStateResource
   */
  state?: LolLoginAccountStateType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoginAccountStateType {
  CREATING = 'CREATING',
  ENABLED = 'ENABLED',
  TRANSFERRINGOUT = 'TRANSFERRING_OUT',
  TRANSFERRINGIN = 'TRANSFERRING_IN',
  TRANSFERREDOUT = 'TRANSFERRED_OUT',
  GENERATING = 'GENERATING',
}

/**
 *
 * @export
 * @interface LolLoginAuthorization
 */
export interface LolLoginAuthorization {
  /**
   *
   * @type {number}
   * @memberof LolLoginAuthorization
   */
  currentAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLoginAuthorization
   */
  currentPlatformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginAuthorization
   */
  subject?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoginConfigReadinessEnum {
  NotReady = 'NotReady',
  Ready = 'Ready',
  Disabled = 'Disabled',
}

/**
 *
 * @export
 * @interface LolLoginConfigStatus
 */
export interface LolLoginConfigStatus {
  /**
   *
   * @type {LolLoginConfigReadinessEnum}
   * @memberof LolLoginConfigStatus
   */
  readiness?: LolLoginConfigReadinessEnum;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoginConfigType {
  Public = 'public',
  Player = 'player',
}

/**
 *
 * @export
 * @interface LolLoginCrashReportingEnvironment
 */
export interface LolLoginCrashReportingEnvironment {
  /**
   *
   * @type {string}
   * @memberof LolLoginCrashReportingEnvironment
   */
  environment?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginCrashReportingEnvironment
   */
  userId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginCrashReportingEnvironment
   */
  userName?: string;
}
/**
 *
 * @export
 * @interface LolLoginIdToken
 */
export interface LolLoginIdToken {
  /**
   *
   * @type {number}
   * @memberof LolLoginIdToken
   */
  expiry?: number;
  /**
   *
   * @type {string}
   * @memberof LolLoginIdToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolLoginLcdsResponse
 */
export interface LolLoginLcdsResponse {
  /**
   *
   * @type {object}
   * @memberof LolLoginLcdsResponse
   */
  body?: object;
  /**
   *
   * @type {string}
   * @memberof LolLoginLcdsResponse
   */
  typeName?: string;
}
/**
 *
 * @export
 * @interface LolLoginLcdsServiceProxyResponse
 */
export interface LolLoginLcdsServiceProxyResponse {
  /**
   *
   * @type {boolean}
   * @memberof LolLoginLcdsServiceProxyResponse
   */
  compressedPayload?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLoginLcdsServiceProxyResponse
   */
  messageId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginLcdsServiceProxyResponse
   */
  methodName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginLcdsServiceProxyResponse
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginLcdsServiceProxyResponse
   */
  serviceName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginLcdsServiceProxyResponse
   */
  status?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoginLeagueSessionStatus {
  UNINITIALIZED = 'UNINITIALIZED',
  INITIALIZED = 'INITIALIZED',
  EXPIRED = 'EXPIRED',
  DUPLICATED = 'DUPLICATED',
}

/**
 *
 * @export
 * @interface LolLoginLeagueSessionTokenEnvelope
 */
export interface LolLoginLeagueSessionTokenEnvelope {
  /**
   *
   * @type {boolean}
   * @memberof LolLoginLeagueSessionTokenEnvelope
   */
  logoutOnFailure?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLoginLeagueSessionTokenEnvelope
   */
  token?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoginLoginConnectionMode {
  Preparing = 'Preparing',
  Legacy = 'Legacy',
  Partner = 'Partner',
  RiotClient = 'RiotClient',
}

/**
 *
 * @export
 * @interface LolLoginLoginConnectionState
 */
export interface LolLoginLoginConnectionState {
  /**
   *
   * @type {boolean}
   * @memberof LolLoginLoginConnectionState
   */
  isPartnerRiotClient?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLoginLoginConnectionState
   */
  isUsingDeveloperAuthToken?: boolean;
  /**
   *
   * @type {LolLoginLoginConnectionMode}
   * @memberof LolLoginLoginConnectionState
   */
  mode?: LolLoginLoginConnectionMode;
}
/**
 *
 * @export
 * @interface LolLoginLoginError
 */
export interface LolLoginLoginError {
  /**
   *
   * @type {string}
   * @memberof LolLoginLoginError
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginLoginError
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginLoginError
   */
  messageId?: string;
}
/**
 *
 * @export
 * @interface LolLoginLoginQueue
 */
export interface LolLoginLoginQueue {
  /**
   *
   * @type {number}
   * @memberof LolLoginLoginQueue
   */
  approximateWaitTimeSeconds?: number;
  /**
   *
   * @type {number}
   * @memberof LolLoginLoginQueue
   */
  estimatedPositionInQueue?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLoginLoginQueue
   */
  isPositionCapped?: boolean;
}
/**
 *
 * @export
 * @interface LolLoginLoginSession
 */
export interface LolLoginLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolLoginLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLoginLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {LolLoginLoginError}
   * @memberof LolLoginLoginSession
   */
  error?: LolLoginLoginError;
  /**
   *
   * @type {object}
   * @memberof LolLoginLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolLoginLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLoginLoginSession
   */
  isInLoginQueue?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLoginLoginSession
   */
  isNewPlayer?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLoginLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolLoginLoginSessionStates}
   * @memberof LolLoginLoginSession
   */
  state?: LolLoginLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolLoginLoginSession
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLoginLoginSession
   */
  userAuthToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginLoginSession
   */
  username?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoginLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolLoginLoginSessionWallet
 */
export interface LolLoginLoginSessionWallet {
  /**
   *
   * @type {number}
   * @memberof LolLoginLoginSessionWallet
   */
  ip?: number;
  /**
   *
   * @type {number}
   * @memberof LolLoginLoginSessionWallet
   */
  rp?: number;
}
/**
 *
 * @export
 * @interface LolLoginPlatformGeneratedCredentials
 */
export interface LolLoginPlatformGeneratedCredentials {
  /**
   *
   * @type {object}
   * @memberof LolLoginPlatformGeneratedCredentials
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolLoginPlatformGeneratedCredentials
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginPlatformGeneratedCredentials
   */
  username?: string;
}
/**
 *
 * @export
 * @interface LolLoginRSOPlayerCredentials
 */
export interface LolLoginRSOPlayerCredentials {
  /**
   *
   * @type {string}
   * @memberof LolLoginRSOPlayerCredentials
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginRSOPlayerCredentials
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginRSOPlayerCredentials
   */
  username?: string;
}
/**
 *
 * @export
 * @interface LolLoginRegionStatus
 */
export interface LolLoginRegionStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolLoginRegionStatus
   */
  enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLoginRegionStatus
   */
  isUserInfoEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLoginRegionStatus
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface LolLoginSummonerCreatedResource
 */
export interface LolLoginSummonerCreatedResource {
  /**
   *
   * @type {number}
   * @memberof LolLoginSummonerCreatedResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolLoginUsernameAndPassword
 */
export interface LolLoginUsernameAndPassword {
  /**
   *
   * @type {string}
   * @memberof LolLoginUsernameAndPassword
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoginUsernameAndPassword
   */
  username?: string;
}
/**
 *
 * @export
 * @interface LolLootCollectionsChampionMinimal
 */
export interface LolLootCollectionsChampionMinimal {
  /**
   *
   * @type {number}
   * @memberof LolLootCollectionsChampionMinimal
   */
  id?: number;
  /**
   *
   * @type {LolLootCollectionsOwnership}
   * @memberof LolLootCollectionsChampionMinimal
   */
  ownership?: LolLootCollectionsOwnership;
}
/**
 *
 * @export
 * @interface LolLootCollectionsChampionSkinMinimal
 */
export interface LolLootCollectionsChampionSkinMinimal {
  /**
   *
   * @type {number}
   * @memberof LolLootCollectionsChampionSkinMinimal
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootCollectionsChampionSkinMinimal
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootCollectionsChampionSkinMinimal
   */
  name?: string;
  /**
   *
   * @type {LolLootCollectionsOwnership}
   * @memberof LolLootCollectionsChampionSkinMinimal
   */
  ownership?: LolLootCollectionsOwnership;
  /**
   *
   * @type {string}
   * @memberof LolLootCollectionsChampionSkinMinimal
   */
  splashPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootCollectionsChampionSkinMinimal
   */
  tilePath?: string;
}
/**
 *
 * @export
 * @interface LolLootCollectionsEmote
 */
export interface LolLootCollectionsEmote {
  /**
   *
   * @type {number}
   * @memberof LolLootCollectionsEmote
   */
  itemId?: number;
  /**
   *
   * @type {LolLootInventoryOwnership}
   * @memberof LolLootCollectionsEmote
   */
  ownershipType?: LolLootInventoryOwnership;
}
/**
 *
 * @export
 * @interface LolLootCollectionsOwnership
 */
export interface LolLootCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolLootCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLootCollectionsOwnership
   */
  owned?: boolean;
  /**
   *
   * @type {LolLootCollectionsRental}
   * @memberof LolLootCollectionsOwnership
   */
  rental?: LolLootCollectionsRental;
}
/**
 *
 * @export
 * @interface LolLootCollectionsRental
 */
export interface LolLootCollectionsRental {
  /**
   *
   * @type {boolean}
   * @memberof LolLootCollectionsRental
   */
  rented?: boolean;
}
/**
 *
 * @export
 * @interface LolLootCollectionsStatstone
 */
export interface LolLootCollectionsStatstone {
  /**
   *
   * @type {number}
   * @memberof LolLootCollectionsStatstone
   */
  itemId?: number;
  /**
   *
   * @type {LolLootInventoryOwnership}
   * @memberof LolLootCollectionsStatstone
   */
  ownershipType?: LolLootInventoryOwnership;
}
/**
 *
 * @export
 * @interface LolLootCollectionsSummonerIcons
 */
export interface LolLootCollectionsSummonerIcons {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLootCollectionsSummonerIcons
   */
  icons?: Array<number>;
}
/**
 *
 * @export
 * @interface LolLootCollectionsWardSkin
 */
export interface LolLootCollectionsWardSkin {
  /**
   *
   * @type {number}
   * @memberof LolLootCollectionsWardSkin
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootCollectionsWardSkin
   */
  name?: string;
  /**
   *
   * @type {LolLootCollectionsOwnership}
   * @memberof LolLootCollectionsWardSkin
   */
  ownership?: LolLootCollectionsOwnership;
  /**
   *
   * @type {string}
   * @memberof LolLootCollectionsWardSkin
   */
  wardImagePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootCollectionsWardSkin
   */
  wardShadowImagePath?: string;
}
/**
 *
 * @export
 * @interface LolLootContextMenu
 */
export interface LolLootContextMenu {
  /**
   *
   * @type {string}
   * @memberof LolLootContextMenu
   */
  actionType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLootContextMenu
   */
  enabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLootContextMenu
   */
  essenceQuantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootContextMenu
   */
  essenceType?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootContextMenu
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootContextMenu
   */
  recipeContextMenuAction?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootContextMenu
   */
  recipeDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootContextMenu
   */
  requiredOthers?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootContextMenu
   */
  requiredOthersCount?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootContextMenu
   */
  requiredOthersName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootContextMenu
   */
  requiredTokens?: string;
}
/**
 *
 * @export
 * @interface LolLootCurrencyConfiguration
 */
export interface LolLootCurrencyConfiguration {
  /**
   *
   * @type {Array<string>}
   * @memberof LolLootCurrencyConfiguration
   */
  currenciesUsingCapWallets?: Array<string>;
}
/**
 *
 * @export
 * @interface LolLootGameDataSummonerEmote
 */
export interface LolLootGameDataSummonerEmote {
  /**
   *
   * @type {string}
   * @memberof LolLootGameDataSummonerEmote
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootGameDataSummonerEmote
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootGameDataSummonerEmote
   */
  inventoryIcon?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootGameDataSummonerEmote
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolLootGameDataSummonerIcon
 */
export interface LolLootGameDataSummonerIcon {
  /**
   *
   * @type {string}
   * @memberof LolLootGameDataSummonerIcon
   */
  iconPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootGameDataSummonerIcon
   */
  id?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLootGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolLootGameflowSession
 */
export interface LolLootGameflowSession {
  /**
   *
   * @type {LolLootGameflowPhase}
   * @memberof LolLootGameflowSession
   */
  phase?: LolLootGameflowPhase;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLootInventoryOwnership {
  OWNED = 'OWNED',
  RENTED = 'RENTED',
  F2P = 'F2P',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolLootItemOwnershipStatus {
  NONE = 'NONE',
  FREE = 'FREE',
  RENTAL = 'RENTAL',
  OWNED = 'OWNED',
}

/**
 *
 * @export
 * @interface LolLootLoginAllSummonerData
 */
export interface LolLootLoginAllSummonerData {
  /**
   *
   * @type {LolLootLoginSummonerLevelAndPoints}
   * @memberof LolLootLoginAllSummonerData
   */
  summonerLevelAndPoints?: LolLootLoginSummonerLevelAndPoints;
}
/**
 *
 * @export
 * @interface LolLootLoginDataPacket
 */
export interface LolLootLoginDataPacket {
  /**
   *
   * @type {LolLootLoginAllSummonerData}
   * @memberof LolLootLoginDataPacket
   */
  allSummonerData?: LolLootLoginAllSummonerData;
  /**
   *
   * @type {Array<LolLootLoginSimpleMessage>}
   * @memberof LolLootLoginDataPacket
   */
  simpleMessages?: Array<LolLootLoginSimpleMessage>;
}
/**
 *
 * @export
 * @interface LolLootLoginSession
 */
export interface LolLootLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolLootLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolLootLoginSessionStates}
   * @memberof LolLootLoginSession
   */
  state?: LolLootLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolLootLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLootLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolLootLoginSimpleMessage
 */
export interface LolLootLoginSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LolLootLoginSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootLoginSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLootLoginSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolLootLoginSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolLootLoginSummonerLevelAndPoints
 */
export interface LolLootLoginSummonerLevelAndPoints {
  /**
   *
   * @type {number}
   * @memberof LolLootLoginSummonerLevelAndPoints
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolLootLootBundleGdsResource
 */
export interface LolLootLootBundleGdsResource {
  /**
   *
   * @type {string}
   * @memberof LolLootLootBundleGdsResource
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootBundleGdsResource
   */
  descriptionLong?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootBundleGdsResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootBundleGdsResource
   */
  image?: string;
}
/**
 *
 * @export
 * @interface LolLootLootDataGdsResource
 */
export interface LolLootLootDataGdsResource {
  /**
   *
   * @type {Array<LolLootLootBundleGdsResource>}
   * @memberof LolLootLootDataGdsResource
   */
  LootBundles?: Array<LolLootLootBundleGdsResource>;
  /**
   *
   * @type {Array<LolLootLootItemGdsResource>}
   * @memberof LolLootLootDataGdsResource
   */
  LootItems?: Array<LolLootLootItemGdsResource>;
  /**
   *
   * @type {Array<LolLootLootRecipeGdsResource>}
   * @memberof LolLootLootDataGdsResource
   */
  LootRecipes?: Array<LolLootLootRecipeGdsResource>;
  /**
   *
   * @type {Array<LolLootLootTableGdsResource>}
   * @memberof LolLootLootDataGdsResource
   */
  LootTables?: Array<LolLootLootTableGdsResource>;
}
/**
 *
 * @export
 * @interface LolLootLootDescription
 */
export interface LolLootLootDescription {
  /**
   *
   * @type {Array<string>}
   * @memberof LolLootLootDescription
   */
  childLootTableNames?: Array<string>;
  /**
   *
   * @type {Array<LolLootLootDescription>}
   * @memberof LolLootLootDescription
   */
  childrenDescriptions?: Array<LolLootLootDescription>;
  /**
   *
   * @type {string}
   * @memberof LolLootLootDescription
   */
  imagePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootDescription
   */
  localizedDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootDescription
   */
  localizedDescriptionLong?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootDescription
   */
  lootName?: string;
}
/**
 *
 * @export
 * @interface LolLootLootGrantNotification
 */
export interface LolLootLootGrantNotification {
  /**
   *
   * @type {number}
   * @memberof LolLootLootGrantNotification
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootLootGrantNotification
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootLootGrantNotification
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootLootGrantNotification
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootLootGrantNotification
   */
  lootName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootGrantNotification
   */
  messageKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootGrantNotification
   */
  msgId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootGrantNotification
   */
  playerGrade?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootLootGrantNotification
   */
  playerId?: number;
}
/**
 *
 * @export
 * @interface LolLootLootItem
 */
export interface LolLootLootItem {
  /**
   *
   * @type {string}
   * @memberof LolLootLootItem
   */
  asset?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItem
   */
  displayCategories?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootLootItem
   */
  expiryTime?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItem
   */
  lootName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItem
   */
  rarity?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootLootItem
   */
  rentalGames?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootLootItem
   */
  rentalSeconds?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootLootItem
   */
  storeItemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItem
   */
  tags?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItem
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItem
   */
  upgradeLootName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootLootItem
   */
  value?: number;
}
/**
 *
 * @export
 * @interface LolLootLootItemGdsResource
 */
export interface LolLootLootItemGdsResource {
  /**
   *
   * @type {boolean}
   * @memberof LolLootLootItemGdsResource
   */
  autoRedeem?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItemGdsResource
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItemGdsResource
   */
  endDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItemGdsResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItemGdsResource
   */
  image?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootLootItemGdsResource
   */
  lifetimeMax?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootLootItemGdsResource
   */
  mappedStoreId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItemGdsResource
   */
  name?: string;
  /**
   *
   * @type {LolLootLootRarity}
   * @memberof LolLootLootItemGdsResource
   */
  rarity?: LolLootLootRarity;
  /**
   *
   * @type {boolean}
   * @memberof LolLootLootItemGdsResource
   */
  recipeMenuActive?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItemGdsResource
   */
  recipeMenuSubtitle?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItemGdsResource
   */
  recipeMenuTitle?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootItemGdsResource
   */
  startDate?: string;
  /**
   *
   * @type {LolLootLootType}
   * @memberof LolLootLootItemGdsResource
   */
  type?: LolLootLootType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLootLootRarity {
  Default = 'Default',
  Epic = 'Epic',
  Legendary = 'Legendary',
  Mythic = 'Mythic',
  Ultimate = 'Ultimate',
}

/**
 *
 * @export
 * @interface LolLootLootRecipeGdsResource
 */
export interface LolLootLootRecipeGdsResource {
  /**
   *
   * @type {string}
   * @memberof LolLootLootRecipeGdsResource
   */
  contextMenuText?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootRecipeGdsResource
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootRecipeGdsResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootRecipeGdsResource
   */
  imagePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootRecipeGdsResource
   */
  introVideoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootRecipeGdsResource
   */
  loopVideoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootRecipeGdsResource
   */
  outroVideoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootRecipeGdsResource
   */
  requirementText?: string;
}
/**
 *
 * @export
 * @interface LolLootLootTableGdsResource
 */
export interface LolLootLootTableGdsResource {
  /**
   *
   * @type {string}
   * @memberof LolLootLootTableGdsResource
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootTableGdsResource
   */
  descriptionLong?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootTableGdsResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootLootTableGdsResource
   */
  image?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLootLootType {
  Chest = 'Chest',
  Currency = 'Currency',
  Material = 'Material',
  WardSkin = 'WardSkin',
  Skin = 'Skin',
  SkinRental = 'Skin_Rental',
  SummonerIcon = 'SummonerIcon',
  Companion = 'Companion',
  Egg = 'Egg',
  EggColor = 'Egg_Color',
  Statstone = 'Statstone',
  StatstoneShard = 'Statstone_Shard',
}

/**
 *
 * @export
 * @interface LolLootPlayerLoot
 */
export interface LolLootPlayerLoot {
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  asset?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  count?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  disenchantLootName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  disenchantValue?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  displayCategories?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  expiryTime?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolLootPlayerLoot
   */
  isNew?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolLootPlayerLoot
   */
  isRental?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  itemDesc?: string;
  /**
   *
   * @type {LolLootItemOwnershipStatus}
   * @memberof LolLootPlayerLoot
   */
  itemStatus?: LolLootItemOwnershipStatus;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  localizedDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  localizedName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  localizedRecipeSubtitle?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  localizedRecipeTitle?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  lootId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  lootName?: string;
  /**
   *
   * @type {LolLootItemOwnershipStatus}
   * @memberof LolLootPlayerLoot
   */
  parentItemStatus?: LolLootItemOwnershipStatus;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  parentStoreItemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  rarity?: string;
  /**
   *
   * @type {LolLootRedeemableStatus}
   * @memberof LolLootPlayerLoot
   */
  redeemableStatus?: LolLootRedeemableStatus;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  refId?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  rentalGames?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  rentalSeconds?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  shadowPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  splashPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  storeItemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  tags?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  tilePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  upgradeEssenceName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  upgradeEssenceValue?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLoot
   */
  upgradeLootName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLoot
   */
  value?: number;
}
/**
 *
 * @export
 * @interface LolLootPlayerLootDelta
 */
export interface LolLootPlayerLootDelta {
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLootDelta
   */
  deltaCount?: number;
  /**
   *
   * @type {LolLootPlayerLoot}
   * @memberof LolLootPlayerLootDelta
   */
  playerLoot?: LolLootPlayerLoot;
}
/**
 *
 * @export
 * @interface LolLootPlayerLootMap
 */
export interface LolLootPlayerLootMap {
  /**
   *
   * @type {{ [key: string]: LolLootPlayerLoot; }}
   * @memberof LolLootPlayerLootMap
   */
  playerLoot?: { [key: string]: LolLootPlayerLoot };
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLootMap
   */
  version?: number;
}
/**
 *
 * @export
 * @interface LolLootPlayerLootNotification
 */
export interface LolLootPlayerLootNotification {
  /**
   *
   * @type {boolean}
   * @memberof LolLootPlayerLootNotification
   */
  acknowledged?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolLootPlayerLootNotification
   */
  count?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootPlayerLootNotification
   */
  id?: string;
}
/**
 *
 * @export
 * @interface LolLootPlayerLootUpdate
 */
export interface LolLootPlayerLootUpdate {
  /**
   *
   * @type {Array<LolLootPlayerLootDelta>}
   * @memberof LolLootPlayerLootUpdate
   */
  added?: Array<LolLootPlayerLootDelta>;
  /**
   *
   * @type {Array<LolLootPlayerLootDelta>}
   * @memberof LolLootPlayerLootUpdate
   */
  redeemed?: Array<LolLootPlayerLootDelta>;
  /**
   *
   * @type {Array<LolLootPlayerLootDelta>}
   * @memberof LolLootPlayerLootUpdate
   */
  removed?: Array<LolLootPlayerLootDelta>;
}
/**
 *
 * @export
 * @interface LolLootRecipe
 */
export interface LolLootRecipe {
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  contextMenuText?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  crafterName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  displayCategories?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  imagePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  introVideoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  loopVideoPath?: string;
  /**
   *
   * @type {LolLootRecipeMetadata}
   * @memberof LolLootRecipe
   */
  metadata?: LolLootRecipeMetadata;
  /**
   *
   * @type {Array<LolLootRecipeOutput>}
   * @memberof LolLootRecipe
   */
  outputs?: Array<LolLootRecipeOutput>;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  outroVideoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  recipeName?: string;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  requirementText?: string;
  /**
   *
   * @type {Array<LolLootRecipeSlot>}
   * @memberof LolLootRecipe
   */
  slots?: Array<LolLootRecipeSlot>;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipe
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolLootRecipeMenuConfig
 */
export interface LolLootRecipeMenuConfig {
  /**
   *
   * @type {Array<string>}
   * @memberof LolLootRecipeMenuConfig
   */
  alwaysShowLootIds?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolLootRecipeMenuConfig
   */
  enabled?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolLootRecipeMenuConfig
   */
  lootItemsUsingBreakoutRecipeMenu?: Array<string>;
}
/**
 *
 * @export
 * @interface LolLootRecipeMetadata
 */
export interface LolLootRecipeMetadata {
  /**
   *
   * @type {Array<LolLootLootDescription>}
   * @memberof LolLootRecipeMetadata
   */
  bonusDescriptions?: Array<LolLootLootDescription>;
  /**
   *
   * @type {Array<LolLootLootDescription>}
   * @memberof LolLootRecipeMetadata
   */
  guaranteedDescriptions?: Array<LolLootLootDescription>;
  /**
   *
   * @type {boolean}
   * @memberof LolLootRecipeMetadata
   */
  tooltipsDisabled?: boolean;
}
/**
 *
 * @export
 * @interface LolLootRecipeOutput
 */
export interface LolLootRecipeOutput {
  /**
   *
   * @type {string}
   * @memberof LolLootRecipeOutput
   */
  lootName?: string;
  /**
   *
   * @type {number}
   * @memberof LolLootRecipeOutput
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface LolLootRecipeSlot
 */
export interface LolLootRecipeSlot {
  /**
   *
   * @type {Array<string>}
   * @memberof LolLootRecipeSlot
   */
  lootIds?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolLootRecipeSlot
   */
  quantity?: number;
  /**
   *
   * @type {number}
   * @memberof LolLootRecipeSlot
   */
  slotNumber?: number;
  /**
   *
   * @type {string}
   * @memberof LolLootRecipeSlot
   */
  tags?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLootRedeemableStatus {
  UNKNOWN = 'UNKNOWN',
  REDEEMABLE = 'REDEEMABLE',
  REDEEMABLERENTAL = 'REDEEMABLE_RENTAL',
  NOTREDEEMABLE = 'NOT_REDEEMABLE',
  NOTREDEEMABLERENTAL = 'NOT_REDEEMABLE_RENTAL',
  ALREADYOWNED = 'ALREADY_OWNED',
  ALREADYRENTED = 'ALREADY_RENTED',
  CHAMPIONNOTOWNED = 'CHAMPION_NOT_OWNED',
  SKINNOTOWNED = 'SKIN_NOT_OWNED',
}

/**
 *
 * @export
 * @interface LolLootSummoner
 */
export interface LolLootSummoner {
  /**
   *
   * @type {number}
   * @memberof LolLootSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolLoyaltyAccessToken
 */
export interface LolLoyaltyAccessToken {
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyAccessToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolLoyaltyGlobalRewards
 */
export interface LolLoyaltyGlobalRewards {
  /**
   *
   * @type {boolean}
   * @memberof LolLoyaltyGlobalRewards
   */
  allChampions?: boolean;
}
/**
 *
 * @export
 * @interface LolLoyaltyInventoryDTO
 */
export interface LolLoyaltyInventoryDTO {
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolLoyaltyInventoryDTO
   */
  items?: { [key: string]: object };
}
/**
 *
 * @export
 * @interface LolLoyaltyInventoryItemDTO
 */
export interface LolLoyaltyInventoryItemDTO {
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyInventoryItemDTO
   */
  inventoryType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolLoyaltyInventoryItemDTO
   */
  loyalty?: boolean;
}
/**
 *
 * @export
 * @interface LolLoyaltyInventoryResponseDTO
 */
export interface LolLoyaltyInventoryResponseDTO {
  /**
   *
   * @type {LolLoyaltyInventoryDTO}
   * @memberof LolLoyaltyInventoryResponseDTO
   */
  data?: LolLoyaltyInventoryDTO;
}
/**
 *
 * @export
 * @interface LolLoyaltyLoginSession
 */
export interface LolLoyaltyLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolLoyaltyLoginSessionStates}
   * @memberof LolLoyaltyLoginSession
   */
  state?: LolLoyaltyLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoyaltyLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolLoyaltyLoyaltyRewards
 */
export interface LolLoyaltyLoyaltyRewards {
  /**
   *
   * @type {Array<number>}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  championIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  freeRewardedChampionsCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  freeRewardedSkinsCount?: number;
  /**
   *
   * @type {LolLoyaltyGlobalRewards}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  global?: LolLoyaltyGlobalRewards;
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  ipBoost?: number;
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  loyaltyTFTCompanionCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  loyaltyTFTMapSkinCount?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  skinIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyLoyaltyRewards
   */
  xpBoost?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolLoyaltyLoyaltyStatus {
  LEGACY = 'LEGACY',
  REWARDSGRANT = 'REWARDS_GRANT',
  EXPIRY = 'EXPIRY',
  CHANGE = 'CHANGE',
  REVOKE = 'REVOKE',
  DISABLED = 'DISABLED',
}

/**
 *
 * @export
 * @interface LolLoyaltyLoyaltyStatusNotification
 */
export interface LolLoyaltyLoyaltyStatusNotification {
  /**
   *
   * @type {LolLoyaltyLoyaltyRewards}
   * @memberof LolLoyaltyLoyaltyStatusNotification
   */
  rewards?: LolLoyaltyLoyaltyRewards;
  /**
   *
   * @type {LolLoyaltyLoyaltyStatus}
   * @memberof LolLoyaltyLoyaltyStatusNotification
   */
  status?: LolLoyaltyLoyaltyStatus;
}
/**
 *
 * @export
 * @interface LolLoyaltyRiotMessagingServiceMessage
 */
export interface LolLoyaltyRiotMessagingServiceMessage {
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyRiotMessagingServiceMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyRiotMessagingServiceMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyRiotMessagingServiceMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof LolLoyaltyRiotMessagingServiceMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyRiotMessagingServiceMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @interface LolLoyaltyRmsEntitlementPayload
 */
export interface LolLoyaltyRmsEntitlementPayload {
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyRmsEntitlementPayload
   */
  entitlementTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyRmsEntitlementPayload
   */
  itemId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyRmsEntitlementPayload
   */
  itemTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolLoyaltyRmsEntitlementPayload
   */
  resourceOperation?: string;
}
/**
 *
 * @export
 * @interface LolMapsMaps
 */
export interface LolMapsMaps {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolMapsMaps
   */
  assets?: { [key: string]: string };
  /**
   *
   * @type {object}
   * @memberof LolMapsMaps
   */
  categorizedContentBundles?: object;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  gameModeDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  gameModeName?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  gameModeShortName?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  gameMutator?: string;
  /**
   *
   * @type {number}
   * @memberof LolMapsMaps
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMapsMaps
   */
  isDefault?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMapsMaps
   */
  isRGM?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  mapStringId?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsMaps
   */
  platformName?: string;
  /**
   *
   * @type {object}
   * @memberof LolMapsMaps
   */
  properties?: object;
  /**
   *
   * @type {Array<LolMapsTutorialCard>}
   * @memberof LolMapsMaps
   */
  tutorialCards?: Array<LolMapsTutorialCard>;
}
/**
 *
 * @export
 * @interface LolMapsTutorialCard
 */
export interface LolMapsTutorialCard {
  /**
   *
   * @type {string}
   * @memberof LolMapsTutorialCard
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsTutorialCard
   */
  footer?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsTutorialCard
   */
  header?: string;
  /**
   *
   * @type {string}
   * @memberof LolMapsTutorialCard
   */
  imagePath?: string;
}
/**
 *
 * @export
 * @interface LolMatchHistoryLoginSession
 */
export interface LolMatchHistoryLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolMatchHistoryLoginSessionStates}
   * @memberof LolMatchHistoryLoginSession
   */
  state?: LolMatchHistoryLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchHistoryLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryEvent
 */
export interface LolMatchHistoryMatchHistoryEvent {
  /**
   *
   * @type {Array<number>}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  assistingParticipantIds?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  buildingType?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  killerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  laneType?: string;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  monsterSubType?: string;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  monsterType?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  participantId?: number;
  /**
   *
   * @type {LolMatchHistoryMatchHistoryPosition}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  position?: LolMatchHistoryMatchHistoryPosition;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  skillSlot?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  teamId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  towerType?: string;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  type?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryEvent
   */
  victimId?: number;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryGame
 */
export interface LolMatchHistoryMatchHistoryGame {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  gameCreation?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  gameCreationDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  gameDuration?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  gameType?: string;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  gameVersion?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  mapId?: number;
  /**
   *
   * @type {Array<LolMatchHistoryMatchHistoryParticipantIdentities>}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  participantIdentities?: Array<
    LolMatchHistoryMatchHistoryParticipantIdentities
  >;
  /**
   *
   * @type {Array<LolMatchHistoryMatchHistoryParticipant>}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  participants?: Array<LolMatchHistoryMatchHistoryParticipant>;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  platformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  queueId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  seasonId?: number;
  /**
   *
   * @type {Array<LolMatchHistoryMatchHistoryTeam>}
   * @memberof LolMatchHistoryMatchHistoryGame
   */
  teams?: Array<LolMatchHistoryMatchHistoryTeam>;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryGameList
 */
export interface LolMatchHistoryMatchHistoryGameList {
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryGameList
   */
  gameBeginDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGameList
   */
  gameCount?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryGameList
   */
  gameEndDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGameList
   */
  gameIndexBegin?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryGameList
   */
  gameIndexEnd?: number;
  /**
   *
   * @type {Array<LolMatchHistoryMatchHistoryGame>}
   * @memberof LolMatchHistoryMatchHistoryGameList
   */
  games?: Array<LolMatchHistoryMatchHistoryGame>;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryList
 */
export interface LolMatchHistoryMatchHistoryList {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryList
   */
  accountId?: number;
  /**
   *
   * @type {LolMatchHistoryMatchHistoryGameList}
   * @memberof LolMatchHistoryMatchHistoryList
   */
  games?: LolMatchHistoryMatchHistoryGameList;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryList
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryParticipant
 */
export interface LolMatchHistoryMatchHistoryParticipant {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipant
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryParticipant
   */
  highestAchievedSeasonTier?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipant
   */
  participantId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipant
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipant
   */
  spell2Id?: number;
  /**
   *
   * @type {LolMatchHistoryMatchHistoryParticipantStatistics}
   * @memberof LolMatchHistoryMatchHistoryParticipant
   */
  stats?: LolMatchHistoryMatchHistoryParticipantStatistics;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipant
   */
  teamId?: number;
  /**
   *
   * @type {LolMatchHistoryMatchHistoryTimeline}
   * @memberof LolMatchHistoryMatchHistoryParticipant
   */
  timeline?: LolMatchHistoryMatchHistoryTimeline;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryParticipantFrame
 */
export interface LolMatchHistoryMatchHistoryParticipantFrame {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  currentGold?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  dominionScore?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  jungleMinionsKilled?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  level?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  minionsKilled?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  participantId?: number;
  /**
   *
   * @type {LolMatchHistoryMatchHistoryPosition}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  position?: LolMatchHistoryMatchHistoryPosition;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  teamScore?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  totalGold?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantFrame
   */
  xp?: number;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryParticipantIdentities
 */
export interface LolMatchHistoryMatchHistoryParticipantIdentities {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentities
   */
  participantId?: number;
  /**
   *
   * @type {LolMatchHistoryMatchHistoryParticipantIdentityPlayer}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentities
   */
  player?: LolMatchHistoryMatchHistoryParticipantIdentityPlayer;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryParticipantIdentityPlayer
 */
export interface LolMatchHistoryMatchHistoryParticipantIdentityPlayer {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentityPlayer
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentityPlayer
   */
  currentAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentityPlayer
   */
  currentPlatformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentityPlayer
   */
  matchHistoryUri?: string;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentityPlayer
   */
  platformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentityPlayer
   */
  profileIcon?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentityPlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryParticipantIdentityPlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryParticipantStatistics
 */
export interface LolMatchHistoryMatchHistoryParticipantStatistics {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  assists?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  causedEarlySurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  champLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  combatPlayerScore?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  damageDealtToObjectives?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  damageDealtToTurrets?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  damageSelfMitigated?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  deaths?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  doubleKills?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  earlySurrenderAccomplice?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  firstBloodAssist?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  firstBloodKill?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  firstInhibitorAssist?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  firstInhibitorKill?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  firstTowerAssist?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  firstTowerKill?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  gameEndedInEarlySurrender?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  gameEndedInSurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  goldEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  goldSpent?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  inhibitorKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  item0?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  item1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  item2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  item3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  item4?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  item5?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  item6?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  killingSprees?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  kills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  largestCriticalStrike?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  largestKillingSpree?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  largestMultiKill?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  longestTimeSpentLiving?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  magicDamageDealt?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  magicDamageDealtToChampions?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  magicalDamageTaken?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  neutralMinionsKilled?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  neutralMinionsKilledEnemyJungle?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  neutralMinionsKilledTeamJungle?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  objectivePlayerScore?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  participantId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  pentaKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk0?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk0Var1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk0Var2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk0Var3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk1Var1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk1Var2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk1Var3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk2Var1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk2Var2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk2Var3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk3Var1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk3Var2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk3Var3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk4?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk4Var1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk4Var2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk4Var3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk5?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk5Var1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk5Var2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perk5Var3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perkPrimaryStyle?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  perkSubStyle?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  physicalDamageDealt?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  physicalDamageDealtToChampions?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  physicalDamageTaken?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore0?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore1?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore2?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore3?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore4?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore5?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore6?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore7?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore8?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  playerScore9?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  quadraKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  sightWardsBoughtInGame?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  teamEarlySurrendered?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  timeCCingOthers?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalDamageDealt?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalDamageDealtToChampions?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalDamageTaken?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalHeal?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalMinionsKilled?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalPlayerScore?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalScoreRank?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalTimeCrowdControlDealt?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  totalUnitsHealed?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  tripleKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  trueDamageDealt?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  trueDamageDealtToChampions?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  trueDamageTaken?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  turretKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  unrealKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  visionScore?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  visionWardsBoughtInGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  wardsKilled?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  wardsPlaced?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryParticipantStatistics
   */
  win?: boolean;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryPlayerChampMasteryDelta
 */
export interface LolMatchHistoryMatchHistoryPlayerChampMasteryDelta {
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryPlayerChampMasteryDelta
   */
  grade?: string;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryPlayerDelta
 */
export interface LolMatchHistoryMatchHistoryPlayerDelta {
  /**
   *
   * @type {Array<LolMatchHistoryMatchHistoryPlayerGameDelta>}
   * @memberof LolMatchHistoryMatchHistoryPlayerDelta
   */
  deltas?: Array<LolMatchHistoryMatchHistoryPlayerGameDelta>;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPlayerDelta
   */
  originalAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryPlayerDelta
   */
  originalPlatformId?: string;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryPlayerGameDelta
 */
export interface LolMatchHistoryMatchHistoryPlayerGameDelta {
  /**
   *
   * @type {LolMatchHistoryMatchHistoryPlayerChampMasteryDelta}
   * @memberof LolMatchHistoryMatchHistoryPlayerGameDelta
   */
  champMastery?: LolMatchHistoryMatchHistoryPlayerChampMasteryDelta;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPlayerGameDelta
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryPlayerGameDelta
   */
  gamePlatformId?: string;
  /**
   *
   * @type {LolMatchHistoryMatchHistoryPlayerLeagueDelta}
   * @memberof LolMatchHistoryMatchHistoryPlayerGameDelta
   */
  leagueDelta?: LolMatchHistoryMatchHistoryPlayerLeagueDelta;
  /**
   *
   * @type {LolMatchHistoryMatchHistoryPlayerPlatformDelta}
   * @memberof LolMatchHistoryMatchHistoryPlayerGameDelta
   */
  platformDelta?: LolMatchHistoryMatchHistoryPlayerPlatformDelta;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryPlayerLeagueDelta
 */
export interface LolMatchHistoryMatchHistoryPlayerLeagueDelta {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPlayerLeagueDelta
   */
  leaguePointDelta?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolMatchHistoryMatchHistoryPlayerLeagueDelta
   */
  miniSeriesProgress?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryPlayerLeagueDelta
   */
  reason?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPlayerLeagueDelta
   */
  timestamp?: number;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryPlayerPlatformDelta
 */
export interface LolMatchHistoryMatchHistoryPlayerPlatformDelta {
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryPlayerPlatformDelta
   */
  compensationModeEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPlayerPlatformDelta
   */
  ipDelta?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPlayerPlatformDelta
   */
  timestamp?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPlayerPlatformDelta
   */
  xpDelta?: number;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryPosition
 */
export interface LolMatchHistoryMatchHistoryPosition {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPosition
   */
  x?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryPosition
   */
  y?: number;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryTeam
 */
export interface LolMatchHistoryMatchHistoryTeam {
  /**
   *
   * @type {Array<LolMatchHistoryMatchHistoryTeamBan>}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  bans?: Array<LolMatchHistoryMatchHistoryTeamBan>;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  baronKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  dominionVictoryScore?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  dragonKills?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  firstBaron?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  firstBlood?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  firstDargon?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  firstInhibitor?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  firstTower?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  inhibitorKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  riftHeraldKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  teamId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  towerKills?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  vilemawKills?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryTeam
   */
  win?: string;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryTeamBan
 */
export interface LolMatchHistoryMatchHistoryTeamBan {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeamBan
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTeamBan
   */
  pickTurn?: number;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryTimeline
 */
export interface LolMatchHistoryMatchHistoryTimeline {
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  creepsPerMinDeltas?: { [key: string]: number };
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  csDiffPerMinDeltas?: { [key: string]: number };
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  damageTakenDiffPerMinDeltas?: { [key: string]: number };
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  damageTakenPerMinDeltas?: { [key: string]: number };
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  goldPerMinDeltas?: { [key: string]: number };
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  lane?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  participantId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  role?: string;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  xpDiffPerMinDeltas?: { [key: string]: number };
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolMatchHistoryMatchHistoryTimeline
   */
  xpPerMinDeltas?: { [key: string]: number };
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryTimelineFrame
 */
export interface LolMatchHistoryMatchHistoryTimelineFrame {
  /**
   *
   * @type {Array<LolMatchHistoryMatchHistoryEvent>}
   * @memberof LolMatchHistoryMatchHistoryTimelineFrame
   */
  events?: Array<LolMatchHistoryMatchHistoryEvent>;
  /**
   *
   * @type {{ [key: string]: LolMatchHistoryMatchHistoryParticipantFrame; }}
   * @memberof LolMatchHistoryMatchHistoryTimelineFrame
   */
  participantFrames?: {
    [key: string]: LolMatchHistoryMatchHistoryParticipantFrame;
  };
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryMatchHistoryTimelineFrame
   */
  timestamp?: number;
}
/**
 *
 * @export
 * @interface LolMatchHistoryMatchHistoryTimelineFrames
 */
export interface LolMatchHistoryMatchHistoryTimelineFrames {
  /**
   *
   * @type {Array<LolMatchHistoryMatchHistoryTimelineFrame>}
   * @memberof LolMatchHistoryMatchHistoryTimelineFrames
   */
  frames?: Array<LolMatchHistoryMatchHistoryTimelineFrame>;
}
/**
 *
 * @export
 * @interface LolMatchHistoryRecentlyPlayedSummoner
 */
export interface LolMatchHistoryRecentlyPlayedSummoner {
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryRecentlyPlayedSummoner
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryRecentlyPlayedSummoner
   */
  gameCreationDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryRecentlyPlayedSummoner
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryRecentlyPlayedSummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryRecentlyPlayedSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistoryRecentlyPlayedSummoner
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchHistoryRecentlyPlayedSummoner
   */
  teamId?: number;
}
/**
 *
 * @export
 * @interface LolMatchHistorySummoner
 */
export interface LolMatchHistorySummoner {
  /**
   *
   * @type {string}
   * @memberof LolMatchHistorySummoner
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolMatchHistorySummoner
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolMatchmakingGameflowGameData
 */
export interface LolMatchmakingGameflowGameData {
  /**
   *
   * @type {LolMatchmakingGameflowQueue}
   * @memberof LolMatchmakingGameflowGameData
   */
  queue?: LolMatchmakingGameflowQueue;
}
/**
 *
 * @export
 * @interface LolMatchmakingGameflowGameDodge
 */
export interface LolMatchmakingGameflowGameDodge {
  /**
   *
   * @type {Array<number>}
   * @memberof LolMatchmakingGameflowGameDodge
   */
  dodgeIds?: Array<number>;
  /**
   *
   * @type {LolMatchmakingMatchmakingDodgeState}
   * @memberof LolMatchmakingGameflowGameDodge
   */
  state?: LolMatchmakingMatchmakingDodgeState;
}
/**
 *
 * @export
 * @interface LolMatchmakingGameflowGameTypeConfig
 */
export interface LolMatchmakingGameflowGameTypeConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingGameflowGameTypeConfig
   */
  reroll?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchmakingGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolMatchmakingGameflowQueue
 */
export interface LolMatchmakingGameflowQueue {
  /**
   *
   * @type {LolMatchmakingGameflowGameTypeConfig}
   * @memberof LolMatchmakingGameflowQueue
   */
  gameTypeConfig?: LolMatchmakingGameflowGameTypeConfig;
}
/**
 *
 * @export
 * @interface LolMatchmakingGameflowSession
 */
export interface LolMatchmakingGameflowSession {
  /**
   *
   * @type {LolMatchmakingGameflowGameData}
   * @memberof LolMatchmakingGameflowSession
   */
  gameData?: LolMatchmakingGameflowGameData;
  /**
   *
   * @type {LolMatchmakingGameflowGameDodge}
   * @memberof LolMatchmakingGameflowSession
   */
  gameDodge?: LolMatchmakingGameflowGameDodge;
  /**
   *
   * @type {LolMatchmakingGameflowPhase}
   * @memberof LolMatchmakingGameflowSession
   */
  phase?: LolMatchmakingGameflowPhase;
}
/**
 *
 * @export
 * @interface LolMatchmakingLobbyStatus
 */
export interface LolMatchmakingLobbyStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingLobbyStatus
   */
  allowedPlayAgain?: boolean;
  /**
   *
   * @type {LolMatchmakingQueueCustomGameSpectatorPolicy}
   * @memberof LolMatchmakingLobbyStatus
   */
  customSpectatorPolicy?: LolMatchmakingQueueCustomGameSpectatorPolicy;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingLobbyStatus
   */
  isCustom?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingLobbyStatus
   */
  isLeader?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingLobbyStatus
   */
  isSpectator?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolMatchmakingLobbyStatus
   */
  lobbyId?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolMatchmakingLobbyStatus
   */
  memberSummonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingLobbyStatus
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolMatchmakingLoginSession
 */
export interface LolMatchmakingLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {LolMatchmakingLoginSessionState}
   * @memberof LolMatchmakingLoginSession
   */
  state?: LolMatchmakingLoginSessionState;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchmakingLoginSessionState {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolMatchmakingMatchmakingDodgeData
 */
export interface LolMatchmakingMatchmakingDodgeData {
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingDodgeData
   */
  dodgerId?: number;
  /**
   *
   * @type {LolMatchmakingMatchmakingDodgeState}
   * @memberof LolMatchmakingMatchmakingDodgeData
   */
  state?: LolMatchmakingMatchmakingDodgeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchmakingMatchmakingDodgeState {
  Invalid = 'Invalid',
  PartyDodged = 'PartyDodged',
  StrangerDodged = 'StrangerDodged',
  TournamentDodged = 'TournamentDodged',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchmakingMatchmakingDodgeWarning {
  None = 'None',
  Warning = 'Warning',
  Penalty = 'Penalty',
}

/**
 *
 * @export
 * @interface LolMatchmakingMatchmakingLowPriorityData
 */
export interface LolMatchmakingMatchmakingLowPriorityData {
  /**
   *
   * @type {string}
   * @memberof LolMatchmakingMatchmakingLowPriorityData
   */
  bustedLeaverAccessToken?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolMatchmakingMatchmakingLowPriorityData
   */
  penalizedSummonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingLowPriorityData
   */
  penaltyTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingLowPriorityData
   */
  penaltyTimeRemaining?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchmakingMatchmakingLowPriorityData
   */
  reason?: string;
}
/**
 *
 * @export
 * @interface LolMatchmakingMatchmakingReadyCheckResource
 */
export interface LolMatchmakingMatchmakingReadyCheckResource {
  /**
   *
   * @type {Array<number>}
   * @memberof LolMatchmakingMatchmakingReadyCheckResource
   */
  declinerIds?: Array<number>;
  /**
   *
   * @type {LolMatchmakingMatchmakingDodgeWarning}
   * @memberof LolMatchmakingMatchmakingReadyCheckResource
   */
  dodgeWarning?: LolMatchmakingMatchmakingDodgeWarning;
  /**
   *
   * @type {LolMatchmakingMatchmakingReadyCheckResponse}
   * @memberof LolMatchmakingMatchmakingReadyCheckResource
   */
  playerResponse?: LolMatchmakingMatchmakingReadyCheckResponse;
  /**
   *
   * @type {LolMatchmakingMatchmakingReadyCheckState}
   * @memberof LolMatchmakingMatchmakingReadyCheckResource
   */
  state?: LolMatchmakingMatchmakingReadyCheckState;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingMatchmakingReadyCheckResource
   */
  suppressUx?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingReadyCheckResource
   */
  timer?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchmakingMatchmakingReadyCheckResponse {
  None = 'None',
  Accepted = 'Accepted',
  Declined = 'Declined',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchmakingMatchmakingReadyCheckState {
  Invalid = 'Invalid',
  InProgress = 'InProgress',
  EveryoneReady = 'EveryoneReady',
  StrangerNotReady = 'StrangerNotReady',
  PartyNotReady = 'PartyNotReady',
  Error = 'Error',
}

/**
 *
 * @export
 * @interface LolMatchmakingMatchmakingSearchErrorResource
 */
export interface LolMatchmakingMatchmakingSearchErrorResource {
  /**
   *
   * @type {string}
   * @memberof LolMatchmakingMatchmakingSearchErrorResource
   */
  errorType?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingSearchErrorResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolMatchmakingMatchmakingSearchErrorResource
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingSearchErrorResource
   */
  penalizedSummonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingSearchErrorResource
   */
  penaltyTimeRemaining?: number;
}
/**
 *
 * @export
 * @interface LolMatchmakingMatchmakingSearchResource
 */
export interface LolMatchmakingMatchmakingSearchResource {
  /**
   *
   * @type {LolMatchmakingMatchmakingDodgeData}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  dodgeData?: LolMatchmakingMatchmakingDodgeData;
  /**
   *
   * @type {Array<LolMatchmakingMatchmakingSearchErrorResource>}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  errors?: Array<LolMatchmakingMatchmakingSearchErrorResource>;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  estimatedQueueTime?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  isCurrentlyInQueue?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  lobbyId?: string;
  /**
   *
   * @type {LolMatchmakingMatchmakingLowPriorityData}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  lowPriorityData?: LolMatchmakingMatchmakingLowPriorityData;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  queueId?: number;
  /**
   *
   * @type {LolMatchmakingMatchmakingReadyCheckResource}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  readyCheck?: LolMatchmakingMatchmakingReadyCheckResource;
  /**
   *
   * @type {LolMatchmakingMatchmakingSearchState}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  searchState?: LolMatchmakingMatchmakingSearchState;
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingMatchmakingSearchResource
   */
  timeInQueue?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchmakingMatchmakingSearchState {
  Invalid = 'Invalid',
  AbandonedLowPriorityQueue = 'AbandonedLowPriorityQueue',
  Canceled = 'Canceled',
  Searching = 'Searching',
  Found = 'Found',
  Error = 'Error',
  ServiceError = 'ServiceError',
  ServiceShutdown = 'ServiceShutdown',
}

/**
 *
 * @export
 * @interface LolMatchmakingPlayerStatus
 */
export interface LolMatchmakingPlayerStatus {
  /**
   *
   * @type {LolMatchmakingLobbyStatus}
   * @memberof LolMatchmakingPlayerStatus
   */
  currentLobbyStatus?: LolMatchmakingLobbyStatus;
  /**
   *
   * @type {LolMatchmakingLobbyStatus}
   * @memberof LolMatchmakingPlayerStatus
   */
  lastQueuedLobbyStatus?: LolMatchmakingLobbyStatus;
}
/**
 *
 * @export
 * @interface LolMatchmakingQueue
 */
export interface LolMatchmakingQueue {
  /**
   *
   * @type {number}
   * @memberof LolMatchmakingQueue
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMatchmakingQueue
   */
  isTeamBuilderManaged?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMatchmakingQueueCustomGameSpectatorPolicy {
  NotAllowed = 'NotAllowed',
  LobbyAllowed = 'LobbyAllowed',
  FriendsAllowed = 'FriendsAllowed',
  AllAllowed = 'AllAllowed',
}

/**
 *
 * @export
 * @interface LolMissionsCollectionsChampion
 */
export interface LolMissionsCollectionsChampion {
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsCollectionsChampion
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolMissionsCollectionsChampion
   */
  id?: number;
  /**
   *
   * @type {LolMissionsCollectionsOwnership}
   * @memberof LolMissionsCollectionsChampion
   */
  ownership?: LolMissionsCollectionsOwnership;
  /**
   *
   * @type {Array<LolMissionsCollectionsChampionSkin>}
   * @memberof LolMissionsCollectionsChampion
   */
  skins?: Array<LolMissionsCollectionsChampionSkin>;
}
/**
 *
 * @export
 * @interface LolMissionsCollectionsChampionSkin
 */
export interface LolMissionsCollectionsChampionSkin {
  /**
   *
   * @type {number}
   * @memberof LolMissionsCollectionsChampionSkin
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolMissionsCollectionsChampionSkin
   */
  id?: number;
  /**
   *
   * @type {LolMissionsCollectionsOwnership}
   * @memberof LolMissionsCollectionsChampionSkin
   */
  ownership?: LolMissionsCollectionsOwnership;
}
/**
 *
 * @export
 * @interface LolMissionsCollectionsOwnership
 */
export interface LolMissionsCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsCollectionsOwnership
   */
  owned?: boolean;
  /**
   *
   * @type {LolMissionsCollectionsRental}
   * @memberof LolMissionsCollectionsOwnership
   */
  rental?: LolMissionsCollectionsRental;
}
/**
 *
 * @export
 * @interface LolMissionsCollectionsRental
 */
export interface LolMissionsCollectionsRental {
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsCollectionsRental
   */
  rented?: boolean;
}
/**
 *
 * @export
 * @interface LolMissionsCollectionsSummoner
 */
export interface LolMissionsCollectionsSummoner {
  /**
   *
   * @type {number}
   * @memberof LolMissionsCollectionsSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolMissionsCollectionsSummonerIcons
 */
export interface LolMissionsCollectionsSummonerIcons {
  /**
   *
   * @type {Array<number>}
   * @memberof LolMissionsCollectionsSummonerIcons
   */
  icons?: Array<number>;
}
/**
 *
 * @export
 * @interface LolMissionsCollectionsWardSkin
 */
export interface LolMissionsCollectionsWardSkin {
  /**
   *
   * @type {number}
   * @memberof LolMissionsCollectionsWardSkin
   */
  id?: number;
  /**
   *
   * @type {LolMissionsCollectionsOwnership}
   * @memberof LolMissionsCollectionsWardSkin
   */
  ownership?: LolMissionsCollectionsOwnership;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMissionsGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolMissionsGameflowSession
 */
export interface LolMissionsGameflowSession {
  /**
   *
   * @type {LolMissionsGameflowPhase}
   * @memberof LolMissionsGameflowSession
   */
  phase?: LolMissionsGameflowPhase;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMissionsGrantStatus {
  PENDINGFULFILLMENT = 'PENDING_FULFILLMENT',
  PENDINGSELECTION = 'PENDING_SELECTION',
  PENDINGCHILDFULILLMENT = 'PENDING_CHILD_FULILLMENT',
  FULFILLED = 'FULFILLED',
  FAILED = 'FAILED',
}

/**
 *
 * @export
 * @interface LolMissionsInventoryItemWithPayload
 */
export interface LolMissionsInventoryItemWithPayload {
  /**
   *
   * @type {number}
   * @memberof LolMissionsInventoryItemWithPayload
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolMissionsLoginSession
 */
export interface LolMissionsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolMissionsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolMissionsLoginSession
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolMissionsLoyaltyStatus {
  LEGACY = 'LEGACY',
  REWARDSGRANT = 'REWARDS_GRANT',
  EXPIRY = 'EXPIRY',
  CHANGE = 'CHANGE',
  REVOKE = 'REVOKE',
  DISABLED = 'DISABLED',
}

/**
 *
 * @export
 * @interface LolMissionsLoyaltyStatusNotification
 */
export interface LolMissionsLoyaltyStatusNotification {
  /**
   *
   * @type {LolMissionsLoyaltyStatus}
   * @memberof LolMissionsLoyaltyStatusNotification
   */
  status?: LolMissionsLoyaltyStatus;
}
/**
 *
 * @export
 * @interface LolMissionsMissionAsset
 */
export interface LolMissionsMissionAsset {
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionAsset
   */
  internalName?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionAsset
   */
  path?: string;
}
/**
 *
 * @export
 * @interface LolMissionsMissionsNotificationResource
 */
export interface LolMissionsMissionsNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  created?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsMissionsNotificationResource
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolMissionsMissionsNotificationResource
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  detailKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsMissionsNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsNotificationResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolMissionsMissionsSettingsDataResource
 */
export interface LolMissionsMissionsSettingsDataResource {
  /**
   *
   * @type {string}
   * @memberof LolMissionsMissionsSettingsDataResource
   */
  selected_series?: string;
}
/**
 *
 * @export
 * @interface LolMissionsPlayerUpdateResponse
 */
export interface LolMissionsPlayerUpdateResponse {
  /**
   *
   * @type {Array<PlayerMissionDTO>}
   * @memberof LolMissionsPlayerUpdateResponse
   */
  playerMissions?: Array<PlayerMissionDTO>;
  /**
   *
   * @type {Array<SeriesDTO>}
   * @memberof LolMissionsPlayerUpdateResponse
   */
  playerSeries?: Array<SeriesDTO>;
}
/**
 *
 * @export
 * @interface LolMissionsPluginRegionLocaleChangedEvent
 */
export interface LolMissionsPluginRegionLocaleChangedEvent {
  /**
   *
   * @type {string}
   * @memberof LolMissionsPluginRegionLocaleChangedEvent
   */
  locale?: string;
}
/**
 *
 * @export
 * @interface LolMissionsRewardGrant
 */
export interface LolMissionsRewardGrant {
  /**
   *
   * @type {LolMissionsRewardGrantInfo}
   * @memberof LolMissionsRewardGrant
   */
  info?: LolMissionsRewardGrantInfo;
  /**
   *
   * @type {LolMissionsRewardGroup}
   * @memberof LolMissionsRewardGrant
   */
  rewardGroup?: LolMissionsRewardGroup;
}
/**
 *
 * @export
 * @interface LolMissionsRewardGrantInfo
 */
export interface LolMissionsRewardGrantInfo {
  /**
   *
   * @type {string}
   * @memberof LolMissionsRewardGrantInfo
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsRewardGrantInfo
   */
  parentGrantId?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsRewardGrantInfo
   */
  recipientId?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsRewardGrantInfo
   */
  recipientTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsRewardGrantInfo
   */
  rewardGroupId?: string;
  /**
   *
   * @type {{ [key: string]: LolMissionsGrantStatus; }}
   * @memberof LolMissionsRewardGrantInfo
   */
  rewardStatuses?: { [key: string]: LolMissionsGrantStatus };
  /**
   *
   * @type {Array<string>}
   * @memberof LolMissionsRewardGrantInfo
   */
  selectedIds?: Array<string>;
  /**
   *
   * @type {LolMissionsGrantStatus}
   * @memberof LolMissionsRewardGrantInfo
   */
  status?: LolMissionsGrantStatus;
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsRewardGrantInfo
   */
  viewed?: boolean;
}
/**
 *
 * @export
 * @interface LolMissionsRewardGroup
 */
export interface LolMissionsRewardGroup {
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsRewardGroup
   */
  active?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolMissionsRewardGroup
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsRewardGroup
   */
  internalName?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolMissionsRewardGroup
   */
  localizations?: { [key: string]: string };
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolMissionsRewardGroup
   */
  media?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolMissionsRewardGroup
   */
  productId?: string;
  /**
   *
   * @type {Array<LolMissionsSvcReward>}
   * @memberof LolMissionsRewardGroup
   */
  rewards?: Array<LolMissionsSvcReward>;
}
/**
 *
 * @export
 * @interface LolMissionsRewardGroupsSelection
 */
export interface LolMissionsRewardGroupsSelection {
  /**
   *
   * @type {Array<string>}
   * @memberof LolMissionsRewardGroupsSelection
   */
  rewardGroups?: Array<string>;
}
/**
 *
 * @export
 * @interface LolMissionsSeriesOpt
 */
export interface LolMissionsSeriesOpt {
  /**
   *
   * @type {string}
   * @memberof LolMissionsSeriesOpt
   */
  option?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsSeriesOpt
   */
  seriesId?: string;
}
/**
 *
 * @export
 * @interface LolMissionsSvcReward
 */
export interface LolMissionsSvcReward {
  /**
   *
   * @type {string}
   * @memberof LolMissionsSvcReward
   */
  fulfillmentSource?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsSvcReward
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsSvcReward
   */
  itemId?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolMissionsSvcReward
   */
  localizations?: { [key: string]: string };
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolMissionsSvcReward
   */
  media?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof LolMissionsSvcReward
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface LolMissionsTftBattlepass
 */
export interface LolMissionsTftBattlepass {
  /**
   *
   * @type {Array<LolMissionsTftBattlepassMilestone>}
   * @memberof LolMissionsTftBattlepass
   */
  milestones?: Array<LolMissionsTftBattlepassMilestone>;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftBattlepass
   */
  totalPointsEarned?: number;
}
/**
 *
 * @export
 * @interface LolMissionsTftBattlepassMilestone
 */
export interface LolMissionsTftBattlepassMilestone {
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftBattlepassMilestone
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftBattlepassMilestone
   */
  iconImageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftBattlepassMilestone
   */
  label?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftBattlepassMilestone
   */
  missionId?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftBattlepassMilestone
   */
  percentComplete?: number;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftBattlepassMilestone
   */
  pointsForMilestone?: number;
  /**
   *
   * @type {Array<PlayerMissionRewardDTO>}
   * @memberof LolMissionsTftBattlepassMilestone
   */
  rewards?: Array<PlayerMissionRewardDTO>;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftBattlepassMilestone
   */
  state?: string;
}
/**
 *
 * @export
 * @interface LolMissionsTftOrb
 */
export interface LolMissionsTftOrb {
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftOrb
   */
  missionId?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftOrb
   */
  rewardLevel?: number;
  /**
   *
   * @type {Array<PlayerMissionRewardDTO>}
   * @memberof LolMissionsTftOrb
   */
  rewards?: Array<PlayerMissionRewardDTO>;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftOrb
   */
  status?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftOrb
   */
  unlockTime?: number;
}
/**
 *
 * @export
 * @interface LolMissionsTftPaidBattlepass
 */
export interface LolMissionsTftPaidBattlepass {
  /**
   *
   * @type {LolMissionsTftPaidBattlepassMilestone}
   * @memberof LolMissionsTftPaidBattlepass
   */
  activeMilestone?: LolMissionsTftPaidBattlepassMilestone;
  /**
   *
   * @type {Array<LolMissionsTftPaidBattlepassMilestone>}
   * @memberof LolMissionsTftPaidBattlepass
   */
  bonuses?: Array<LolMissionsTftPaidBattlepassMilestone>;
  /**
   *
   * @type {LolMissionsTftPaidBattlepassInfo}
   * @memberof LolMissionsTftPaidBattlepass
   */
  info?: LolMissionsTftPaidBattlepassInfo;
  /**
   *
   * @type {Array<LolMissionsTftPaidBattlepassMilestone>}
   * @memberof LolMissionsTftPaidBattlepass
   */
  milestones?: Array<LolMissionsTftPaidBattlepassMilestone>;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftPaidBattlepass
   */
  totalPointsEarned?: number;
}
/**
 *
 * @export
 * @interface LolMissionsTftPaidBattlepassInfo
 */
export interface LolMissionsTftPaidBattlepassInfo {
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassInfo
   */
  backgroundImageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassInfo
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftPaidBattlepassInfo
   */
  endDate?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsTftPaidBattlepassInfo
   */
  premium?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftPaidBattlepassInfo
   */
  startDate?: number;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassInfo
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolMissionsTftPaidBattlepassMilestone
 */
export interface LolMissionsTftPaidBattlepassMilestone {
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  internalName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  isBonus?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  isKeystone?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  isLocked?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  isPaid?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  largeIconImageUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  missionId?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  pointsEarnedForMilestone?: number;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  pointsNeededForMilestone?: number;
  /**
   *
   * @type {Array<PlayerMissionRewardDTO>}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  rewards?: Array<PlayerMissionRewardDTO>;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  smallIconImageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  status?: string;
  /**
   *
   * @type {string}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  title?: string;
  /**
   *
   * @type {number}
   * @memberof LolMissionsTftPaidBattlepassMilestone
   */
  totalPointsForMilestone?: number;
}
/**
 *
 * @export
 * @interface LolMissionsTftWeeklyMissions
 */
export interface LolMissionsTftWeeklyMissions {
  /**
   *
   * @type {Array<PlayerMissionDTO>}
   * @memberof LolMissionsTftWeeklyMissions
   */
  missions?: Array<PlayerMissionDTO>;
}
/**
 *
 * @export
 * @interface LolMissionsUserInfo
 */
export interface LolMissionsUserInfo {
  /**
   *
   * @type {string}
   * @memberof LolMissionsUserInfo
   */
  userInfo?: string;
}
/**
 *
 * @export
 * @interface LolModeProgressionInventoryRewardItem
 */
export interface LolModeProgressionInventoryRewardItem {
  /**
   *
   * @type {number}
   * @memberof LolModeProgressionInventoryRewardItem
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolModeProgressionInventoryRewardItem
   */
  uuid?: string;
}
/**
 *
 * @export
 * @interface LolModeProgressionLoadout
 */
export interface LolModeProgressionLoadout {
  /**
   *
   * @type {string}
   * @memberof LolModeProgressionLoadout
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: LolModeProgressionLoadoutsSlot; }}
   * @memberof LolModeProgressionLoadout
   */
  loadout?: { [key: string]: LolModeProgressionLoadoutsSlot };
  /**
   *
   * @type {string}
   * @memberof LolModeProgressionLoadout
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolModeProgressionLoadout
   */
  scope?: string;
}
/**
 *
 * @export
 * @interface LolModeProgressionLoadoutsSlot
 */
export interface LolModeProgressionLoadoutsSlot {
  /**
   *
   * @type {string}
   * @memberof LolModeProgressionLoadoutsSlot
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolModeProgressionLoadoutsSlot
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolModeProgressionLoadoutsSlot
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolNpeRewardsAccountSettingsData
 */
export interface LolNpeRewardsAccountSettingsData {
  /**
   *
   * @type {LolNpeRewardsChallengesSettings}
   * @memberof LolNpeRewardsAccountSettingsData
   */
  challenges?: LolNpeRewardsChallengesSettings;
  /**
   *
   * @type {LolNpeRewardsLoginSeriesSettings}
   * @memberof LolNpeRewardsAccountSettingsData
   */
  login?: LolNpeRewardsLoginSeriesSettings;
}
/**
 *
 * @export
 * @interface LolNpeRewardsAccountSettingsPayload
 */
export interface LolNpeRewardsAccountSettingsPayload {
  /**
   *
   * @type {LolNpeRewardsAccountSettingsData}
   * @memberof LolNpeRewardsAccountSettingsPayload
   */
  data?: LolNpeRewardsAccountSettingsData;
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsAccountSettingsPayload
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolNpeRewardsAllRewards
 */
export interface LolNpeRewardsAllRewards {
  /**
   *
   * @type {LolNpeRewardsRewardSeries}
   * @memberof LolNpeRewardsAllRewards
   */
  level?: LolNpeRewardsRewardSeries;
  /**
   *
   * @type {LolNpeRewardsRewardSeries}
   * @memberof LolNpeRewardsAllRewards
   */
  login?: LolNpeRewardsRewardSeries;
}
/**
 *
 * @export
 * @interface LolNpeRewardsChallengesProgress
 */
export interface LolNpeRewardsChallengesProgress {
  /**
   *
   * @type {LolNpeRewardsProgress}
   * @memberof LolNpeRewardsChallengesProgress
   */
  progress?: LolNpeRewardsProgress;
}
/**
 *
 * @export
 * @interface LolNpeRewardsChallengesSettings
 */
export interface LolNpeRewardsChallengesSettings {
  /**
   *
   * @type {boolean}
   * @memberof LolNpeRewardsChallengesSettings
   */
  allMissionsCompleted?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsChallengesSettings
   */
  totalCount?: number;
}
/**
 *
 * @export
 * @interface LolNpeRewardsLoginSeriesSettings
 */
export interface LolNpeRewardsLoginSeriesSettings {
  /**
   *
   * @type {boolean}
   * @memberof LolNpeRewardsLoginSeriesSettings
   */
  allRewardsClaimed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsLoginSeriesSettings
   */
  lastCompletedMissionDate?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsLoginSeriesSettings
   */
  lastCompletedMissionInternalName?: string;
}
/**
 *
 * @export
 * @interface LolNpeRewardsMission
 */
export interface LolNpeRewardsMission {
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsMission
   */
  completedDate?: number;
  /**
   *
   * @type {LolNpeRewardsMissionDisplay}
   * @memberof LolNpeRewardsMission
   */
  display?: LolNpeRewardsMissionDisplay;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsMission
   */
  internalName?: string;
  /**
   *
   * @type {LolNpeRewardsMissionsRewardPackMetaData}
   * @memberof LolNpeRewardsMission
   */
  metadata?: LolNpeRewardsMissionsRewardPackMetaData;
  /**
   *
   * @type {Array<LolNpeRewardsObjective>}
   * @memberof LolNpeRewardsMission
   */
  objectives?: Array<LolNpeRewardsObjective>;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsMission
   */
  seriesName?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsMission
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolNpeRewardsMissionDisplay
 */
export interface LolNpeRewardsMissionDisplay {
  /**
   *
   * @type {Array<string>}
   * @memberof LolNpeRewardsMissionDisplay
   */
  locations?: Array<string>;
}
/**
 *
 * @export
 * @interface LolNpeRewardsMissionSeries
 */
export interface LolNpeRewardsMissionSeries {
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsMissionSeries
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsMissionSeries
   */
  internalName?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsMissionSeries
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolNpeRewardsMissionSeriesOptIn
 */
export interface LolNpeRewardsMissionSeriesOptIn {
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsMissionSeriesOptIn
   */
  option?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsMissionSeriesOptIn
   */
  seriesId?: string;
}
/**
 *
 * @export
 * @interface LolNpeRewardsMissionsRewardPackMetaData
 */
export interface LolNpeRewardsMissionsRewardPackMetaData {
  /**
   *
   * @type {LolNpeRewardsRewardPack}
   * @memberof LolNpeRewardsMissionsRewardPackMetaData
   */
  npeRewardPack?: LolNpeRewardsRewardPack;
}
/**
 *
 * @export
 * @interface LolNpeRewardsObjective
 */
export interface LolNpeRewardsObjective {
  /**
   *
   * @type {LolNpeRewardsProgress}
   * @memberof LolNpeRewardsObjective
   */
  progress?: LolNpeRewardsProgress;
}
/**
 *
 * @export
 * @interface LolNpeRewardsProgress
 */
export interface LolNpeRewardsProgress {
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsProgress
   */
  currentProgress?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsProgress
   */
  lastViewedProgress?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsProgress
   */
  totalCount?: number;
}
/**
 *
 * @export
 * @interface LolNpeRewardsRequirements
 */
export interface LolNpeRewardsRequirements {
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsRequirements
   */
  day?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsRequirements
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsRequirements
   */
  missionInternalName?: string;
}
/**
 *
 * @export
 * @interface LolNpeRewardsReward
 */
export interface LolNpeRewardsReward {
  /**
   *
   * @type {object}
   * @memberof LolNpeRewardsReward
   */
  data?: object;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsReward
   */
  renderer?: string;
}
/**
 *
 * @export
 * @interface LolNpeRewardsRewardPack
 */
export interface LolNpeRewardsRewardPack {
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsRewardPack
   */
  delay?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsRewardPack
   */
  index?: number;
  /**
   *
   * @type {LolNpeRewardsReward}
   * @memberof LolNpeRewardsRewardPack
   */
  majorReward?: LolNpeRewardsReward;
  /**
   *
   * @type {Array<LolNpeRewardsReward>}
   * @memberof LolNpeRewardsRewardPack
   */
  minorRewards?: Array<LolNpeRewardsReward>;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeRewardsRewardPack
   */
  premiumReward?: boolean;
  /**
   *
   * @type {LolNpeRewardsRequirements}
   * @memberof LolNpeRewardsRewardPack
   */
  requirements?: LolNpeRewardsRequirements;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsRewardPack
   */
  rewardKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsRewardPack
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeRewardsRewardPack
   */
  type?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsRewardPack
   */
  unlockTime?: number;
}
/**
 *
 * @export
 * @interface LolNpeRewardsRewardSeries
 */
export interface LolNpeRewardsRewardSeries {
  /**
   *
   * @type {Array<LolNpeRewardsRewardPack>}
   * @memberof LolNpeRewardsRewardSeries
   */
  rewardPacks?: Array<LolNpeRewardsRewardPack>;
}
/**
 *
 * @export
 * @interface LolNpeRewardsRewardSeriesState
 */
export interface LolNpeRewardsRewardSeriesState {
  /**
   *
   * @type {boolean}
   * @memberof LolNpeRewardsRewardSeriesState
   */
  allRewardsClaimed?: boolean;
}
/**
 *
 * @export
 * @interface LolNpeRewardsSummoner
 */
export interface LolNpeRewardsSummoner {
  /**
   *
   * @type {number}
   * @memberof LolNpeRewardsSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathAccountSettingsCategoryResource
 */
export interface LolNpeTutorialPathAccountSettingsCategoryResource {
  /**
   *
   * @type {LolNpeTutorialPathAccountSettingsTutorial}
   * @memberof LolNpeTutorialPathAccountSettingsCategoryResource
   */
  data?: LolNpeTutorialPathAccountSettingsTutorial;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathAccountSettingsCategoryResource
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathAccountSettingsTutorial
 */
export interface LolNpeTutorialPathAccountSettingsTutorial {
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathAccountSettingsTutorial
   */
  hasSeenTutorialPath?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathAccountSettingsTutorial
   */
  hasSkippedTutorialPath?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathAccountSettingsTutorial
   */
  shouldSeeNewPlayerExperience?: boolean;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathCollectionsChampion
 */
export interface LolNpeTutorialPathCollectionsChampion {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  alias?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  banVoPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  chooseVoPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  name?: string;
  /**
   *
   * @type {LolNpeTutorialPathCollectionsChampionSpell}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  passive?: LolNpeTutorialPathCollectionsChampionSpell;
  /**
   *
   * @type {Array<string>}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  roles?: Array<string>;
  /**
   *
   * @type {Array<LolNpeTutorialPathCollectionsChampionSpell>}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  spells?: Array<LolNpeTutorialPathCollectionsChampionSpell>;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  squarePortraitPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathCollectionsChampion
   */
  stingerSfxPath?: string;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathCollectionsChampionSpell
 */
export interface LolNpeTutorialPathCollectionsChampionSpell {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathCollectionsChampionSpell
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathCollectionsChampionSpell
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathExpiringWarning
 */
export interface LolNpeTutorialPathExpiringWarning {
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathExpiringWarning
   */
  alertTime?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathExpiringWarning
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathExpiringWarning
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolNpeTutorialPathGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolNpeTutorialPathGameflowSession
 */
export interface LolNpeTutorialPathGameflowSession {
  /**
   *
   * @type {LolNpeTutorialPathGameflowPhase}
   * @memberof LolNpeTutorialPathGameflowSession
   */
  phase?: LolNpeTutorialPathGameflowPhase;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathIds
 */
export interface LolNpeTutorialPathIds {
  /**
   *
   * @type {Array<string>}
   * @memberof LolNpeTutorialPathIds
   */
  missionIds?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolNpeTutorialPathIds
   */
  seriesIds?: Array<string>;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathLobbyChangeQueue
 */
export interface LolNpeTutorialPathLobbyChangeQueue {
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathLobbyChangeQueue
   */
  isCustom?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathLobbyChangeQueue
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathLobbyDto
 */
export interface LolNpeTutorialPathLobbyDto {
  /**
   *
   * @type {LolNpeTutorialPathLobbyGameConfigDto}
   * @memberof LolNpeTutorialPathLobbyDto
   */
  gameConfig?: LolNpeTutorialPathLobbyGameConfigDto;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathLobbyDto
   */
  partyId?: string;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathLobbyGameConfigDto
 */
export interface LolNpeTutorialPathLobbyGameConfigDto {
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathLobbyGameConfigDto
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathLoginSession
 */
export interface LolNpeTutorialPathLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathLoginSession
   */
  isNewPlayer?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathLoginSession
   */
  platformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathMission
 */
export interface LolNpeTutorialPathMission {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  backgroundImageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  celebrationType?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  clientNotifyLevel?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathMission
   */
  completedDate?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  completionExpression?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathMission
   */
  cooldownTimeMillis?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  description?: string;
  /**
   *
   * @type {LolNpeTutorialPathMissionDisplay}
   * @memberof LolNpeTutorialPathMission
   */
  display?: LolNpeTutorialPathMissionDisplay;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  displayType?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathMission
   */
  endTime?: number;
  /**
   *
   * @type {Array<LolNpeTutorialPathExpiringWarning>}
   * @memberof LolNpeTutorialPathMission
   */
  expiringWarnings?: Array<LolNpeTutorialPathExpiringWarning>;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  helperText?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  iconImageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  internalName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathMission
   */
  isNew?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathMission
   */
  lastUpdatedTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  locale?: string;
  /**
   *
   * @type {LolNpeTutorialPathMissionMetadata}
   * @memberof LolNpeTutorialPathMission
   */
  metadata?: LolNpeTutorialPathMissionMetadata;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  missionType?: string;
  /**
   *
   * @type {Array<LolNpeTutorialPathObjective>}
   * @memberof LolNpeTutorialPathMission
   */
  objectives?: Array<LolNpeTutorialPathObjective>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolNpeTutorialPathMission
   */
  requirements?: Array<string>;
  /**
   *
   * @type {LolNpeTutorialPathRewardStrategy}
   * @memberof LolNpeTutorialPathMission
   */
  rewardStrategy?: LolNpeTutorialPathRewardStrategy;
  /**
   *
   * @type {Array<LolNpeTutorialPathReward>}
   * @memberof LolNpeTutorialPathMission
   */
  rewards?: Array<LolNpeTutorialPathReward>;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  seriesName?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathMission
   */
  startTime?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  status?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathMission
   */
  title?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathMission
   */
  viewed?: boolean;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathMissionDisplay
 */
export interface LolNpeTutorialPathMissionDisplay {
  /**
   *
   * @type {Array<string>}
   * @memberof LolNpeTutorialPathMissionDisplay
   */
  attributes?: Array<string>;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathMissionMetadata
 */
export interface LolNpeTutorialPathMissionMetadata {
  /**
   *
   * @type {LolNpeTutorialPathTutorialMetadata}
   * @memberof LolNpeTutorialPathMissionMetadata
   */
  tutorial?: LolNpeTutorialPathTutorialMetadata;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathObjective
 */
export interface LolNpeTutorialPathObjective {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathObjective
   */
  description?: string;
  /**
   *
   * @type {LolNpeTutorialPathProgress}
   * @memberof LolNpeTutorialPathObjective
   */
  progress?: LolNpeTutorialPathProgress;
  /**
   *
   * @type {Array<string>}
   * @memberof LolNpeTutorialPathObjective
   */
  rewardGroups?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathObjective
   */
  sequence?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathObjective
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathProgress
 */
export interface LolNpeTutorialPathProgress {
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathProgress
   */
  currentProgress?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathProgress
   */
  lastViewedProgress?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathProgress
   */
  totalCount?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathRequirement
 */
export interface LolNpeTutorialPathRequirement {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathRequirement
   */
  expression?: string;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathReward
 */
export interface LolNpeTutorialPathReward {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathReward
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathReward
   */
  iconUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathReward
   */
  itemId?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathReward
   */
  quantity?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathReward
   */
  rewardFulfilled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathReward
   */
  rewardGroup?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathReward
   */
  rewardGroupSelected?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathReward
   */
  rewardType?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathReward
   */
  sequence?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathReward
   */
  uniqueName?: string;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathRewardStrategy
 */
export interface LolNpeTutorialPathRewardStrategy {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathRewardStrategy
   */
  groupStrategy?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathRewardStrategy
   */
  selectMaxGroupCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathRewardStrategy
   */
  selectMinGroupCount?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathSeries
 */
export interface LolNpeTutorialPathSeries {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathSeries
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathSeries
   */
  internalName?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathSeries
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathSeriesOpt
 */
export interface LolNpeTutorialPathSeriesOpt {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathSeriesOpt
   */
  option?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathSeriesOpt
   */
  seriesId?: string;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathSummoner
 */
export interface LolNpeTutorialPathSummoner {
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathSummoner
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathSummoner
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathSummoner
   */
  percentCompleteForNextLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathSummoner
   */
  summonerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathSummoner
   */
  xpSinceLastLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathSummoner
   */
  xpUntilNextLevel?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathSummonerIcon
 */
export interface LolNpeTutorialPathSummonerIcon {
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathSummonerIcon
   */
  profileIconId?: number;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathTutorial
 */
export interface LolNpeTutorialPathTutorial {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorial
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorial
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorial
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathTutorial
   */
  isViewed?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorial
   */
  queueId?: string;
  /**
   *
   * @type {Array<LolNpeTutorialPathTutorialReward>}
   * @memberof LolNpeTutorialPathTutorial
   */
  rewards?: Array<LolNpeTutorialPathTutorialReward>;
  /**
   *
   * @type {LolNpeTutorialPathTutorialStatus}
   * @memberof LolNpeTutorialPathTutorial
   */
  status?: LolNpeTutorialPathTutorialStatus;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathTutorial
   */
  stepNumber?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorial
   */
  title?: string;
  /**
   *
   * @type {LolNpeTutorialPathTutorialType}
   * @memberof LolNpeTutorialPathTutorial
   */
  type?: LolNpeTutorialPathTutorialType;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathTutorial
   */
  useChosenChampion?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathTutorial
   */
  useQuickSearchMatchmaking?: boolean;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathTutorialMetadata
 */
export interface LolNpeTutorialPathTutorialMetadata {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolNpeTutorialPathTutorialMetadata
   */
  displayRewards?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorialMetadata
   */
  queueId?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathTutorialMetadata
   */
  stepNumber?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathTutorialMetadata
   */
  useChosenChampion?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathTutorialMetadata
   */
  useQuickSearchMatchmaking?: boolean;
}
/**
 *
 * @export
 * @interface LolNpeTutorialPathTutorialReward
 */
export interface LolNpeTutorialPathTutorialReward {
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorialReward
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorialReward
   */
  iconUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorialReward
   */
  itemId?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolNpeTutorialPathTutorialReward
   */
  rewardFulfilled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorialReward
   */
  rewardType?: string;
  /**
   *
   * @type {number}
   * @memberof LolNpeTutorialPathTutorialReward
   */
  sequence?: number;
  /**
   *
   * @type {string}
   * @memberof LolNpeTutorialPathTutorialReward
   */
  uniqueName?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolNpeTutorialPathTutorialStatus {
  LOCKED = 'LOCKED',
  UNLOCKED = 'UNLOCKED',
  COMPLETED = 'COMPLETED',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolNpeTutorialPathTutorialType {
  CARD = 'CARD',
  REWARD = 'REWARD',
}

/**
 *
 * @export
 * @interface LolPatchChunkingPatcherEnvironment
 */
export interface LolPatchChunkingPatcherEnvironment {
  /**
   *
   * @type {boolean}
   * @memberof LolPatchChunkingPatcherEnvironment
   */
  client_patcher_available?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchChunkingPatcherEnvironment
   */
  client_patcher_enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchChunkingPatcherEnvironment
   */
  game_patcher_available?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchChunkingPatcherEnvironment
   */
  game_patcher_enabled?: boolean;
}
/**
 *
 * @export
 * @interface LolPatchComponentActionProgress
 */
export interface LolPatchComponentActionProgress {
  /**
   *
   * @type {string}
   * @memberof LolPatchComponentActionProgress
   */
  currentItem?: string;
  /**
   *
   * @type {LolPatchComponentStateProgress}
   * @memberof LolPatchComponentActionProgress
   */
  network?: LolPatchComponentStateProgress;
  /**
   *
   * @type {LolPatchComponentStateWorkType}
   * @memberof LolPatchComponentActionProgress
   */
  primaryWork?: LolPatchComponentStateWorkType;
  /**
   *
   * @type {LolPatchComponentStateProgress}
   * @memberof LolPatchComponentActionProgress
   */
  total?: LolPatchComponentStateProgress;
}
/**
 *
 * @export
 * @interface LolPatchComponentState
 */
export interface LolPatchComponentState {
  /**
   *
   * @type {LolPatchComponentStateAction}
   * @memberof LolPatchComponentState
   */
  action?: LolPatchComponentStateAction;
  /**
   *
   * @type {string}
   * @memberof LolPatchComponentState
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchComponentState
   */
  isCorrupted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchComponentState
   */
  isUpToDate?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchComponentState
   */
  isUpdateAvailable?: boolean;
  /**
   *
   * @type {LolPatchComponentActionProgress}
   * @memberof LolPatchComponentState
   */
  progress?: LolPatchComponentActionProgress;
  /**
   *
   * @type {string}
   * @memberof LolPatchComponentState
   */
  timeOfLastUpToDateCheckISO8601?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPatchComponentStateAction {
  Idle = 'Idle',
  CheckingForUpdates = 'CheckingForUpdates',
  Patching = 'Patching',
  Repairing = 'Repairing',
  Migrating = 'Migrating',
}

/**
 *
 * @export
 * @interface LolPatchComponentStateProgress
 */
export interface LolPatchComponentStateProgress {
  /**
   *
   * @type {number}
   * @memberof LolPatchComponentStateProgress
   */
  bytesComplete?: number;
  /**
   *
   * @type {number}
   * @memberof LolPatchComponentStateProgress
   */
  bytesPerSecond?: number;
  /**
   *
   * @type {number}
   * @memberof LolPatchComponentStateProgress
   */
  bytesRequired?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPatchComponentStateWorkType {
  Scanning = 'Scanning',
  Network = 'Network',
  Disk = 'Disk',
}

/**
 *
 * @export
 * @interface LolPatchEntitlementsTokenResource
 */
export interface LolPatchEntitlementsTokenResource {
  /**
   *
   * @type {string}
   * @memberof LolPatchEntitlementsTokenResource
   */
  accessToken?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPatchEntitlementsTokenResource
   */
  entitlements?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolPatchEntitlementsTokenResource
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolPatchInstallPaths
 */
export interface LolPatchInstallPaths {
  /**
   *
   * @type {string}
   * @memberof LolPatchInstallPaths
   */
  gameExecutablePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchInstallPaths
   */
  gameInstallRoot?: string;
}
/**
 *
 * @export
 * @interface LolPatchNotification
 */
export interface LolPatchNotification {
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolPatchNotification
   */
  data?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof LolPatchNotification
   */
  id?: string;
  /**
   *
   * @type {LolPatchNotificationId}
   * @memberof LolPatchNotification
   */
  notificationId?: LolPatchNotificationId;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPatchNotificationId {
  UnspecifiedError = 'UnspecifiedError',
  ConnectionError = 'ConnectionError',
  MissingFilesError = 'MissingFilesError',
  FailedToWriteError = 'FailedToWriteError',
  WillRestoreClientBackupOnRestart = 'WillRestoreClientBackupOnRestart',
  DidRestoreClientBackup = 'DidRestoreClientBackup',
  NotEnoughDiskSpace = 'NotEnoughDiskSpace',
  BrokenPermissions = 'BrokenPermissions',
}

/**
 *
 * @export
 * @interface LolPatchPatchSieveCompatVersion
 */
export interface LolPatchPatchSieveCompatVersion {
  /**
   *
   * @type {string}
   * @memberof LolPatchPatchSieveCompatVersion
   */
  id?: string;
}
/**
 *
 * @export
 * @interface LolPatchPatchSieveDownload
 */
export interface LolPatchPatchSieveDownload {
  /**
   *
   * @type {boolean}
   * @memberof LolPatchPatchSieveDownload
   */
  scd_required?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPatchPatchSieveDownload
   */
  url?: string;
}
/**
 *
 * @export
 * @interface LolPatchPatchSieveLabelValue
 */
export interface LolPatchPatchSieveLabelValue {
  /**
   *
   * @type {Array<string>}
   * @memberof LolPatchPatchSieveLabelValue
   */
  values?: Array<string>;
}
/**
 *
 * @export
 * @interface LolPatchPatchSieveQueryResponse
 */
export interface LolPatchPatchSieveQueryResponse {
  /**
   *
   * @type {Array<LolPatchPatchSieveRelease>}
   * @memberof LolPatchPatchSieveQueryResponse
   */
  releases?: Array<LolPatchPatchSieveRelease>;
}
/**
 *
 * @export
 * @interface LolPatchPatchSieveRelease
 */
export interface LolPatchPatchSieveRelease {
  /**
   *
   * @type {LolPatchPatchSieveCompatVersion}
   * @memberof LolPatchPatchSieveRelease
   */
  compat_version?: LolPatchPatchSieveCompatVersion;
  /**
   *
   * @type {LolPatchPatchSieveDownload}
   * @memberof LolPatchPatchSieveRelease
   */
  download?: LolPatchPatchSieveDownload;
  /**
   *
   * @type {LolPatchPatchSieveReleaseInfo}
   * @memberof LolPatchPatchSieveRelease
   */
  release?: LolPatchPatchSieveReleaseInfo;
}
/**
 *
 * @export
 * @interface LolPatchPatchSieveReleaseInfo
 */
export interface LolPatchPatchSieveReleaseInfo {
  /**
   *
   * @type {string}
   * @memberof LolPatchPatchSieveReleaseInfo
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: LolPatchPatchSieveLabelValue; }}
   * @memberof LolPatchPatchSieveReleaseInfo
   */
  labels?: { [key: string]: LolPatchPatchSieveLabelValue };
  /**
   *
   * @type {string}
   * @memberof LolPatchPatchSieveReleaseInfo
   */
  product?: string;
}
/**
 *
 * @export
 * @interface LolPatchPatcherInstallSettings
 */
export interface LolPatchPatcherInstallSettings {
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherInstallSettings
   */
  client_patch_url?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherInstallSettings
   */
  client_patcher?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchPatcherInstallSettings
   */
  client_patcher_available?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherInstallSettings
   */
  game_patch_url?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherInstallSettings
   */
  game_patcher?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchPatcherInstallSettings
   */
  game_patcher_available?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPatchPatcherInstallSettings
   */
  locales?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolPatchPatcherInstallSettings
   */
  max_download_speed_mbps?: number;
}
/**
 *
 * @export
 * @interface LolPatchPatcherRegionSettings
 */
export interface LolPatchPatcherRegionSettings {
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherRegionSettings
   */
  client_patcher?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherRegionSettings
   */
  game_patcher?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherRegionSettings
   */
  patchline?: string;
}
/**
 *
 * @export
 * @interface LolPatchPatcherSelfUpdateSettings
 */
export interface LolPatchPatcherSelfUpdateSettings {
  /**
   *
   * @type {number}
   * @memberof LolPatchPatcherSelfUpdateSettings
   */
  restart_delay?: number;
}
/**
 *
 * @export
 * @interface LolPatchPatcherSettings
 */
export interface LolPatchPatcherSettings {
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherSettings
   */
  channel?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolPatchPatcherSettings
   */
  headers?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolPatchPatcherSettings
   */
  patchsieve_url?: string;
  /**
   *
   * @type {number}
   * @memberof LolPatchPatcherSettings
   */
  product_refresh_period?: number;
  /**
   *
   * @type {LolPatchPatcherSelfUpdateSettings}
   * @memberof LolPatchPatcherSettings
   */
  self_update?: LolPatchPatcherSelfUpdateSettings;
}
/**
 *
 * @export
 * @interface LolPatchProductState
 */
export interface LolPatchProductState {
  /**
   *
   * @type {LolPatchComponentStateAction}
   * @memberof LolPatchProductState
   */
  action?: LolPatchComponentStateAction;
  /**
   *
   * @type {Array<LolPatchComponentState>}
   * @memberof LolPatchProductState
   */
  components?: Array<LolPatchComponentState>;
  /**
   *
   * @type {string}
   * @memberof LolPatchProductState
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchProductState
   */
  isCorrupted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchProductState
   */
  isStopped?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchProductState
   */
  isUpToDate?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchProductState
   */
  isUpdateAvailable?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPatchProductState
   */
  percentPatched?: number;
}
/**
 *
 * @export
 * @interface LolPatchPublishedReleaseResponse
 */
export interface LolPatchPublishedReleaseResponse {
  /**
   *
   * @type {string}
   * @memberof LolPatchPublishedReleaseResponse
   */
  client_patch_url?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchPublishedReleaseResponse
   */
  game_patch_url?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchPublishedReleaseResponse
   */
  timestamp?: string;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolPatchPublishedReleaseResponse
   */
  toggles?: { [key: string]: number };
  /**
   *
   * @type {number}
   * @memberof LolPatchPublishedReleaseResponse
   */
  version?: number;
}
/**
 *
 * @export
 * @interface LolPatchRegionLocale
 */
export interface LolPatchRegionLocale {
  /**
   *
   * @type {string}
   * @memberof LolPatchRegionLocale
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchRegionLocale
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolPatchScdCookie
 */
export interface LolPatchScdCookie {
  /**
   *
   * @type {string}
   * @memberof LolPatchScdCookie
   */
  cookie?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchScdCookie
   */
  domain?: string;
  /**
   *
   * @type {string}
   * @memberof LolPatchScdCookie
   */
  path?: string;
}
/**
 *
 * @export
 * @interface LolPatchScdCookies
 */
export interface LolPatchScdCookies {
  /**
   *
   * @type {Array<LolPatchScdCookie>}
   * @memberof LolPatchScdCookies
   */
  cookies?: Array<LolPatchScdCookie>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPatchScdEnabled {
  Off = 'Off',
  On = 'On',
}

/**
 *
 * @export
 * @interface LolPatchStatus
 */
export interface LolPatchStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolPatchStatus
   */
  connectedToPatchServer?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchStatus
   */
  hasUpdatesOnRestart?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchStatus
   */
  willRestartOnSelfUpdate?: boolean;
}
/**
 *
 * @export
 * @interface LolPatchSupportedGameRelease
 */
export interface LolPatchSupportedGameRelease {
  /**
   *
   * @type {string}
   * @memberof LolPatchSupportedGameRelease
   */
  artifact_id?: string;
  /**
   *
   * @type {LolPatchPatchSieveDownload}
   * @memberof LolPatchSupportedGameRelease
   */
  download?: LolPatchPatchSieveDownload;
  /**
   *
   * @type {boolean}
   * @memberof LolPatchSupportedGameRelease
   */
  selected?: boolean;
}
/**
 *
 * @export
 * @interface LolPatchSupportedGameReleases
 */
export interface LolPatchSupportedGameReleases {
  /**
   *
   * @type {Array<LolPatchSupportedGameRelease>}
   * @memberof LolPatchSupportedGameReleases
   */
  supported_game_releases?: Array<LolPatchSupportedGameRelease>;
}
/**
 *
 * @export
 * @interface LolPatchUxResource
 */
export interface LolPatchUxResource {
  /**
   *
   * @type {boolean}
   * @memberof LolPatchUxResource
   */
  visible?: boolean;
}
/**
 *
 * @export
 * @interface LolPerksChampSelectAction
 */
export interface LolPerksChampSelectAction {
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectAction
   */
  actorCellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectAction
   */
  championId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksChampSelectAction
   */
  completed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectAction
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksChampSelectAction
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPerksChampSelectBannedChampions
 */
export interface LolPerksChampSelectBannedChampions {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksChampSelectBannedChampions
   */
  myTeamBans?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectBannedChampions
   */
  numBans?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksChampSelectBannedChampions
   */
  theirTeamBans?: Array<number>;
}
/**
 *
 * @export
 * @interface LolPerksChampSelectChatRoomDetails
 */
export interface LolPerksChampSelectChatRoomDetails {
  /**
   *
   * @type {string}
   * @memberof LolPerksChampSelectChatRoomDetails
   */
  chatRoomName?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksChampSelectChatRoomDetails
   */
  chatRoomPassword?: string;
}
/**
 *
 * @export
 * @interface LolPerksChampSelectMySelection
 */
export interface LolPerksChampSelectMySelection {
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectMySelection
   */
  selectedSkinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectMySelection
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectMySelection
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectMySelection
   */
  wardSkinId?: number;
}
/**
 *
 * @export
 * @interface LolPerksChampSelectPlayerSelection
 */
export interface LolPerksChampSelectPlayerSelection {
  /**
   *
   * @type {string}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  assignedPosition?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  championPickIntent?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  selectedSkinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  team?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectPlayerSelection
   */
  wardSkinId?: number;
}
/**
 *
 * @export
 * @interface LolPerksChampSelectSession
 */
export interface LolPerksChampSelectSession {
  /**
   *
   * @type {Array<object>}
   * @memberof LolPerksChampSelectSession
   */
  actions?: Array<object>;
  /**
   *
   * @type {LolPerksChampSelectBannedChampions}
   * @memberof LolPerksChampSelectSession
   */
  bans?: LolPerksChampSelectBannedChampions;
  /**
   *
   * @type {LolPerksChampSelectChatRoomDetails}
   * @memberof LolPerksChampSelectSession
   */
  chatDetails?: LolPerksChampSelectChatRoomDetails;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksChampSelectSession
   */
  isSpectating?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectSession
   */
  localPlayerCellId?: number;
  /**
   *
   * @type {Array<LolPerksChampSelectPlayerSelection>}
   * @memberof LolPerksChampSelectSession
   */
  myTeam?: Array<LolPerksChampSelectPlayerSelection>;
  /**
   *
   * @type {Array<LolPerksChampSelectPlayerSelection>}
   * @memberof LolPerksChampSelectSession
   */
  theirTeam?: Array<LolPerksChampSelectPlayerSelection>;
  /**
   *
   * @type {LolPerksChampSelectTimer}
   * @memberof LolPerksChampSelectSession
   */
  timer?: LolPerksChampSelectTimer;
  /**
   *
   * @type {Array<LolPerksChampSelectTradeContract>}
   * @memberof LolPerksChampSelectSession
   */
  trades?: Array<LolPerksChampSelectTradeContract>;
}
/**
 *
 * @export
 * @interface LolPerksChampSelectTimer
 */
export interface LolPerksChampSelectTimer {
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectTimer
   */
  adjustedTimeLeftInPhase?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectTimer
   */
  internalNowInEpochMs?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksChampSelectTimer
   */
  isInfinite?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPerksChampSelectTimer
   */
  phase?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectTimer
   */
  totalTimeInPhase?: number;
}
/**
 *
 * @export
 * @interface LolPerksChampSelectTradeContract
 */
export interface LolPerksChampSelectTradeContract {
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectTradeContract
   */
  cellId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampSelectTradeContract
   */
  id?: number;
  /**
   *
   * @type {LolPerksChampSelectTradeState}
   * @memberof LolPerksChampSelectTradeContract
   */
  state?: LolPerksChampSelectTradeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPerksChampSelectTradeState {
  AVAILABLE = 'AVAILABLE',
  BUSY = 'BUSY',
  INVALID = 'INVALID',
  RECEIVED = 'RECEIVED',
  SENT = 'SENT',
}

/**
 *
 * @export
 * @interface LolPerksChampionPreferredStyle
 */
export interface LolPerksChampionPreferredStyle {
  /**
   *
   * @type {number}
   * @memberof LolPerksChampionPreferredStyle
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksChampionPreferredStyle
   */
  championName?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksChampionPreferredStyle
   */
  style?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPerksCustomizationLimits {
  Locked = 'Locked',
  CanSelectPages = 'CanSelectPages',
  CanSelectKeystones = 'CanSelectKeystones',
  CanSelectPrimaries = 'CanSelectPrimaries',
  CanSelectSplash = 'CanSelectSplash',
  CanUseAdvancedStyles = 'CanUseAdvancedStyles',
}

/**
 *
 * @export
 * @interface LolPerksDefaultStatModsPerSubStyle
 */
export interface LolPerksDefaultStatModsPerSubStyle {
  /**
   *
   * @type {number}
   * @memberof LolPerksDefaultStatModsPerSubStyle
   */
  id?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksDefaultStatModsPerSubStyle
   */
  perks?: Array<number>;
}
/**
 *
 * @export
 * @interface LolPerksGameCustomizationDTO
 */
export interface LolPerksGameCustomizationDTO {
  /**
   *
   * @type {string}
   * @memberof LolPerksGameCustomizationDTO
   */
  category?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksGameCustomizationDTO
   */
  content?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksGameCustomizationDTO
   */
  isTeambuilder?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPerksGameCustomizationDTO
   */
  queueType?: number;
}
/**
 *
 * @export
 * @interface LolPerksGameflowGameData
 */
export interface LolPerksGameflowGameData {
  /**
   *
   * @type {number}
   * @memberof LolPerksGameflowGameData
   */
  gameId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksGameflowGameData
   */
  isCustomGame?: boolean;
  /**
   *
   * @type {LolPerksQueue}
   * @memberof LolPerksGameflowGameData
   */
  queue?: LolPerksQueue;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPerksGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolPerksGameflowSession
 */
export interface LolPerksGameflowSession {
  /**
   *
   * @type {LolPerksGameflowGameData}
   * @memberof LolPerksGameflowSession
   */
  gameData?: LolPerksGameflowGameData;
  /**
   *
   * @type {LolPerksGameflowPhase}
   * @memberof LolPerksGameflowSession
   */
  phase?: LolPerksGameflowPhase;
}
/**
 *
 * @export
 * @interface LolPerksGetGameCustomizationDTO
 */
export interface LolPerksGetGameCustomizationDTO {
  /**
   *
   * @type {string}
   * @memberof LolPerksGetGameCustomizationDTO
   */
  queueType?: string;
}
/**
 *
 * @export
 * @interface LolPerksGetResultFromServiceDTO
 */
export interface LolPerksGetResultFromServiceDTO {
  /**
   *
   * @type {string}
   * @memberof LolPerksGetResultFromServiceDTO
   */
  error?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksGetResultFromServiceDTO
   */
  result?: string;
}
/**
 *
 * @export
 * @interface LolPerksInventoryRunePageCount
 */
export interface LolPerksInventoryRunePageCount {
  /**
   *
   * @type {number}
   * @memberof LolPerksInventoryRunePageCount
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface LolPerksLoginSession
 */
export interface LolPerksLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolPerksLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolPerksLoginSessionState}
   * @memberof LolPerksLoginSession
   */
  state?: LolPerksLoginSessionState;
  /**
   *
   * @type {number}
   * @memberof LolPerksLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPerksLoginSessionState {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolPerksNameCheckPayload
 */
export interface LolPerksNameCheckPayload {
  /**
   *
   * @type {string}
   * @memberof LolPerksNameCheckPayload
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksNameCheckPayload
   */
  shard?: string;
}
/**
 *
 * @export
 * @interface LolPerksNameCheckReponse
 */
export interface LolPerksNameCheckReponse {
  /**
   *
   * @type {Array<string>}
   * @memberof LolPerksNameCheckReponse
   */
  errors?: Array<string>;
}
/**
 *
 * @export
 * @interface LolPerksPerkBook
 */
export interface LolPerksPerkBook {
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkBook
   */
  currentPageId?: number;
  /**
   *
   * @type {Array<LolPerksPerkPageResource>}
   * @memberof LolPerksPerkBook
   */
  pages?: Array<LolPerksPerkPageResource>;
}
/**
 *
 * @export
 * @interface LolPerksPerkGDSResource
 */
export interface LolPerksPerkGDSResource {
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkGDSResource
   */
  iconPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkGDSResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkGDSResource
   */
  longDesc?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkGDSResource
   */
  majorChangePatchVersion?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkGDSResource
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkGDSResource
   */
  shortDesc?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkGDSResource
   */
  tooltip?: string;
}
/**
 *
 * @export
 * @interface LolPerksPerkIdListResource
 */
export interface LolPerksPerkIdListResource {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkIdListResource
   */
  perkIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolPerksPerkPageResource
 */
export interface LolPerksPerkPageResource {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkPageResource
   */
  autoModifiedSelections?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksPerkPageResource
   */
  current?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkPageResource
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksPerkPageResource
   */
  isActive?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksPerkPageResource
   */
  isDeletable?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksPerkPageResource
   */
  isEditable?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksPerkPageResource
   */
  isValid?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkPageResource
   */
  lastModified?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkPageResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkPageResource
   */
  order?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkPageResource
   */
  primaryStyleId?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkPageResource
   */
  selectedPerkIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkPageResource
   */
  subStyleId?: number;
}
/**
 *
 * @export
 * @interface LolPerksPerkSettingResource
 */
export interface LolPerksPerkSettingResource {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkSettingResource
   */
  perkIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkSettingResource
   */
  perkStyle?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkSettingResource
   */
  perkSubStyle?: number;
}
/**
 *
 * @export
 * @interface LolPerksPerkSettings
 */
export interface LolPerksPerkSettings {
  /**
   *
   * @type {Array<LolPerksPerkPageResource>}
   * @memberof LolPerksPerkSettings
   */
  pages?: Array<LolPerksPerkPageResource>;
  /**
   *
   * @type {{ [key: string]: LolPerksPerkBook; }}
   * @memberof LolPerksPerkSettings
   */
  perShardPerkBooks?: { [key: string]: LolPerksPerkBook };
  /**
   *
   * @type {LolPerksUISettings}
   * @memberof LolPerksPerkSettings
   */
  settings?: LolPerksUISettings;
}
/**
 *
 * @export
 * @interface LolPerksPerkStyleResource
 */
export interface LolPerksPerkStyleResource {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkStyleResource
   */
  allowedSubStyles?: Array<number>;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolPerksPerkStyleResource
   */
  assetMap?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkStyleResource
   */
  defaultPageName?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkStyleResource
   */
  defaultPerks?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkStyleResource
   */
  defaultPerksWhenSplashed?: Array<number>;
  /**
   *
   * @type {Array<LolPerksDefaultStatModsPerSubStyle>}
   * @memberof LolPerksPerkStyleResource
   */
  defaultStatModsPerSubStyle?: Array<LolPerksDefaultStatModsPerSubStyle>;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkStyleResource
   */
  defaultSubStyle?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkStyleResource
   */
  iconPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkStyleResource
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksPerkStyleResource
   */
  isAdvanced?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkStyleResource
   */
  name?: string;
  /**
   *
   * @type {Array<LolPerksPerkStyleSlotResource>}
   * @memberof LolPerksPerkStyleResource
   */
  slots?: Array<LolPerksPerkStyleSlotResource>;
  /**
   *
   * @type {Array<LolPerksPerkSubStyleBonusResource>}
   * @memberof LolPerksPerkStyleResource
   */
  subStyleBonus?: Array<LolPerksPerkSubStyleBonusResource>;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkStyleResource
   */
  tooltip?: string;
}
/**
 *
 * @export
 * @interface LolPerksPerkStyleSlotResource
 */
export interface LolPerksPerkStyleSlotResource {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkStyleSlotResource
   */
  perks?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkStyleSlotResource
   */
  slotLabel?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkStyleSlotResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPerksPerkSubStyleBonusResource
 */
export interface LolPerksPerkSubStyleBonusResource {
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkSubStyleBonusResource
   */
  perkId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkSubStyleBonusResource
   */
  styleId?: number;
}
/**
 *
 * @export
 * @interface LolPerksPerkUIPerk
 */
export interface LolPerksPerkUIPerk {
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIPerk
   */
  iconPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkUIPerk
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIPerk
   */
  longDesc?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIPerk
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIPerk
   */
  shortDesc?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIPerk
   */
  tooltip?: string;
}
/**
 *
 * @export
 * @interface LolPerksPerkUISlot
 */
export interface LolPerksPerkUISlot {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkUISlot
   */
  perks?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUISlot
   */
  slotLabel?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUISlot
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPerksPerkUIStyle
 */
export interface LolPerksPerkUIStyle {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkUIStyle
   */
  allowedSubStyles?: Array<number>;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolPerksPerkUIStyle
   */
  assetMap?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIStyle
   */
  defaultPageName?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksPerkUIStyle
   */
  defaultPerks?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkUIStyle
   */
  defaultSubStyle?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIStyle
   */
  iconPath?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksPerkUIStyle
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIStyle
   */
  name?: string;
  /**
   *
   * @type {Array<LolPerksPerkUISlot>}
   * @memberof LolPerksPerkUIStyle
   */
  slots?: Array<LolPerksPerkUISlot>;
  /**
   *
   * @type {Array<LolPerksPerkSubStyleBonusResource>}
   * @memberof LolPerksPerkUIStyle
   */
  subStyleBonus?: Array<LolPerksPerkSubStyleBonusResource>;
  /**
   *
   * @type {string}
   * @memberof LolPerksPerkUIStyle
   */
  tooltip?: string;
}
/**
 *
 * @export
 * @interface LolPerksPlatformConfig
 */
export interface LolPerksPlatformConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolPerksPlatformConfig
   */
  AutoRepairPagesEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksPlatformConfig
   */
  PerksEnabled?: boolean;
}
/**
 *
 * @export
 * @interface LolPerksPlayerInventory
 */
export interface LolPerksPlayerInventory {
  /**
   *
   * @type {number}
   * @memberof LolPerksPlayerInventory
   */
  ownedPageCount?: number;
}
/**
 *
 * @export
 * @interface LolPerksQueue
 */
export interface LolPerksQueue {
  /**
   *
   * @type {number}
   * @memberof LolPerksQueue
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksQueue
   */
  isTeamBuilderManaged?: boolean;
}
/**
 *
 * @export
 * @interface LolPerksRiotMessagingServiceMessage
 */
export interface LolPerksRiotMessagingServiceMessage {
  /**
   *
   * @type {string}
   * @memberof LolPerksRiotMessagingServiceMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksRiotMessagingServiceMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksRiotMessagingServiceMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksRiotMessagingServiceMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksRiotMessagingServiceMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @interface LolPerksServiceSettings
 */
export interface LolPerksServiceSettings {
  /**
   *
   * @type {boolean}
   * @memberof LolPerksServiceSettings
   */
  serverSideStorageAvailable?: boolean;
}
/**
 *
 * @export
 * @interface LolPerksSettingsStorageContainer
 */
export interface LolPerksSettingsStorageContainer {
  /**
   *
   * @type {LolPerksPerkSettings}
   * @memberof LolPerksSettingsStorageContainer
   */
  data?: LolPerksPerkSettings;
  /**
   *
   * @type {number}
   * @memberof LolPerksSettingsStorageContainer
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolPerksSummoner
 */
export interface LolPerksSummoner {
  /**
   *
   * @type {number}
   * @memberof LolPerksSummoner
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksSummoner
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolPerksSummoner
   */
  internalName?: string;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummoner
   */
  percentCompleteForNextLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksSummoner
   */
  puuid?: string;
  /**
   *
   * @type {LolPerksSummonerRerollPoints}
   * @memberof LolPerksSummoner
   */
  rerollPoints?: LolPerksSummonerRerollPoints;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummoner
   */
  summonerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummoner
   */
  xpSinceLastLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummoner
   */
  xpUntilNextLevel?: number;
}
/**
 *
 * @export
 * @interface LolPerksSummonerRerollPoints
 */
export interface LolPerksSummonerRerollPoints {
  /**
   *
   * @type {number}
   * @memberof LolPerksSummonerRerollPoints
   */
  currentPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummonerRerollPoints
   */
  maxRolls?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummonerRerollPoints
   */
  numberOfRolls?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummonerRerollPoints
   */
  pointsCostToRoll?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksSummonerRerollPoints
   */
  pointsToReroll?: number;
}
/**
 *
 * @export
 * @interface LolPerksUISettings
 */
export interface LolPerksUISettings {
  /**
   *
   * @type {string}
   * @memberof LolPerksUISettings
   */
  gameplayPatchVersionSeen?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPerksUISettings
   */
  gameplayUpdatedPerksSeen?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksUISettings
   */
  gridModeEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksUISettings
   */
  showLongDescriptions?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksUISettings
   */
  showPresetPages?: boolean;
}
/**
 *
 * @export
 * @interface LolPerksUpdatePageOrderRequest
 */
export interface LolPerksUpdatePageOrderRequest {
  /**
   *
   * @type {number}
   * @memberof LolPerksUpdatePageOrderRequest
   */
  destinationPageId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksUpdatePageOrderRequest
   */
  offset?: number;
  /**
   *
   * @type {number}
   * @memberof LolPerksUpdatePageOrderRequest
   */
  targetPageId?: number;
}
/**
 *
 * @export
 * @interface LolPerksValidatePageNameData
 */
export interface LolPerksValidatePageNameData {
  /**
   *
   * @type {number}
   * @memberof LolPerksValidatePageNameData
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPerksValidatePageNameData
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolPerksValidatePageNameResponse
 */
export interface LolPerksValidatePageNameResponse {
  /**
   *
   * @type {LolPerksNameCheckReponse}
   * @memberof LolPerksValidatePageNameResponse
   */
  nameCheckResponse?: LolPerksNameCheckReponse;
  /**
   *
   * @type {boolean}
   * @memberof LolPerksValidatePageNameResponse
   */
  success?: boolean;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersAccessTokenResource
 */
export interface LolPersonalizedOffersAccessTokenResource {
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersAccessTokenResource
   */
  expiry?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPersonalizedOffersAccessTokenResource
   */
  scopes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersAccessTokenResource
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersOffer
 */
export interface LolPersonalizedOffersOffer {
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersOffer
   */
  discountPrice?: number;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersOffer
   */
  expirationDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersOffer
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersOffer
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersOffer
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersOffer
   */
  offerId?: string;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersOffer
   */
  originalPrice?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPersonalizedOffersOffer
   */
  owned?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPersonalizedOffersOffer
   */
  revealed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersOffer
   */
  spotIndex?: number;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersOfferData
 */
export interface LolPersonalizedOffersOfferData {
  /**
   *
   * @type {Array<LolPersonalizedOffersOffer>}
   * @memberof LolPersonalizedOffersOfferData
   */
  offers?: Array<LolPersonalizedOffersOffer>;
  /**
   *
   * @type {LolPersonalizedOffersPromotion}
   * @memberof LolPersonalizedOffersOfferData
   */
  promotion?: LolPersonalizedOffersPromotion;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersOfferId
 */
export interface LolPersonalizedOffersOfferId {
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersOfferId
   */
  offerId?: string;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersOfferIds
 */
export interface LolPersonalizedOffersOfferIds {
  /**
   *
   * @type {Array<LolPersonalizedOffersOfferId>}
   * @memberof LolPersonalizedOffersOfferIds
   */
  offers?: Array<LolPersonalizedOffersOfferId>;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersOfferRequest
 */
export interface LolPersonalizedOffersOfferRequest {
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersOfferRequest
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersOfferRequest
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersOfferRequest
   */
  offerId?: string;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersOfferRequest
   */
  price?: number;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersOfferRequests
 */
export interface LolPersonalizedOffersOfferRequests {
  /**
   *
   * @type {Array<LolPersonalizedOffersOfferRequest>}
   * @memberof LolPersonalizedOffersOfferRequests
   */
  offers?: Array<LolPersonalizedOffersOfferRequest>;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersPromotion
 */
export interface LolPersonalizedOffersPromotion {
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersPromotion
   */
  endTime?: string;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersPromotion
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersPromotion
   */
  startTime?: string;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersPurchaseItem
 */
export interface LolPersonalizedOffersPurchaseItem {
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersPurchaseItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersPurchaseItem
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersPurchaseItem
   */
  pricePaid?: number;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersPurchaseResponse
 */
export interface LolPersonalizedOffersPurchaseResponse {
  /**
   *
   * @type {Array<LolPersonalizedOffersPurchaseItem>}
   * @memberof LolPersonalizedOffersPurchaseResponse
   */
  items?: Array<LolPersonalizedOffersPurchaseItem>;
  /**
   *
   * @type {LolPersonalizedOffersWallet}
   * @memberof LolPersonalizedOffersPurchaseResponse
   */
  wallet?: LolPersonalizedOffersWallet;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersUIOffer
 */
export interface LolPersonalizedOffersUIOffer {
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersUIOffer
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersUIOffer
   */
  discountPrice?: number;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersUIOffer
   */
  expirationDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersUIOffer
   */
  id?: string;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersUIOffer
   */
  originalPrice?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPersonalizedOffersUIOffer
   */
  owned?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPersonalizedOffersUIOffer
   */
  revealed?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersUIOffer
   */
  skinId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersUIOffer
   */
  skinName?: string;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersUIOffer
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersUIStatus
 */
export interface LolPersonalizedOffersUIStatus {
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersUIStatus
   */
  endTime?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPersonalizedOffersUIStatus
   */
  hubEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersUIStatus
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolPersonalizedOffersUIStatus
   */
  startTime?: string;
}
/**
 *
 * @export
 * @interface LolPersonalizedOffersWallet
 */
export interface LolPersonalizedOffersWallet {
  /**
   *
   * @type {number}
   * @memberof LolPersonalizedOffersWallet
   */
  rp?: number;
}
/**
 *
 * @export
 * @interface LolPftGameClientEndOfGameStats
 */
export interface LolPftGameClientEndOfGameStats {
  /**
   *
   * @type {number}
   * @memberof LolPftGameClientEndOfGameStats
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftGameClientEndOfGameStats
   */
  gameMode?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPftGameClientEndOfGameStats
   */
  isRanked?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftGameClientEndOfGameStats
   */
  queueId?: number;
  /**
   *
   * @type {object}
   * @memberof LolPftGameClientEndOfGameStats
   */
  statsBlock?: object;
}
/**
 *
 * @export
 * @interface LolPftGameflowGameDodge
 */
export interface LolPftGameflowGameDodge {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPftGameflowGameDodge
   */
  dodgeIds?: Array<number>;
  /**
   *
   * @type {LolPftGameflowGameDodgeState}
   * @memberof LolPftGameflowGameDodge
   */
  state?: LolPftGameflowGameDodgeState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPftGameflowGameDodgeState {
  Invalid = 'Invalid',
  PartyDodged = 'PartyDodged',
  StrangerDodged = 'StrangerDodged',
  TournamentDodged = 'TournamentDodged',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolPftGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolPftGameflowSession
 */
export interface LolPftGameflowSession {
  /**
   *
   * @type {LolPftGameflowGameDodge}
   * @memberof LolPftGameflowSession
   */
  gameDodge?: LolPftGameflowGameDodge;
  /**
   *
   * @type {LolPftGameflowPhase}
   * @memberof LolPftGameflowSession
   */
  phase?: LolPftGameflowPhase;
}
/**
 *
 * @export
 * @interface LolPftLoginSession
 */
export interface LolPftLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolPftLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolPftLoginSessionStates}
   * @memberof LolPftLoginSession
   */
  state?: LolPftLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolPftLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPftLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolPftPFTEndOfGamePlayer
 */
export interface LolPftPFTEndOfGamePlayer {
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  botPlayer?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  elo?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  eloChange?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  gameId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  isReportingDisabled?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  items?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  leaver?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  leaves?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  level?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  losses?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  skinName?: string;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  spell2Id?: number;
  /**
   *
   * @type {object}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  stats?: object;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  teamId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  userId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePlayer
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LolPftPFTEndOfGamePoints
 */
export interface LolPftPFTEndOfGamePoints {
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePoints
   */
  pointChangeFromChampionsOwned?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePoints
   */
  pointChangeFromGameplay?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePoints
   */
  pointsUntilNextReroll?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePoints
   */
  pointsUsed?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePoints
   */
  previousPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePoints
   */
  rerollCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGamePoints
   */
  totalPoints?: number;
}
/**
 *
 * @export
 * @interface LolPftPFTEndOfGameStats
 */
export interface LolPftPFTEndOfGameStats {
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  basePoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  battleBoostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  boostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  boostXpEarned?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  causedEarlySurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  coOpVsAiMinutesLeftToday?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  coOpVsAiMsecsUntilReset?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  completionBonusPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  customMinutesLeftToday?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  customMsecsUntilReset?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameStats
   */
  difficulty?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  earlySurrenderAccomplice?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  elo?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  eloChange?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  experienceEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  experienceTotal?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  firstWinBonus?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  gameEndedInEarlySurrender?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  gameLength?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameStats
   */
  gameMode?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPftPFTEndOfGameStats
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameStats
   */
  gameType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  imbalancedTeamsNoPoints?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  invalid?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  ipEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  ipTotal?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  isAramGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  leveledUp?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  loyaltyBoostIpEarned?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  loyaltyBoostXpEarned?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameStats
   */
  myTeamStatus?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPftPFTEndOfGameStats
   */
  newSpells?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  odinBonusIp?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  partyRewardsBonusIpEarned?: number;
  /**
   *
   * @type {object}
   * @memberof LolPftPFTEndOfGameStats
   */
  pointsPenalties?: object;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  previousLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  previousXpTotal?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  queueBonusEarned?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameStats
   */
  queueType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  ranked?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  reportGameId?: number;
  /**
   *
   * @type {LolPftPFTEndOfGamePoints}
   * @memberof LolPftPFTEndOfGameStats
   */
  rerollData?: LolPftPFTEndOfGamePoints;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameStats
   */
  roomName?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameStats
   */
  roomPassword?: string;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  rpEarned?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  sendStatsToTournamentProvider?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  skinId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  skinIndex?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameStats
   */
  summonerName?: string;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  talentPointsGained?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameStats
   */
  teamEarlySurrendered?: boolean;
  /**
   *
   * @type {Array<LolPftPFTEndOfGameTeam>}
   * @memberof LolPftPFTEndOfGameStats
   */
  teams?: Array<LolPftPFTEndOfGameTeam>;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  timeUntilNextFirstWinBonus?: number;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameStats
   */
  userId?: number;
}
/**
 *
 * @export
 * @interface LolPftPFTEndOfGameTeam
 */
export interface LolPftPFTEndOfGameTeam {
  /**
   *
   * @type {Array<number>}
   * @memberof LolPftPFTEndOfGameTeam
   */
  championBans?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameTeam
   */
  fullId?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameTeam
   */
  isBottomTeam?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameTeam
   */
  isPlayerTeam?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPftPFTEndOfGameTeam
   */
  isWinningTeam?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameTeam
   */
  memberStatusString?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameTeam
   */
  name?: string;
  /**
   *
   * @type {Array<LolPftPFTEndOfGamePlayer>}
   * @memberof LolPftPFTEndOfGameTeam
   */
  players?: Array<LolPftPFTEndOfGamePlayer>;
  /**
   *
   * @type {object}
   * @memberof LolPftPFTEndOfGameTeam
   */
  stats?: object;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEndOfGameTeam
   */
  tag?: string;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEndOfGameTeam
   */
  teamId?: number;
}
/**
 *
 * @export
 * @interface LolPftPFTEvent
 */
export interface LolPftPFTEvent {
  /**
   *
   * @type {string}
   * @memberof LolPftPFTEvent
   */
  action?: string;
  /**
   *
   * @type {Array<object>}
   * @memberof LolPftPFTEvent
   */
  data?: Array<object>;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTEvent
   */
  playerSurveyId?: number;
}
/**
 *
 * @export
 * @interface LolPftPFTMetadata
 */
export interface LolPftPFTMetadata {
  /**
   *
   * @type {number}
   * @memberof LolPftPFTMetadata
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTMetadata
   */
  appName?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTMetadata
   */
  appVersion?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTMetadata
   */
  env?: string;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTMetadata
   */
  homepageTimer?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTMetadata
   */
  locale?: string;
  /**
   *
   * @type {LolPftPFTEndOfGameStats}
   * @memberof LolPftPFTMetadata
   */
  stats?: LolPftPFTEndOfGameStats;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTMetadata
   */
  systemOs?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTMetadata
   */
  webRegion?: string;
}
/**
 *
 * @export
 * @interface LolPftPFTQuestionResponse
 */
export interface LolPftPFTQuestionResponse {
  /**
   *
   * @type {number}
   * @memberof LolPftPFTQuestionResponse
   */
  questionId?: number;
  /**
   *
   * @type {object}
   * @memberof LolPftPFTQuestionResponse
   */
  responseData?: object;
}
/**
 *
 * @export
 * @interface LolPftPFTSurvey
 */
export interface LolPftPFTSurvey {
  /**
   *
   * @type {string}
   * @memberof LolPftPFTSurvey
   */
  caption?: string;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolPftPFTSurvey
   */
  data?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof LolPftPFTSurvey
   */
  display?: string;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTSurvey
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTSurvey
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTSurvey
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPftPFTSurveyResults
 */
export interface LolPftPFTSurveyResults {
  /**
   *
   * @type {Array<LolPftPFTEvent>}
   * @memberof LolPftPFTSurveyResults
   */
  actions?: Array<LolPftPFTEvent>;
  /**
   *
   * @type {Array<LolPftPFTQuestionResponse>}
   * @memberof LolPftPFTSurveyResults
   */
  questionResponses?: Array<LolPftPFTQuestionResponse>;
}
/**
 *
 * @export
 * @interface LolPftPFTSurveyV1
 */
export interface LolPftPFTSurveyV1 {
  /**
   *
   * @type {string}
   * @memberof LolPftPFTSurveyV1
   */
  caption?: string;
  /**
   *
   * @type {number}
   * @memberof LolPftPFTSurveyV1
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTSurveyV1
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTSurveyV1
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof LolPftPFTSurveyV1
   */
  url?: string;
}
/**
 *
 * @export
 * @interface LolPftSummoner
 */
export interface LolPftSummoner {
  /**
   *
   * @type {number}
   * @memberof LolPftSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorBanNotification
 */
export interface LolPlayerBehaviorBanNotification {
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerBehaviorBanNotification
   */
  displayReformCard?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorBanNotification
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerBehaviorBanNotification
   */
  isPermaBan?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorBanNotification
   */
  reason?: string;
  /**
   *
   * @type {LolPlayerBehaviorNotificationSource}
   * @memberof LolPlayerBehaviorBanNotification
   */
  source?: LolPlayerBehaviorNotificationSource;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorBanNotification
   */
  timeUntilBanExpires?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPlayerBehaviorGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolPlayerBehaviorNotificationSource {
  Invalid = 'Invalid',
  Login = 'Login',
  ForcedShutdown = 'ForcedShutdown',
  Message = 'Message',
}

/**
 *
 * @export
 * @interface LolPlayerBehaviorPlayerBehaviorConfig
 */
export interface LolPlayerBehaviorPlayerBehaviorConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerBehaviorPlayerBehaviorConfig
   */
  IsLoaded?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerBehaviorPlayerBehaviorConfig
   */
  ReformCardV2Enabled?: boolean;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorPlayerBehaviorGameflowSessionResource
 */
export interface LolPlayerBehaviorPlayerBehaviorGameflowSessionResource {
  /**
   *
   * @type {LolPlayerBehaviorGameflowPhase}
   * @memberof LolPlayerBehaviorPlayerBehaviorGameflowSessionResource
   */
  phase?: LolPlayerBehaviorGameflowPhase;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorPlayerBehaviorSimpleMessage
 */
export interface LolPlayerBehaviorPlayerBehaviorSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorPlayerBehaviorSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerBehaviorSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPlayerBehaviorPlayerBehaviorSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerBehaviorSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorPlayerNotificationResource
 */
export interface LolPlayerBehaviorPlayerNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  created?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  detailKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorPlayerNotificationResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorReformCard
 */
export interface LolPlayerBehaviorReformCard {
  /**
   *
   * @type {Array<string>}
   * @memberof LolPlayerBehaviorReformCard
   */
  chatLogs?: Array<string>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPlayerBehaviorReformCard
   */
  gameIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCard
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorReformCard
   */
  playerFacingMessage?: string;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCard
   */
  punishmentLengthGames?: number;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCard
   */
  punishmentLengthTime?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorReformCard
   */
  punishmentType?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorReformCard
   */
  reason?: string;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCard
   */
  restrictedChatGamesRemaining?: number;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCard
   */
  timeWhenPunishmentExpires?: number;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorReformCardChatLogs
 */
export interface LolPlayerBehaviorReformCardChatLogs {
  /**
   *
   * @type {Array<string>}
   * @memberof LolPlayerBehaviorReformCardChatLogs
   */
  inGameChatLogs?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPlayerBehaviorReformCardChatLogs
   */
  postGameChatLogs?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPlayerBehaviorReformCardChatLogs
   */
  preGameChatLogs?: Array<string>;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorReformCardV2
 */
export interface LolPlayerBehaviorReformCardV2 {
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  playerFacingMessage?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  punishedForGameIds?: Array<number>;
  /**
   *
   * @type {Array<LolPlayerBehaviorReformCardChatLogs>}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  punishedForReformCardChatLogs?: Array<LolPlayerBehaviorReformCardChatLogs>;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  punishedUntilDateMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  punishmentLengthGames?: number;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  punishmentLengthMillis?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  punishmentReason?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorReformCardV2
   */
  punishmentType?: string;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorReporterFeedback
 */
export interface LolPlayerBehaviorReporterFeedback {
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReporterFeedback
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorReporterFeedback
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorReporterFeedback
   */
  messageId?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerBehaviorReporterFeedback
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPlayerBehaviorRestrictionNotification
 */
export interface LolPlayerBehaviorRestrictionNotification {
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerBehaviorRestrictionNotification
   */
  displayReformCard?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorRestrictionNotification
   */
  gamesRemaining?: number;
  /**
   *
   * @type {number}
   * @memberof LolPlayerBehaviorRestrictionNotification
   */
  id?: number;
  /**
   *
   * @type {LolPlayerBehaviorNotificationSource}
   * @memberof LolPlayerBehaviorRestrictionNotification
   */
  source?: LolPlayerBehaviorNotificationSource;
}
/**
 *
 * @export
 * @interface LolPlayerLevelUpEndOfGameStats
 */
export interface LolPlayerLevelUpEndOfGameStats {
  /**
   *
   * @type {string}
   * @memberof LolPlayerLevelUpEndOfGameStats
   */
  gameMode?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPlayerLevelUpEndOfGameStats
   */
  gameMutators?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolPlayerLevelUpEndOfGameStats
   */
  gameType?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerLevelUpEndOfGameStats
   */
  leveledUp?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPlayerLevelUpEndOfGameStats
   */
  newSpells?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpEndOfGameStats
   */
  previousLevel?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerLevelUpEndOfGameStats
   */
  queueType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpEndOfGameStats
   */
  rpEarned?: number;
}
/**
 *
 * @export
 * @interface LolPlayerLevelUpGameDataSummonerSpell
 */
export interface LolPlayerLevelUpGameDataSummonerSpell {
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpGameDataSummonerSpell
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpGameDataSummonerSpell
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolPlayerLevelUpLoginSession
 */
export interface LolPlayerLevelUpLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolPlayerLevelUpLoginSessionStates}
   * @memberof LolPlayerLevelUpLoginSession
   */
  state?: LolPlayerLevelUpLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPlayerLevelUpLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolPlayerLevelUpPlayerLevelUpEvent
 */
export interface LolPlayerLevelUpPlayerLevelUpEvent {
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  leveledUp?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  newQueues?: Array<number>;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  newRuneSlotUnlocked?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  newSpells?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  newSummonerLevel?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  nowHasAccessToLoot?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  nowHasAccessToPublicChatRooms?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  rpEarned?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerLevelUpPlayerLevelUpEvent
   */
  switchedToStandardFreeToPlayChampRotation?: boolean;
}
/**
 *
 * @export
 * @interface LolPlayerLevelUpPlayerLevelUpEventAck
 */
export interface LolPlayerLevelUpPlayerLevelUpEventAck {
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpPlayerLevelUpEventAck
   */
  newSummonerLevel?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerLevelUpPlayerLevelUpEventAck
   */
  seenThisEvent?: boolean;
}
/**
 *
 * @export
 * @interface LolPlayerLevelUpQueue
 */
export interface LolPlayerLevelUpQueue {
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpQueue
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LolPlayerLevelUpQueue
   */
  minLevel?: number;
}
/**
 *
 * @export
 * @interface LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
 */
export interface LolPlayerMessagingDynamicCelebrationMessagingNotificationResource {
  /**
   *
   * @type {number}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  celebrationBody?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  celebrationMessage?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  celebrationTitle?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  celebrationType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  inventoryType?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  itemId?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  itemQuantity?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  msgId?: string;
  /**
   *
   * @type {number}
   * @memberof LolPlayerMessagingDynamicCelebrationMessagingNotificationResource
   */
  status?: number;
}
/**
 *
 * @export
 * @interface LolPlayerMessagingLoginDataPacket
 */
export interface LolPlayerMessagingLoginDataPacket {
  /**
   *
   * @type {Array<LolPlayerMessagingSimpleMessage>}
   * @memberof LolPlayerMessagingLoginDataPacket
   */
  simpleMessages?: Array<LolPlayerMessagingSimpleMessage>;
}
/**
 *
 * @export
 * @interface LolPlayerMessagingPlayerMessagingNotificationResource
 */
export interface LolPlayerMessagingPlayerMessagingNotificationResource {
  /**
   *
   * @type {number}
   * @memberof LolPlayerMessagingPlayerMessagingNotificationResource
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingPlayerMessagingNotificationResource
   */
  body?: string;
  /**
   *
   * @type {number}
   * @memberof LolPlayerMessagingPlayerMessagingNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingPlayerMessagingNotificationResource
   */
  msgId?: string;
  /**
   *
   * @type {number}
   * @memberof LolPlayerMessagingPlayerMessagingNotificationResource
   */
  status?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingPlayerMessagingNotificationResource
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolPlayerMessagingSimpleMessage
 */
export interface LolPlayerMessagingSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LolPlayerMessagingSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingSimpleMessage
   */
  bodyCode?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPlayerMessagingSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingSimpleMessage
   */
  titleCode?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerMessagingSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolPlayerPreferencesLoginSession
 */
export interface LolPlayerPreferencesLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolPlayerPreferencesLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerPreferencesLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {LolPlayerPreferencesLoginSessionStates}
   * @memberof LolPlayerPreferencesLoginSession
   */
  state?: LolPlayerPreferencesLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolPlayerPreferencesLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPlayerPreferencesLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolPlayerPreferencesPlayerPreferences
 */
export interface LolPlayerPreferencesPlayerPreferences {
  /**
   *
   * @type {string}
   * @memberof LolPlayerPreferencesPlayerPreferences
   */
  data?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerPreferencesPlayerPreferences
   */
  hash?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerPreferencesPlayerPreferences
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerPreferencesPlayerPreferences
   */
  version?: string;
}
/**
 *
 * @export
 * @interface LolPlayerPreferencesPlayerPreferencesEndpoint
 */
export interface LolPlayerPreferencesPlayerPreferencesEndpoint {
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerPreferencesPlayerPreferencesEndpoint
   */
  Enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPlayerPreferencesPlayerPreferencesEndpoint
   */
  EnforceHttps?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPlayerPreferencesPlayerPreferencesEndpoint
   */
  Retries?: number;
  /**
   *
   * @type {string}
   * @memberof LolPlayerPreferencesPlayerPreferencesEndpoint
   */
  ServiceEndpoint?: string;
  /**
   *
   * @type {string}
   * @memberof LolPlayerPreferencesPlayerPreferencesEndpoint
   */
  Version?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPreEndOfGameGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolPreEndOfGameGameflowSessionResource
 */
export interface LolPreEndOfGameGameflowSessionResource {
  /**
   *
   * @type {LolPreEndOfGameGameflowPhase}
   * @memberof LolPreEndOfGameGameflowSessionResource
   */
  phase?: LolPreEndOfGameGameflowPhase;
}
/**
 *
 * @export
 * @interface LolPreEndOfGameSequenceEvent
 */
export interface LolPreEndOfGameSequenceEvent {
  /**
   *
   * @type {string}
   * @memberof LolPreEndOfGameSequenceEvent
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolPreEndOfGameSequenceEvent
   */
  priority?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceAccountSettingsCategoryDataResource
 */
export interface LolPremadeVoiceAccountSettingsCategoryDataResource {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceAccountSettingsCategoryDataResource
   */
  autoJoin?: boolean;
  /**
   *
   * @type {LolPremadeVoiceInputMode}
   * @memberof LolPremadeVoiceAccountSettingsCategoryDataResource
   */
  inputMode?: LolPremadeVoiceInputMode;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceAccountSettingsCategoryDataResource
   */
  muteOnConnect?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceAccountSettingsCategoryDataResource
   */
  pushToTalkKey?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceAccountSettingsCategoryDataResource
   */
  showFirstExperienceInGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceAccountSettingsCategoryDataResource
   */
  showFirstExperienceInLCU?: boolean;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceAccountSettingsCategoryResource
 */
export interface LolPremadeVoiceAccountSettingsCategoryResource {
  /**
   *
   * @type {LolPremadeVoiceAccountSettingsCategoryDataResource}
   * @memberof LolPremadeVoiceAccountSettingsCategoryResource
   */
  data?: LolPremadeVoiceAccountSettingsCategoryDataResource;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceAccountSettingsCategoryResource
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceAudioPropertiesResource
 */
export interface LolPremadeVoiceAudioPropertiesResource {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceAudioPropertiesResource
   */
  isLoopbackEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceAudioPropertiesResource
   */
  micEnergy?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPremadeVoiceConfigReadinessEnum {
  NotReady = 'NotReady',
  Ready = 'Ready',
  Disabled = 'Disabled',
}

/**
 *
 * @export
 * @interface LolPremadeVoiceConfigStatus
 */
export interface LolPremadeVoiceConfigStatus {
  /**
   *
   * @type {LolPremadeVoiceConfigReadinessEnum}
   * @memberof LolPremadeVoiceConfigStatus
   */
  readiness?: LolPremadeVoiceConfigReadinessEnum;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPremadeVoiceConfigType {
  Public = 'public',
  Player = 'player',
}

/**
 *
 * @export
 * @interface LolPremadeVoiceDeviceResource
 */
export interface LolPremadeVoiceDeviceResource {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceDeviceResource
   */
  handle?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceDeviceResource
   */
  is_current_device?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceDeviceResource
   */
  is_default?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceDeviceResource
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceDeviceResource
   */
  usable?: boolean;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceDeviceResourceRiotClient
 */
export interface LolPremadeVoiceDeviceResourceRiotClient {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceDeviceResourceRiotClient
   */
  handle?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceDeviceResourceRiotClient
   */
  is_current_device?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceDeviceResourceRiotClient
   */
  is_default?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceDeviceResourceRiotClient
   */
  is_effective_device?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceDeviceResourceRiotClient
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceEntitlementsToken
 */
export interface LolPremadeVoiceEntitlementsToken {
  /**
   *
   * @type {Array<string>}
   * @memberof LolPremadeVoiceEntitlementsToken
   */
  entitlements?: Array<string>;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceExternalSession
 */
export interface LolPremadeVoiceExternalSession {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceExternalSession
   */
  patchlineFullName?: string;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceExternalSession
   */
  patchlineId?: string;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceExternalSession
   */
  productId?: string;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceFirstExperience
 */
export interface LolPremadeVoiceFirstExperience {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceFirstExperience
   */
  showFirstExperienceInGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceFirstExperience
   */
  showFirstExperienceInLCU?: boolean;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceGameEventHotkeys
 */
export interface LolPremadeVoiceGameEventHotkeys {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceGameEventHotkeys
   */
  evtPushToTalk?: string;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceGameInputSettings
 */
export interface LolPremadeVoiceGameInputSettings {
  /**
   *
   * @type {LolPremadeVoiceGameEventHotkeys}
   * @memberof LolPremadeVoiceGameInputSettings
   */
  GameEvents?: LolPremadeVoiceGameEventHotkeys;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceGameflowGameClient
 */
export interface LolPremadeVoiceGameflowGameClient {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceGameflowGameClient
   */
  running?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPremadeVoiceGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolPremadeVoiceGameflowSession
 */
export interface LolPremadeVoiceGameflowSession {
  /**
   *
   * @type {LolPremadeVoiceGameflowGameClient}
   * @memberof LolPremadeVoiceGameflowSession
   */
  gameClient?: LolPremadeVoiceGameflowGameClient;
  /**
   *
   * @type {LolPremadeVoiceGameflowPhase}
   * @memberof LolPremadeVoiceGameflowSession
   */
  phase?: LolPremadeVoiceGameflowPhase;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPremadeVoiceInputMode {
  VoiceActivity = 'voiceActivity',
  PushToTalk = 'pushToTalk',
}

/**
 *
 * @export
 * @interface LolPremadeVoiceKeyCombo
 */
export interface LolPremadeVoiceKeyCombo {
  /**
   *
   * @type {Array<LolPremadeVoicePushToTalkKey>}
   * @memberof LolPremadeVoiceKeyCombo
   */
  keyBindings?: Array<LolPremadeVoicePushToTalkKey>;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceKeycodePushToTalkResource
 */
export interface LolPremadeVoiceKeycodePushToTalkResource {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceKeycodePushToTalkResource
   */
  enabled?: boolean;
  /**
   *
   * @type {Array<LolPremadeVoiceKeyCombo>}
   * @memberof LolPremadeVoiceKeycodePushToTalkResource
   */
  keyCombos?: Array<LolPremadeVoiceKeyCombo>;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceLocalSettingsCategoryDataResource
 */
export interface LolPremadeVoiceLocalSettingsCategoryDataResource {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceLocalSettingsCategoryDataResource
   */
  currentCaptureDeviceHandle?: string;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceLocalSettingsCategoryDataResource
   */
  inputVolume?: number;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceLocalSettingsCategoryDataResource
   */
  vadSensitivity?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceLocalSettingsCategoryResource
 */
export interface LolPremadeVoiceLocalSettingsCategoryResource {
  /**
   *
   * @type {LolPremadeVoiceLocalSettingsCategoryDataResource}
   * @memberof LolPremadeVoiceLocalSettingsCategoryResource
   */
  data?: LolPremadeVoiceLocalSettingsCategoryDataResource;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceLocalSettingsCategoryResource
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceLoginSession
 */
export interface LolPremadeVoiceLoginSession {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceLoginSession
   */
  connected?: boolean;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceParticipantResource
 */
export interface LolPremadeVoiceParticipantResource {
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceParticipantResource
   */
  energy?: number;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceParticipantResource
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceParticipantResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceParticipantResource
   */
  isSpeaking?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceParticipantResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceParticipantResource
   */
  volume?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoicePartyDto
 */
export interface LolPremadeVoicePartyDto {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoicePartyDto
   */
  partyId?: string;
  /**
   *
   * @type {{ [key: string]: LolPremadeVoicePlayerDto; }}
   * @memberof LolPremadeVoicePartyDto
   */
  players?: { [key: string]: LolPremadeVoicePlayerDto };
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPremadeVoicePartyMemberRoleEnum {
  LEADER = 'LEADER',
  MEMBER = 'MEMBER',
  INVITED = 'INVITED',
  HOLD = 'HOLD',
  KICKED = 'KICKED',
  DECLINED = 'DECLINED',
}

/**
 *
 * @export
 * @interface LolPremadeVoicePlayerDto
 */
export interface LolPremadeVoicePlayerDto {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoicePlayerDto
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoicePlayerDto
   */
  partyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoicePlayerDto
   */
  puuid?: string;
  /**
   *
   * @type {LolPremadeVoicePartyMemberRoleEnum}
   * @memberof LolPremadeVoicePlayerDto
   */
  role?: LolPremadeVoicePartyMemberRoleEnum;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoicePlayerDto
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoicePremadeVoiceParticipantDto
 */
export interface LolPremadeVoicePremadeVoiceParticipantDto {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoicePremadeVoiceParticipantDto
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoicePremadeVoiceParticipantDto
   */
  energy?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoicePremadeVoiceParticipantDto
   */
  isMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoicePremadeVoiceParticipantDto
   */
  isSpeaking?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoicePremadeVoiceParticipantDto
   */
  participantId?: string;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoicePremadeVoiceParticipantDto
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoicePremadeVoiceParticipantDto
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoicePremadeVoiceParticipantDto
   */
  volume?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoicePushToTalkKey
 */
export interface LolPremadeVoicePushToTalkKey {
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoicePushToTalkKey
   */
  key?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoicePushToTalkResource
 */
export interface LolPremadeVoicePushToTalkResource {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoicePushToTalkResource
   */
  pttEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoicePushToTalkResource
   */
  pttKeyBinding?: string;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceSessionResource
 */
export interface LolPremadeVoiceSessionResource {
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceSessionResource
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceSessionResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceSessionResource
   */
  isTransmitEnabled?: boolean;
  /**
   *
   * @type {Array<LolPremadeVoiceParticipantResource>}
   * @memberof LolPremadeVoiceSessionResource
   */
  participants?: Array<LolPremadeVoiceParticipantResource>;
  /**
   *
   * @type {LolPremadeVoiceSessionStatus}
   * @memberof LolPremadeVoiceSessionResource
   */
  status?: LolPremadeVoiceSessionStatus;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceSessionResource
   */
  volume?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPremadeVoiceSessionStatus {
  Active = 'active',
  OnHold = 'onHold',
}

/**
 *
 * @export
 * @interface LolPremadeVoiceSettingsResource
 */
export interface LolPremadeVoiceSettingsResource {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceSettingsResource
   */
  autoJoin?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceSettingsResource
   */
  currentCaptureDeviceHandle?: string;
  /**
   *
   * @type {LolPremadeVoiceInputMode}
   * @memberof LolPremadeVoiceSettingsResource
   */
  inputMode?: LolPremadeVoiceInputMode;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceSettingsResource
   */
  localMicMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceSettingsResource
   */
  loopbackEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceSettingsResource
   */
  micLevel?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceSettingsResource
   */
  muteOnConnect?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceSettingsResource
   */
  pttActive?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceSettingsResource
   */
  pttKey?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceSettingsResource
   */
  vadActive?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceSettingsResource
   */
  vadHangoverTime?: number;
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceSettingsResource
   */
  vadSensitivity?: number;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceStateResource
 */
export interface LolPremadeVoiceStateResource {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceStateResource
   */
  connected?: boolean;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceSummoner
 */
export interface LolPremadeVoiceSummoner {
  /**
   *
   * @type {number}
   * @memberof LolPremadeVoiceSummoner
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPremadeVoiceSummoner
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolPremadeVoiceVoiceAvailability
 */
export interface LolPremadeVoiceVoiceAvailability {
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceVoiceAvailability
   */
  connectedToVoiceServer?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceVoiceAvailability
   */
  disabledAfterLogin?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceVoiceAvailability
   */
  enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceVoiceAvailability
   */
  showDisconnectedState?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceVoiceAvailability
   */
  showUI?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPremadeVoiceVoiceAvailability
   */
  voiceChannelAvailable?: boolean;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetBalance
 */
export interface LolPurchaseWidgetBalance {
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetBalance
   */
  amount?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetBalance
   */
  currencyType?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetBundledItemPricingInfo
 */
export interface LolPurchaseWidgetBundledItemPricingInfo {
  /**
   *
   * @type {Array<LolPurchaseWidgetDiscountPricingInfo>}
   * @memberof LolPurchaseWidgetBundledItemPricingInfo
   */
  discountPrices?: Array<LolPurchaseWidgetDiscountPricingInfo>;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetBundledItemPricingInfo
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetBundledItemPricingInfo
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetBundledItemPricingInfo
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetCatalogPluginItem
 */
export interface LolPurchaseWidgetCatalogPluginItem {
  /**
   *
   * @type {boolean}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  active?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  imagePath?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  inactiveDate?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  itemInstanceId?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  owned?: boolean;
  /**
   *
   * @type {Array<LolPurchaseWidgetCatalogPluginPrice>}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  prices?: Array<LolPurchaseWidgetCatalogPluginPrice>;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  purchaseDate?: number;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  releaseDate?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  subInventoryType?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  subTitle?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPurchaseWidgetCatalogPluginItem
   */
  tags?: Array<string>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetCatalogPluginItemAssets
 */
export interface LolPurchaseWidgetCatalogPluginItemAssets {
  /**
   *
   * @type {Array<string>}
   * @memberof LolPurchaseWidgetCatalogPluginItemAssets
   */
  colors?: Array<string>;
  /**
   *
   * @type {Array<LolPurchaseWidgetChampionSkinEmblem>}
   * @memberof LolPurchaseWidgetCatalogPluginItemAssets
   */
  emblems?: Array<LolPurchaseWidgetChampionSkinEmblem>;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItemAssets
   */
  iconPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItemAssets
   */
  splashPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginItemAssets
   */
  tilePath?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetCatalogPluginItemWithDetails
 */
export interface LolPurchaseWidgetCatalogPluginItemWithDetails {
  /**
   *
   * @type {LolPurchaseWidgetCatalogPluginItemAssets}
   * @memberof LolPurchaseWidgetCatalogPluginItemWithDetails
   */
  assets?: LolPurchaseWidgetCatalogPluginItemAssets;
  /**
   *
   * @type {Array<LolPurchaseWidgetCatalogPluginPrice>}
   * @memberof LolPurchaseWidgetCatalogPluginItemWithDetails
   */
  bundledDiscountPrices?: Array<LolPurchaseWidgetCatalogPluginPrice>;
  /**
   *
   * @type {Array<LolPurchaseWidgetCatalogPluginItemWithDetails>}
   * @memberof LolPurchaseWidgetCatalogPluginItemWithDetails
   */
  bundledItems?: Array<LolPurchaseWidgetCatalogPluginItemWithDetails>;
  /**
   *
   * @type {LolPurchaseWidgetCatalogPluginItem}
   * @memberof LolPurchaseWidgetCatalogPluginItemWithDetails
   */
  item?: LolPurchaseWidgetCatalogPluginItem;
  /**
   *
   * @type {Array<LolPurchaseWidgetCatalogPluginPrice>}
   * @memberof LolPurchaseWidgetCatalogPluginItemWithDetails
   */
  minimumBundlePrices?: Array<LolPurchaseWidgetCatalogPluginPrice>;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetCatalogPluginItemWithDetails
   */
  quantity?: number;
  /**
   *
   * @type {Array<LolPurchaseWidgetCatalogPluginItemWithDetails>}
   * @memberof LolPurchaseWidgetCatalogPluginItemWithDetails
   */
  requiredItems?: Array<LolPurchaseWidgetCatalogPluginItemWithDetails>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetCatalogPluginPrice
 */
export interface LolPurchaseWidgetCatalogPluginPrice {
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetCatalogPluginPrice
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginPrice
   */
  costType?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginPrice
   */
  currency?: string;
  /**
   *
   * @type {LolPurchaseWidgetCatalogPluginSale}
   * @memberof LolPurchaseWidgetCatalogPluginPrice
   */
  sale?: LolPurchaseWidgetCatalogPluginSale;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetCatalogPluginSale
 */
export interface LolPurchaseWidgetCatalogPluginSale {
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetCatalogPluginSale
   */
  cost?: number;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetCatalogPluginSale
   */
  discount?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginSale
   */
  endDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetCatalogPluginSale
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetChampionSkinEmblem
 */
export interface LolPurchaseWidgetChampionSkinEmblem {
  /**
   *
   * @type {LolPurchaseWidgetChampionSkinEmblemPath}
   * @memberof LolPurchaseWidgetChampionSkinEmblem
   */
  emblemPath?: LolPurchaseWidgetChampionSkinEmblemPath;
  /**
   *
   * @type {LolPurchaseWidgetChampionSkinEmblemPosition}
   * @memberof LolPurchaseWidgetChampionSkinEmblem
   */
  emblemPosition?: LolPurchaseWidgetChampionSkinEmblemPosition;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetChampionSkinEmblem
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetChampionSkinEmblemPath
 */
export interface LolPurchaseWidgetChampionSkinEmblemPath {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetChampionSkinEmblemPath
   */
  large?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetChampionSkinEmblemPath
   */
  small?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetChampionSkinEmblemPosition
 */
export interface LolPurchaseWidgetChampionSkinEmblemPosition {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetChampionSkinEmblemPosition
   */
  horizontal?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetChampionSkinEmblemPosition
   */
  vertical?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetDiscountPricingInfo
 */
export interface LolPurchaseWidgetDiscountPricingInfo {
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetDiscountPricingInfo
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetDiscountPricingInfo
   */
  costType?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetDiscountPricingInfo
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetDiscountPricingInfo
   */
  discount?: number;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemChoiceDetails
 */
export interface LolPurchaseWidgetItemChoiceDetails {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemChoiceDetails
   */
  backgroundImage?: string;
  /**
   *
   * @type {Array<LolPurchaseWidgetItemDetails>}
   * @memberof LolPurchaseWidgetItemChoiceDetails
   */
  contents?: Array<LolPurchaseWidgetItemDetails>;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemChoiceDetails
   */
  discount?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemChoiceDetails
   */
  displayType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetItemChoiceDetails
   */
  fullPrice?: number;
  /**
   *
   * @type {LolPurchaseWidgetCatalogPluginItem}
   * @memberof LolPurchaseWidgetItemChoiceDetails
   */
  item?: LolPurchaseWidgetCatalogPluginItem;
  /**
   *
   * @type {Array<LolPurchaseWidgetPurchaseOption>}
   * @memberof LolPurchaseWidgetItemChoiceDetails
   */
  purchaseOptions?: Array<LolPurchaseWidgetPurchaseOption>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemChoices
 */
export interface LolPurchaseWidgetItemChoices {
  /**
   *
   * @type {Array<LolPurchaseWidgetItemChoiceDetails>}
   * @memberof LolPurchaseWidgetItemChoices
   */
  choices?: Array<LolPurchaseWidgetItemChoiceDetails>;
  /**
   *
   * @type {Array<LolPurchaseWidgetValidationErrorEntry>}
   * @memberof LolPurchaseWidgetItemChoices
   */
  validationErrors?: Array<LolPurchaseWidgetValidationErrorEntry>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemCost
 */
export interface LolPurchaseWidgetItemCost {
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetItemCost
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemCost
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetItemCost
   */
  discount?: number;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemDefinition
 */
export interface LolPurchaseWidgetItemDefinition {
  /**
   *
   * @type {LolPurchaseWidgetCatalogPluginItemAssets}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  assets?: LolPurchaseWidgetCatalogPluginItemAssets;
  /**
   *
   * @type {LolPurchaseWidgetBundledItemPricingInfo}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  bundledItemPrice?: LolPurchaseWidgetBundledItemPricingInfo;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  owned?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  subInventoryType?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  subTitle?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPurchaseWidgetItemDefinition
   */
  tags?: Array<string>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemDetails
 */
export interface LolPurchaseWidgetItemDetails {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDetails
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDetails
   */
  iconUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDetails
   */
  subTitle?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemDetails
   */
  title?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemKey
 */
export interface LolPurchaseWidgetItemKey {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemKey
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetItemKey
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemOwnership
 */
export interface LolPurchaseWidgetItemOwnership {
  /**
   *
   * @type {LolPurchaseWidgetItemKey}
   * @memberof LolPurchaseWidgetItemOwnership
   */
  itemKey?: LolPurchaseWidgetItemKey;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetItemOwnership
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemPrice
 */
export interface LolPurchaseWidgetItemPrice {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemPrice
   */
  currencyType?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetItemPrice
   */
  price?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolPurchaseWidgetItemPrice
   */
  purchasable?: boolean;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetItemSale
 */
export interface LolPurchaseWidgetItemSale {
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetItemSale
   */
  discount?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemSale
   */
  endDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetItemSale
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetLoginSession
 */
export interface LolPurchaseWidgetLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {LolPurchaseWidgetLoginSessionStates}
   * @memberof LolPurchaseWidgetLoginSession
   */
  state?: LolPurchaseWidgetLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolPurchaseWidgetLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolPurchaseWidgetOrderNotificationResource
 */
export interface LolPurchaseWidgetOrderNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetOrderNotificationResource
   */
  eventType?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetOrderNotificationResource
   */
  eventTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetOrderNotificationResource
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetPriceDetail
 */
export interface LolPurchaseWidgetPriceDetail {
  /**
   *
   * @type {LolPurchaseWidgetItemKey}
   * @memberof LolPurchaseWidgetPriceDetail
   */
  itemKey?: LolPurchaseWidgetItemKey;
  /**
   *
   * @type {LolPurchaseWidgetItemPrice}
   * @memberof LolPurchaseWidgetPriceDetail
   */
  price?: LolPurchaseWidgetItemPrice;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetPurchasableItem
 */
export interface LolPurchaseWidgetPurchasableItem {
  /**
   *
   * @type {Array<LolPurchaseWidgetItemDefinition>}
   * @memberof LolPurchaseWidgetPurchasableItem
   */
  bundledItems?: Array<LolPurchaseWidgetItemDefinition>;
  /**
   *
   * @type {Array<LolPurchaseWidgetItemDefinition>}
   * @memberof LolPurchaseWidgetPurchasableItem
   */
  dependencies?: Array<LolPurchaseWidgetItemDefinition>;
  /**
   *
   * @type {LolPurchaseWidgetItemDefinition}
   * @memberof LolPurchaseWidgetPurchasableItem
   */
  item?: LolPurchaseWidgetItemDefinition;
  /**
   *
   * @type {Array<LolPurchaseWidgetPurchaseOption>}
   * @memberof LolPurchaseWidgetPurchasableItem
   */
  purchaseOptions?: Array<LolPurchaseWidgetPurchaseOption>;
  /**
   *
   * @type {LolPurchaseWidgetItemSale}
   * @memberof LolPurchaseWidgetPurchasableItem
   */
  sale?: LolPurchaseWidgetItemSale;
  /**
   *
   * @type {Array<LolPurchaseWidgetValidationErrorEntry>}
   * @memberof LolPurchaseWidgetPurchasableItem
   */
  validationErrors?: Array<LolPurchaseWidgetValidationErrorEntry>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetPurchaseItem
 */
export interface LolPurchaseWidgetPurchaseItem {
  /**
   *
   * @type {LolPurchaseWidgetItemKey}
   * @memberof LolPurchaseWidgetPurchaseItem
   */
  itemKey?: LolPurchaseWidgetItemKey;
  /**
   *
   * @type {LolPurchaseWidgetItemPrice}
   * @memberof LolPurchaseWidgetPurchaseItem
   */
  purchaseCurrencyInfo?: LolPurchaseWidgetItemPrice;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetPurchaseItem
   */
  quantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetPurchaseItem
   */
  source?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetPurchaseOption
 */
export interface LolPurchaseWidgetPurchaseOption {
  /**
   *
   * @type {Array<LolPurchaseWidgetPriceDetail>}
   * @memberof LolPurchaseWidgetPurchaseOption
   */
  priceDetails?: Array<LolPurchaseWidgetPriceDetail>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetPurchaseRequest
 */
export interface LolPurchaseWidgetPurchaseRequest {
  /**
   *
   * @type {Array<LolPurchaseWidgetPurchaseItem>}
   * @memberof LolPurchaseWidgetPurchaseRequest
   */
  items?: Array<LolPurchaseWidgetPurchaseItem>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetPurchaseResponse
 */
export interface LolPurchaseWidgetPurchaseResponse {
  /**
   *
   * @type {Array<LolPurchaseWidgetPurchaseItem>}
   * @memberof LolPurchaseWidgetPurchaseResponse
   */
  items?: Array<LolPurchaseWidgetPurchaseItem>;
  /**
   *
   * @type {Array<LolPurchaseWidgetTransaction>}
   * @memberof LolPurchaseWidgetPurchaseResponse
   */
  transactions?: Array<LolPurchaseWidgetTransaction>;
  /**
   *
   * @type {boolean}
   * @memberof LolPurchaseWidgetPurchaseResponse
   */
  useRMSConfirmation?: boolean;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetPurchaseWidgetConfig
 */
export interface LolPurchaseWidgetPurchaseWidgetConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolPurchaseWidgetPurchaseWidgetConfig
   */
  enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolPurchaseWidgetPurchaseWidgetConfig
   */
  purchaseDisclaimerEnabled?: boolean;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetRiotMessagingServiceMessage
 */
export interface LolPurchaseWidgetRiotMessagingServiceMessage {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetRiotMessagingServiceMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetRiotMessagingServiceMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetRiotMessagingServiceMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetRiotMessagingServiceMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetRiotMessagingServiceMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetSale
 */
export interface LolPurchaseWidgetSale {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetSale
   */
  endDate?: string;
  /**
   *
   * @type {Array<LolPurchaseWidgetItemCost>}
   * @memberof LolPurchaseWidgetSale
   */
  prices?: Array<LolPurchaseWidgetItemCost>;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetSale
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetTransaction
 */
export interface LolPurchaseWidgetTransaction {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetTransaction
   */
  iconUrl?: string;
  /**
   *
   * @type {LolPurchaseWidgetItemKey}
   * @memberof LolPurchaseWidgetTransaction
   */
  itemKey?: LolPurchaseWidgetItemKey;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetTransaction
   */
  itemName?: string;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetTransaction
   */
  transactionId?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetValidationError
 */
export interface LolPurchaseWidgetValidationError {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetValidationError
   */
  errorCode?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolPurchaseWidgetValidationError
   */
  errorDetails?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetValidationError
   */
  message?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolPurchaseWidgetValidationError
   */
  responseItems?: Array<string>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetValidationErrorEntry
 */
export interface LolPurchaseWidgetValidationErrorEntry {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetValidationErrorEntry
   */
  id?: string;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetValidationRequest
 */
export interface LolPurchaseWidgetValidationRequest {
  /**
   *
   * @type {Array<LolPurchaseWidgetValidationRequestItem>}
   * @memberof LolPurchaseWidgetValidationRequest
   */
  items?: Array<LolPurchaseWidgetValidationRequestItem>;
  /**
   *
   * @type {Array<LolPurchaseWidgetItemOwnership>}
   * @memberof LolPurchaseWidgetValidationRequest
   */
  ownedItems?: Array<LolPurchaseWidgetItemOwnership>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetValidationRequestItem
 */
export interface LolPurchaseWidgetValidationRequestItem {
  /**
   *
   * @type {LolPurchaseWidgetItemKey}
   * @memberof LolPurchaseWidgetValidationRequestItem
   */
  itemKey?: LolPurchaseWidgetItemKey;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetValidationRequestItem
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetValidationResponse
 */
export interface LolPurchaseWidgetValidationResponse {
  /**
   *
   * @type {Array<LolPurchaseWidgetValidationResponseItem>}
   * @memberof LolPurchaseWidgetValidationResponse
   */
  items?: Array<LolPurchaseWidgetValidationResponseItem>;
  /**
   *
   * @type {boolean}
   * @memberof LolPurchaseWidgetValidationResponse
   */
  valid?: boolean;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetValidationResponseItem
 */
export interface LolPurchaseWidgetValidationResponseItem {
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetValidationResponseItem
   */
  description?: string;
  /**
   *
   * @type {LolPurchaseWidgetItemKey}
   * @memberof LolPurchaseWidgetValidationResponseItem
   */
  itemKey?: LolPurchaseWidgetItemKey;
  /**
   *
   * @type {string}
   * @memberof LolPurchaseWidgetValidationResponseItem
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetValidationResponseItem
   */
  quantity?: number;
  /**
   *
   * @type {LolPurchaseWidgetSale}
   * @memberof LolPurchaseWidgetValidationResponseItem
   */
  sale?: LolPurchaseWidgetSale;
  /**
   *
   * @type {Array<LolPurchaseWidgetItemPrice>}
   * @memberof LolPurchaseWidgetValidationResponseItem
   */
  validationCurrencyInfo?: Array<LolPurchaseWidgetItemPrice>;
}
/**
 *
 * @export
 * @interface LolPurchaseWidgetWallet
 */
export interface LolPurchaseWidgetWallet {
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetWallet
   */
  accountId?: number;
  /**
   *
   * @type {Array<LolPurchaseWidgetBalance>}
   * @memberof LolPurchaseWidgetWallet
   */
  balances?: Array<LolPurchaseWidgetBalance>;
  /**
   *
   * @type {number}
   * @memberof LolPurchaseWidgetWallet
   */
  version?: number;
}
/**
 *
 * @export
 * @interface LolRankedAchievedTier
 */
export interface LolRankedAchievedTier {
  /**
   *
   * @type {number}
   * @memberof LolRankedAchievedTier
   */
  division?: number;
  /**
   *
   * @type {LolRankedLeagueQueueType}
   * @memberof LolRankedAchievedTier
   */
  queueType?: LolRankedLeagueQueueType;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedAchievedTier
   */
  tier?: LolRankedLeagueTier;
}
/**
 *
 * @export
 * @interface LolRankedEndOfGameStatsBlock
 */
export interface LolRankedEndOfGameStatsBlock {
  /**
   *
   * @type {number}
   * @memberof LolRankedEndOfGameStatsBlock
   */
  gameId?: number;
}
/**
 *
 * @export
 * @interface LolRankedEosNotificationResource
 */
export interface LolRankedEosNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolRankedEosNotificationResource
   */
  notificationName?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedEosNotificationResource
   */
  notificationType?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedEosNotificationResource
   */
  queue?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedEosNotificationResource
   */
  seasonEndTime?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedEosNotificationResource
   */
  tier?: string;
}
/**
 *
 * @export
 * @interface LolRankedEosNotificationsConfig
 */
export interface LolRankedEosNotificationsConfig {
  /**
   *
   * @type {Array<LolRankedEosNotificationsConfigEntry>}
   * @memberof LolRankedEosNotificationsConfig
   */
  config?: Array<LolRankedEosNotificationsConfigEntry>;
}
/**
 *
 * @export
 * @interface LolRankedEosNotificationsConfigEntry
 */
export interface LolRankedEosNotificationsConfigEntry {
  /**
   *
   * @type {string}
   * @memberof LolRankedEosNotificationsConfigEntry
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedEosNotificationsConfigEntry
   */
  offsetTime1?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedEosNotificationsConfigEntry
   */
  offsetTime2?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedEosNotificationsConfigEntry
   */
  offsetTime3?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedEosNotificationsConfigEntry
   */
  seasonEndTime?: number;
}
/**
 *
 * @export
 * @interface LolRankedEosRewardsConfig
 */
export interface LolRankedEosRewardsConfig {
  /**
   *
   * @type {Array<LolRankedEosRewardsConfigEntry>}
   * @memberof LolRankedEosRewardsConfig
   */
  config?: Array<LolRankedEosRewardsConfigEntry>;
}
/**
 *
 * @export
 * @interface LolRankedEosRewardsConfigEntry
 */
export interface LolRankedEosRewardsConfigEntry {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolRankedEosRewardsConfigEntry
   */
  rewards?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof LolRankedEosRewardsConfigEntry
   */
  season?: number;
}
/**
 *
 * @export
 * @interface LolRankedEosSettingsData
 */
export interface LolRankedEosSettingsData {
  /**
   *
   * @type {boolean}
   * @memberof LolRankedEosSettingsData
   */
  notificationShown?: boolean;
}
/**
 *
 * @export
 * @interface LolRankedEosSettingsResource
 */
export interface LolRankedEosSettingsResource {
  /**
   *
   * @type {LolRankedEosSettingsData}
   * @memberof LolRankedEosSettingsResource
   */
  data?: LolRankedEosSettingsData;
  /**
   *
   * @type {number}
   * @memberof LolRankedEosSettingsResource
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolRankedGameflowGameData
 */
export interface LolRankedGameflowGameData {
  /**
   *
   * @type {LolRankedQueue}
   * @memberof LolRankedGameflowGameData
   */
  queue?: LolRankedQueue;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRankedGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolRankedGameflowSession
 */
export interface LolRankedGameflowSession {
  /**
   *
   * @type {LolRankedGameflowGameData}
   * @memberof LolRankedGameflowSession
   */
  gameData?: LolRankedGameflowGameData;
  /**
   *
   * @type {LolRankedGameflowPhase}
   * @memberof LolRankedGameflowSession
   */
  phase?: LolRankedGameflowPhase;
}
/**
 *
 * @export
 * @interface LolRankedLcuLeagueNotification
 */
export interface LolRankedLcuLeagueNotification {
  /**
   *
   * @type {string}
   * @memberof LolRankedLcuLeagueNotification
   */
  changeReason?: string;
  /**
   *
   * @type {LolRankedNotificationDisplayType}
   * @memberof LolRankedLcuLeagueNotification
   */
  displayType?: LolRankedNotificationDisplayType;
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedLcuLeagueNotification
   */
  division?: LolRankedLeagueDivision;
  /**
   *
   * @type {boolean}
   * @memberof LolRankedLcuLeagueNotification
   */
  eligibleForPromoHelper?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolRankedLcuLeagueNotification
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLcuLeagueNotification
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLcuLeagueNotification
   */
  leaguePoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLcuLeagueNotification
   */
  leaguePointsDelta?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedLcuLeagueNotification
   */
  miniseriesProgress?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedLcuLeagueNotification
   */
  miniseriesWins?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedLcuLeagueNotification
   */
  msgId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRankedLcuLeagueNotification
   */
  notifyReason?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedLcuLeagueNotification
   */
  numberOfPromotions?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLcuLeagueNotification
   */
  provisionalGamesRemaining?: number;
  /**
   *
   * @type {LolRankedLeagueQueueType}
   * @memberof LolRankedLcuLeagueNotification
   */
  queueType?: LolRankedLeagueQueueType;
  /**
   *
   * @type {string}
   * @memberof LolRankedLcuLeagueNotification
   */
  rewardEarnedId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRankedLcuLeagueNotification
   */
  rewardEarnedType?: string;
  /**
   *
   * @type {LolRankedSplitPointsNotification}
   * @memberof LolRankedLcuLeagueNotification
   */
  splitPointsNotification?: LolRankedSplitPointsNotification;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedLcuLeagueNotification
   */
  tier?: LolRankedLeagueTier;
  /**
   *
   * @type {number}
   * @memberof LolRankedLcuLeagueNotification
   */
  timeUntilInactivityStatusChanges?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRankedLeagueDivision {
  I = 'I',
  II = 'II',
  III = 'III',
  IV = 'IV',
  V = 'V',
  NA = 'NA',
}

/**
 *
 * @export
 * @interface LolRankedLeagueDivisionInfo
 */
export interface LolRankedLeagueDivisionInfo {
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueDivisionInfo
   */
  apexUnlockTimeMillis?: number;
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedLeagueDivisionInfo
   */
  division?: LolRankedLeagueDivision;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueDivisionInfo
   */
  maxLeagueSize?: number;
  /**
   *
   * @type {Array<LolRankedLeagueStanding>}
   * @memberof LolRankedLeagueDivisionInfo
   */
  standings?: Array<LolRankedLeagueStanding>;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedLeagueDivisionInfo
   */
  tier?: LolRankedLeagueTier;
}
/**
 *
 * @export
 * @interface LolRankedLeagueLadderInfo
 */
export interface LolRankedLeagueLadderInfo {
  /**
   *
   * @type {Array<LolRankedLeagueDivisionInfo>}
   * @memberof LolRankedLeagueLadderInfo
   */
  divisions?: Array<LolRankedLeagueDivisionInfo>;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueLadderInfo
   */
  nextApexUpdateMillis?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueLadderInfo
   */
  provisionalGameThreshold?: number;
  /**
   *
   * @type {LolRankedLeagueQueueType}
   * @memberof LolRankedLeagueLadderInfo
   */
  queueType?: LolRankedLeagueQueueType;
  /**
   *
   * @type {LolRankedLeagueStanding}
   * @memberof LolRankedLeagueLadderInfo
   */
  requestedRankedEntry?: LolRankedLeagueStanding;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedLeagueLadderInfo
   */
  tier?: LolRankedLeagueTier;
}
/**
 *
 * @export
 * @interface LolRankedLeagueNotification
 */
export interface LolRankedLeagueNotification {
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueNotification
   */
  changeReason?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueNotification
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueNotification
   */
  leaguePoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueNotification
   */
  leaguePointsDelta?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueNotification
   */
  miniseriesProgress?: string;
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueNotification
   */
  notifyReason?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueNotification
   */
  provisionalGamesRemaining?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueNotification
   */
  queueType?: string;
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueNotification
   */
  rank?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueNotification
   */
  splitPoints?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolRankedLeagueNotification
   */
  splitPointsBreakdown?: { [key: string]: number };
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueNotification
   */
  tier?: string;
}
/**
 *
 * @export
 * @interface LolRankedLeagueNotifications
 */
export interface LolRankedLeagueNotifications {
  /**
   *
   * @type {Array<LolRankedLeagueNotification>}
   * @memberof LolRankedLeagueNotifications
   */
  notifications?: Array<LolRankedLeagueNotification>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRankedLeagueQueueType {
  NONE = 'NONE',
  RANKEDSOLO5x5 = 'RANKED_SOLO_5x5',
  RANKEDFLEXSR = 'RANKED_FLEX_SR',
  RANKEDFLEXTT = 'RANKED_FLEX_TT',
  RANKEDTFT = 'RANKED_TFT',
}

/**
 *
 * @export
 * @interface LolRankedLeagueStanding
 */
export interface LolRankedLeagueStanding {
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedLeagueStanding
   */
  division?: LolRankedLeagueDivision;
  /**
   *
   * @type {Array<string>}
   * @memberof LolRankedLeagueStanding
   */
  earnedRegaliaRewardIds?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof LolRankedLeagueStanding
   */
  isProvisional?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  leaguePoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  losses?: number;
  /**
   *
   * @type {Array<LolRankedMiniseries>}
   * @memberof LolRankedLeagueStanding
   */
  miniseriesResults?: Array<LolRankedMiniseries>;
  /**
   *
   * @type {boolean}
   * @memberof LolRankedLeagueStanding
   */
  pendingDemotion?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolRankedLeagueStanding
   */
  pendingPromotion?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  position?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  positionDelta?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  previousPosition?: number;
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedLeagueStanding
   */
  previousSeasonAchievedDivision?: LolRankedLeagueDivision;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedLeagueStanding
   */
  previousSeasonAchievedTier?: LolRankedLeagueTier;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  provisionalGamesRemaining?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueStanding
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  rankedRegaliaLevel?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueStanding
   */
  rivalName?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedLeagueStanding
   */
  summonerName?: string;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedLeagueStanding
   */
  tier?: LolRankedLeagueTier;
  /**
   *
   * @type {number}
   * @memberof LolRankedLeagueStanding
   */
  wins?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRankedLeagueTier {
  NONE = 'NONE',
  IRON = 'IRON',
  BRONZE = 'BRONZE',
  SILVER = 'SILVER',
  GOLD = 'GOLD',
  PLATINUM = 'PLATINUM',
  DIAMOND = 'DIAMOND',
  MASTER = 'MASTER',
  GRANDMASTER = 'GRANDMASTER',
  CHALLENGER = 'CHALLENGER',
}

/**
 *
 * @export
 * @interface LolRankedLeaguesSeasonRewardConfig
 */
export interface LolRankedLeaguesSeasonRewardConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolRankedLeaguesSeasonRewardConfig
   */
  QualificationWarningEnabled?: boolean;
}
/**
 *
 * @export
 * @interface LolRankedLoginSession
 */
export interface LolRankedLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolRankedLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {LolRankedLoginSessionStates}
   * @memberof LolRankedLoginSession
   */
  state?: LolRankedLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolRankedLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRankedLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolRankedMiniseries {
  W = 'W',
  L = 'L',
  N = 'N',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolRankedNotificationDisplayType {
  NONE = 'NONE',
  TOAST = 'TOAST',
  MODAL = 'MODAL',
  VIGNETTE = 'VIGNETTE',
}

/**
 *
 * @export
 * @interface LolRankedParticipantTiers
 */
export interface LolRankedParticipantTiers {
  /**
   *
   * @type {Array<LolRankedAchievedTier>}
   * @memberof LolRankedParticipantTiers
   */
  achievedTiers?: Array<LolRankedAchievedTier>;
  /**
   *
   * @type {number}
   * @memberof LolRankedParticipantTiers
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolRankedQueue
 */
export interface LolRankedQueue {
  /**
   *
   * @type {object}
   * @memberof LolRankedQueue
   */
  type?: object;
}
/**
 *
 * @export
 * @interface LolRankedQueuesAndPuuidsPayload
 */
export interface LolRankedQueuesAndPuuidsPayload {
  /**
   *
   * @type {Array<LolRankedLeagueQueueType>}
   * @memberof LolRankedQueuesAndPuuidsPayload
   */
  queueTypes?: Array<LolRankedLeagueQueueType>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolRankedQueuesAndPuuidsPayload
   */
  summonerIds?: Array<number>;
}
/**
 *
 * @export
 * @interface LolRankedRankedQueueStats
 */
export interface LolRankedRankedQueueStats {
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedRankedQueueStats
   */
  division?: LolRankedLeagueDivision;
  /**
   *
   * @type {boolean}
   * @memberof LolRankedRankedQueueStats
   */
  isProvisional?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedQueueStats
   */
  leaguePoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedQueueStats
   */
  losses?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedRankedQueueStats
   */
  miniSeriesProgress?: string;
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedRankedQueueStats
   */
  previousSeasonAchievedDivision?: LolRankedLeagueDivision;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedRankedQueueStats
   */
  previousSeasonAchievedTier?: LolRankedLeagueTier;
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedRankedQueueStats
   */
  previousSeasonEndDivision?: LolRankedLeagueDivision;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedRankedQueueStats
   */
  previousSeasonEndTier?: LolRankedLeagueTier;
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedQueueStats
   */
  provisionalGameThreshold?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedQueueStats
   */
  provisionalGamesRemaining?: number;
  /**
   *
   * @type {LolRankedLeagueQueueType}
   * @memberof LolRankedRankedQueueStats
   */
  queueType?: LolRankedLeagueQueueType;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedRankedQueueStats
   */
  tier?: LolRankedLeagueTier;
  /**
   *
   * @type {LolRankedRankedQueueWarnings}
   * @memberof LolRankedRankedQueueStats
   */
  warnings?: LolRankedRankedQueueWarnings;
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedQueueStats
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface LolRankedRankedQueueWarnings
 */
export interface LolRankedRankedQueueWarnings {
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedQueueWarnings
   */
  apexDaysUntilDecay?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedQueueWarnings
   */
  demotionWarning?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolRankedRankedQueueWarnings
   */
  displayDecayWarning?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedQueueWarnings
   */
  timeUntilInactivityStatusChanges?: number;
}
/**
 *
 * @export
 * @interface LolRankedRankedStats
 */
export interface LolRankedRankedStats {
  /**
   *
   * @type {Array<string>}
   * @memberof LolRankedRankedStats
   */
  earnedRegaliaRewardIds?: Array<string>;
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedRankedStats
   */
  highestPreviousSeasonAchievedDivision?: LolRankedLeagueDivision;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedRankedStats
   */
  highestPreviousSeasonAchievedTier?: LolRankedLeagueTier;
  /**
   *
   * @type {LolRankedLeagueDivision}
   * @memberof LolRankedRankedStats
   */
  highestPreviousSeasonEndDivision?: LolRankedLeagueDivision;
  /**
   *
   * @type {LolRankedLeagueTier}
   * @memberof LolRankedRankedStats
   */
  highestPreviousSeasonEndTier?: LolRankedLeagueTier;
  /**
   *
   * @type {LolRankedRankedQueueStats}
   * @memberof LolRankedRankedStats
   */
  highestRankedEntry?: LolRankedRankedQueueStats;
  /**
   *
   * @type {LolRankedRankedQueueStats}
   * @memberof LolRankedRankedStats
   */
  highestRankedEntrySR?: LolRankedRankedQueueStats;
  /**
   *
   * @type {{ [key: string]: LolRankedRankedQueueStats; }}
   * @memberof LolRankedRankedStats
   */
  queueMap?: { [key: string]: LolRankedRankedQueueStats };
  /**
   *
   * @type {Array<LolRankedRankedQueueStats>}
   * @memberof LolRankedRankedStats
   */
  queues?: Array<LolRankedRankedQueueStats>;
  /**
   *
   * @type {number}
   * @memberof LolRankedRankedStats
   */
  rankedRegaliaLevel?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolRankedRankedStats
   */
  splitsProgress?: { [key: string]: number };
}
/**
 *
 * @export
 * @interface LolRankedRewardsInfo
 */
export interface LolRankedRewardsInfo {
  /**
   *
   * @type {number}
   * @memberof LolRankedRewardsInfo
   */
  currentSeasonId?: number;
  /**
   *
   * @type {LolRankedSeasonSplit}
   * @memberof LolRankedRewardsInfo
   */
  currentSplit?: LolRankedSeasonSplit;
  /**
   *
   * @type {number}
   * @memberof LolRankedRewardsInfo
   */
  currentSplitId?: number;
  /**
   *
   * @type {{ [key: string]: LolRankedSplitReward; }}
   * @memberof LolRankedRewardsInfo
   */
  rewardInfoByRewardId?: { [key: string]: LolRankedSplitReward };
  /**
   *
   * @type {Array<LolRankedSeasonSplit>}
   * @memberof LolRankedRewardsInfo
   */
  splits?: Array<LolRankedSeasonSplit>;
}
/**
 *
 * @export
 * @interface LolRankedSeasonSplit
 */
export interface LolRankedSeasonSplit {
  /**
   *
   * @type {number}
   * @memberof LolRankedSeasonSplit
   */
  endTimeMillis?: number;
  /**
   *
   * @type {Array<LolRankedSplitRewardGroup>}
   * @memberof LolRankedSeasonSplit
   */
  rewardTrack?: Array<LolRankedSplitRewardGroup>;
  /**
   *
   * @type {number}
   * @memberof LolRankedSeasonSplit
   */
  seasonId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedSeasonSplit
   */
  splitId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedSeasonSplit
   */
  startTimeMillis?: number;
}
/**
 *
 * @export
 * @interface LolRankedSequenceEvent
 */
export interface LolRankedSequenceEvent {
  /**
   *
   * @type {string}
   * @memberof LolRankedSequenceEvent
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedSequenceEvent
   */
  priority?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRankedSeverity {
  WARNING = 'WARNING',
  ALERT = 'ALERT',
}

/**
 *
 * @export
 * @interface LolRankedSplitPointsNotification
 */
export interface LolRankedSplitPointsNotification {
  /**
   *
   * @type {string}
   * @memberof LolRankedSplitPointsNotification
   */
  nextRewardId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRankedSplitPointsNotification
   */
  nextRewardType?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitPointsNotification
   */
  previousSplitPointsRequired?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitPointsNotification
   */
  splitPointsAfterGame?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitPointsNotification
   */
  splitPointsBeforeGame?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolRankedSplitPointsNotification
   */
  splitPointsBreakdown?: { [key: string]: number };
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitPointsNotification
   */
  splitPointsDelta?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitPointsNotification
   */
  splitPointsRequired?: number;
}
/**
 *
 * @export
 * @interface LolRankedSplitReward
 */
export interface LolRankedSplitReward {
  /**
   *
   * @type {string}
   * @memberof LolRankedSplitReward
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolRankedSplitReward
   */
  id?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitReward
   */
  pointsRequired?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitReward
   */
  quantity?: number;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitReward
   */
  regaliaLevel?: number;
  /**
   *
   * @type {string}
   * @memberof LolRankedSplitReward
   */
  rewardType?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitReward
   */
  splitId?: number;
}
/**
 *
 * @export
 * @interface LolRankedSplitRewardGroup
 */
export interface LolRankedSplitRewardGroup {
  /**
   *
   * @type {Array<LolRankedSplitReward>}
   * @memberof LolRankedSplitRewardGroup
   */
  rewards?: Array<LolRankedSplitReward>;
  /**
   *
   * @type {number}
   * @memberof LolRankedSplitRewardGroup
   */
  splitPoints?: number;
}
/**
 *
 * @export
 * @interface LolRankedSummoner
 */
export interface LolRankedSummoner {
  /**
   *
   * @type {string}
   * @memberof LolRankedSummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolRankedSummoner
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolRecommendationsAcsChampionGames
 */
export interface LolRecommendationsAcsChampionGames {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsAcsChampionGames
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsAcsChampionGames
   */
  lane?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsAcsChampionGames
   */
  queue?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsAcsChampionGames
   */
  role?: string;
}
/**
 *
 * @export
 * @interface LolRecommendationsAcsChampionGamesCollection
 */
export interface LolRecommendationsAcsChampionGamesCollection {
  /**
   *
   * @type {Array<LolRecommendationsAcsChampionGames>}
   * @memberof LolRecommendationsAcsChampionGamesCollection
   */
  champions?: Array<LolRecommendationsAcsChampionGames>;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsAcsChampionGamesCollection
   */
  gameCount?: number;
}
/**
 *
 * @export
 * @interface LolRecommendationsCatalogItem
 */
export interface LolRecommendationsCatalogItem {
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsCatalogItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsCatalogItem
   */
  itemId?: number;
  /**
   *
   * @type {Array<LolRecommendationsItemKey>}
   * @memberof LolRecommendationsCatalogItem
   */
  itemRequirements?: Array<LolRecommendationsItemKey>;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsCatalogItem
   */
  maxQuantity?: number;
  /**
   *
   * @type {Array<LolRecommendationsItemCost>}
   * @memberof LolRecommendationsCatalogItem
   */
  prices?: Array<LolRecommendationsItemCost>;
  /**
   *
   * @type {LolRecommendationsSale}
   * @memberof LolRecommendationsCatalogItem
   */
  sale?: LolRecommendationsSale;
  /**
   *
   * @type {Array<string>}
   * @memberof LolRecommendationsCatalogItem
   */
  tags?: Array<string>;
}
/**
 *
 * @export
 * @interface LolRecommendationsCollectionsChampionMinimal
 */
export interface LolRecommendationsCollectionsChampionMinimal {
  /**
   *
   * @type {boolean}
   * @memberof LolRecommendationsCollectionsChampionMinimal
   */
  active?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsCollectionsChampionMinimal
   */
  alias?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsCollectionsChampionMinimal
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsCollectionsChampionMinimal
   */
  name?: string;
  /**
   *
   * @type {LolRecommendationsCollectionsOwnership}
   * @memberof LolRecommendationsCollectionsChampionMinimal
   */
  ownership?: LolRecommendationsCollectionsOwnership;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsCollectionsChampionMinimal
   */
  purchased?: number;
}
/**
 *
 * @export
 * @interface LolRecommendationsCollectionsChampionSkinMinimal
 */
export interface LolRecommendationsCollectionsChampionSkinMinimal {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsCollectionsChampionSkinMinimal
   */
  championId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolRecommendationsCollectionsChampionSkinMinimal
   */
  disabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsCollectionsChampionSkinMinimal
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolRecommendationsCollectionsChampionSkinMinimal
   */
  isBase?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolRecommendationsCollectionsChampionSkinMinimal
   */
  lastSelected?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsCollectionsChampionSkinMinimal
   */
  name?: string;
  /**
   *
   * @type {LolRecommendationsCollectionsOwnership}
   * @memberof LolRecommendationsCollectionsChampionSkinMinimal
   */
  ownership?: LolRecommendationsCollectionsOwnership;
  /**
   *
   * @type {boolean}
   * @memberof LolRecommendationsCollectionsChampionSkinMinimal
   */
  stillObtainable?: boolean;
}
/**
 *
 * @export
 * @interface LolRecommendationsCollectionsOwnership
 */
export interface LolRecommendationsCollectionsOwnership {
  /**
   *
   * @type {boolean}
   * @memberof LolRecommendationsCollectionsOwnership
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolRecommendationsCollectionsOwnership
   */
  owned?: boolean;
}
/**
 *
 * @export
 * @interface LolRecommendationsItemCost
 */
export interface LolRecommendationsItemCost {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsItemCost
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsItemCost
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsItemCost
   */
  discount?: number;
}
/**
 *
 * @export
 * @interface LolRecommendationsItemKey
 */
export interface LolRecommendationsItemKey {
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsItemKey
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsItemKey
   */
  itemId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRecommendationsItemType {
  CHAMPION = 'CHAMPION',
  CHAMPIONSKIN = 'CHAMPION_SKIN',
  BUNDLES = 'BUNDLES',
  HEXTECHCRAFTING = 'HEXTECH_CRAFTING',
  SUMMONERICON = 'SUMMONER_ICON',
  WARDSKIN = 'WARD_SKIN',
  EMOTE = 'EMOTE',
}

/**
 *
 * @export
 * @interface LolRecommendationsLoginSession
 */
export interface LolRecommendationsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof LolRecommendationsLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {LolRecommendationsLoginSessionStates}
   * @memberof LolRecommendationsLoginSession
   */
  state?: LolRecommendationsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRecommendationsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolRecommendationsMatchHistoryGame
 */
export interface LolRecommendationsMatchHistoryGame {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  gameCreation?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  gameCreationDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  gameDuration?: number;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  gameId?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  gameMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  gameType?: string;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  gameVersion?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  mapId?: number;
  /**
   *
   * @type {Array<LolRecommendationsMatchHistoryParticipantIdentities>}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  participantIdentities?: Array<
    LolRecommendationsMatchHistoryParticipantIdentities
  >;
  /**
   *
   * @type {Array<LolRecommendationsMatchHistoryParticipant>}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  participants?: Array<LolRecommendationsMatchHistoryParticipant>;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  platformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  queueId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGame
   */
  seasonId?: number;
}
/**
 *
 * @export
 * @interface LolRecommendationsMatchHistoryGameList
 */
export interface LolRecommendationsMatchHistoryGameList {
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryGameList
   */
  gameBeginDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGameList
   */
  gameCount?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryGameList
   */
  gameEndDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGameList
   */
  gameIndexBegin?: number;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryGameList
   */
  gameIndexEnd?: number;
  /**
   *
   * @type {Array<LolRecommendationsMatchHistoryGame>}
   * @memberof LolRecommendationsMatchHistoryGameList
   */
  games?: Array<LolRecommendationsMatchHistoryGame>;
}
/**
 *
 * @export
 * @interface LolRecommendationsMatchHistoryList
 */
export interface LolRecommendationsMatchHistoryList {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryList
   */
  accountId?: number;
  /**
   *
   * @type {LolRecommendationsMatchHistoryGameList}
   * @memberof LolRecommendationsMatchHistoryList
   */
  games?: LolRecommendationsMatchHistoryGameList;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryList
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface LolRecommendationsMatchHistoryParticipant
 */
export interface LolRecommendationsMatchHistoryParticipant {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipant
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryParticipant
   */
  highestAchievedSeasonTier?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipant
   */
  participantId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipant
   */
  spell1Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipant
   */
  spell2Id?: number;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipant
   */
  teamId?: number;
}
/**
 *
 * @export
 * @interface LolRecommendationsMatchHistoryParticipantIdentities
 */
export interface LolRecommendationsMatchHistoryParticipantIdentities {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentities
   */
  participantId?: number;
  /**
   *
   * @type {LolRecommendationsMatchHistoryParticipantIdentityPlayer}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentities
   */
  player?: LolRecommendationsMatchHistoryParticipantIdentityPlayer;
}
/**
 *
 * @export
 * @interface LolRecommendationsMatchHistoryParticipantIdentityPlayer
 */
export interface LolRecommendationsMatchHistoryParticipantIdentityPlayer {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentityPlayer
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentityPlayer
   */
  currentAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentityPlayer
   */
  currentPlatformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentityPlayer
   */
  matchHistoryUri?: string;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentityPlayer
   */
  platformId?: string;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentityPlayer
   */
  profileIcon?: number;
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentityPlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsMatchHistoryParticipantIdentityPlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolRecommendationsRecommendation
 */
export interface LolRecommendationsRecommendation {
  /**
   *
   * @type {number}
   * @memberof LolRecommendationsRecommendation
   */
  itemId?: number;
  /**
   *
   * @type {LolRecommendationsItemType}
   * @memberof LolRecommendationsRecommendation
   */
  itemType?: LolRecommendationsItemType;
}
/**
 *
 * @export
 * @interface LolRecommendationsRecommendationsCollection
 */
export interface LolRecommendationsRecommendationsCollection {
  /**
   *
   * @type {Array<LolRecommendationsRecommendation>}
   * @memberof LolRecommendationsRecommendationsCollection
   */
  recommendations?: Array<LolRecommendationsRecommendation>;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsRecommendationsCollection
   */
  uuid?: string;
}
/**
 *
 * @export
 * @interface LolRecommendationsSale
 */
export interface LolRecommendationsSale {
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsSale
   */
  endDate?: string;
  /**
   *
   * @type {Array<LolRecommendationsItemCost>}
   * @memberof LolRecommendationsSale
   */
  prices?: Array<LolRecommendationsItemCost>;
  /**
   *
   * @type {string}
   * @memberof LolRecommendationsSale
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface LolRegaliaChatPresence
 */
export interface LolRegaliaChatPresence {
  /**
   *
   * @type {number}
   * @memberof LolRegaliaChatPresence
   */
  icon?: number;
  /**
   *
   * @type {LolRegaliaChatPresenceLolData}
   * @memberof LolRegaliaChatPresence
   */
  lol?: LolRegaliaChatPresenceLolData;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaChatPresence
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolRegaliaChatPresenceExternal
 */
export interface LolRegaliaChatPresenceExternal {
  /**
   *
   * @type {number}
   * @memberof LolRegaliaChatPresenceExternal
   */
  icon?: number;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaChatPresenceExternal
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolRegaliaChatPresenceExternal
   */
  lol?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof LolRegaliaChatPresenceExternal
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolRegaliaChatPresenceLolData
 */
export interface LolRegaliaChatPresenceLolData {
  /**
   *
   * @type {number}
   * @memberof LolRegaliaChatPresenceLolData
   */
  level?: number;
  /**
   *
   * @type {LolRegaliaLeagueDivision}
   * @memberof LolRegaliaChatPresenceLolData
   */
  rankedLeagueDivision?: LolRegaliaLeagueDivision;
  /**
   *
   * @type {LolRegaliaLeagueQueueType}
   * @memberof LolRegaliaChatPresenceLolData
   */
  rankedLeagueQueue?: LolRegaliaLeagueQueueType;
  /**
   *
   * @type {LolRegaliaLeagueTier}
   * @memberof LolRegaliaChatPresenceLolData
   */
  rankedLeagueTier?: LolRegaliaLeagueTier;
  /**
   *
   * @type {LolRegaliaLeagueDivision}
   * @memberof LolRegaliaChatPresenceLolData
   */
  rankedPrevSeasonDivision?: LolRegaliaLeagueDivision;
  /**
   *
   * @type {LolRegaliaLeagueTier}
   * @memberof LolRegaliaChatPresenceLolData
   */
  rankedPrevSeasonTier?: LolRegaliaLeagueTier;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaChatPresenceLolData
   */
  rankedSplitRewardLevel?: number;
  /**
   *
   * @type {LolRegaliaRegaliaSettings}
   * @memberof LolRegaliaChatPresenceLolData
   */
  regalia?: LolRegaliaRegaliaSettings;
}
/**
 *
 * @export
 * @interface LolRegaliaItemKey
 */
export interface LolRegaliaItemKey {
  /**
   *
   * @type {string}
   * @memberof LolRegaliaItemKey
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaItemKey
   */
  itemId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRegaliaLeagueDivision {
  I = 'I',
  II = 'II',
  III = 'III',
  IV = 'IV',
  V = 'V',
  NA = 'NA',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolRegaliaLeagueQueueType {
  NONE = 'NONE',
  RANKEDSOLO5x5 = 'RANKED_SOLO_5x5',
  RANKEDFLEXSR = 'RANKED_FLEX_SR',
  RANKEDFLEXTT = 'RANKED_FLEX_TT',
  RANKEDTFT = 'RANKED_TFT',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolRegaliaLeagueTier {
  NONE = 'NONE',
  IRON = 'IRON',
  BRONZE = 'BRONZE',
  SILVER = 'SILVER',
  GOLD = 'GOLD',
  PLATINUM = 'PLATINUM',
  DIAMOND = 'DIAMOND',
  MASTER = 'MASTER',
  GRANDMASTER = 'GRANDMASTER',
  CHALLENGER = 'CHALLENGER',
}

/**
 *
 * @export
 * @interface LolRegaliaLoadout
 */
export interface LolRegaliaLoadout {
  /**
   *
   * @type {string}
   * @memberof LolRegaliaLoadout
   */
  id?: string;
  /**
   *
   * @type {LolRegaliaRegaliaLoadout}
   * @memberof LolRegaliaLoadout
   */
  loadout?: LolRegaliaRegaliaLoadout;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaLoadout
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaLoadout
   */
  scope?: string;
}
/**
 *
 * @export
 * @interface LolRegaliaLoginSession
 */
export interface LolRegaliaLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolRegaliaLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolRegaliaRankedQueueStats
 */
export interface LolRegaliaRankedQueueStats {
  /**
   *
   * @type {LolRegaliaLeagueDivision}
   * @memberof LolRegaliaRankedQueueStats
   */
  division?: LolRegaliaLeagueDivision;
  /**
   *
   * @type {boolean}
   * @memberof LolRegaliaRankedQueueStats
   */
  isProvisional?: boolean;
  /**
   *
   * @type {LolRegaliaLeagueQueueType}
   * @memberof LolRegaliaRankedQueueStats
   */
  queueType?: LolRegaliaLeagueQueueType;
  /**
   *
   * @type {LolRegaliaLeagueTier}
   * @memberof LolRegaliaRankedQueueStats
   */
  tier?: LolRegaliaLeagueTier;
}
/**
 *
 * @export
 * @interface LolRegaliaRankedStats
 */
export interface LolRegaliaRankedStats {
  /**
   *
   * @type {LolRegaliaLeagueTier}
   * @memberof LolRegaliaRankedStats
   */
  highestPreviousSeasonAchievedTier?: LolRegaliaLeagueTier;
  /**
   *
   * @type {LolRegaliaRankedQueueStats}
   * @memberof LolRegaliaRankedStats
   */
  highestRankedEntry?: LolRegaliaRankedQueueStats;
  /**
   *
   * @type {Array<LolRegaliaRankedQueueStats>}
   * @memberof LolRegaliaRankedStats
   */
  queues?: Array<LolRegaliaRankedQueueStats>;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaRankedStats
   */
  rankedRegaliaLevel?: number;
}
/**
 *
 * @export
 * @interface LolRegaliaRegalia
 */
export interface LolRegaliaRegalia {
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegalia
   */
  bannerType?: string;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegalia
   */
  crestType?: string;
  /**
   *
   * @type {LolRegaliaRegaliaRankedEntry}
   * @memberof LolRegaliaRegalia
   */
  highestRankedEntry?: LolRegaliaRegaliaRankedEntry;
  /**
   *
   * @type {LolRegaliaLeagueTier}
   * @memberof LolRegaliaRegalia
   */
  lastSeasonHighestRank?: LolRegaliaLeagueTier;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaRegalia
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaRegalia
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolRegaliaRegaliaAsync
 */
export interface LolRegaliaRegaliaAsync {
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegaliaAsync
   */
  md5?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRegaliaRegaliaBannerType {
  Blank = 'blank',
  LastSeasonHighestRank = 'lastSeasonHighestRank',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolRegaliaRegaliaCrestType {
  None = 'none',
  Prestige = 'prestige',
  Ranked = 'ranked',
}

/**
 *
 * @export
 * @interface LolRegaliaRegaliaFrontendConfig
 */
export interface LolRegaliaRegaliaFrontendConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolRegaliaRegaliaFrontendConfig
   */
  hovercardEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolRegaliaRegaliaFrontendConfig
   */
  selectionsEnabled?: boolean;
}
/**
 *
 * @export
 * @interface LolRegaliaRegaliaLoadout
 */
export interface LolRegaliaRegaliaLoadout {
  /**
   *
   * @type {LolRegaliaItemKey}
   * @memberof LolRegaliaRegaliaLoadout
   */
  REGALIA_BANNER_SLOT?: LolRegaliaItemKey;
  /**
   *
   * @type {LolRegaliaItemKey}
   * @memberof LolRegaliaRegaliaLoadout
   */
  REGALIA_CREST_SLOT?: LolRegaliaItemKey;
}
/**
 *
 * @export
 * @interface LolRegaliaRegaliaPlatformConfig
 */
export interface LolRegaliaRegaliaPlatformConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolRegaliaRegaliaPlatformConfig
   */
  HovercardEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolRegaliaRegaliaPlatformConfig
   */
  SelectionsEnabled?: boolean;
}
/**
 *
 * @export
 * @interface LolRegaliaRegaliaPreferences
 */
export interface LolRegaliaRegaliaPreferences {
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegaliaPreferences
   */
  preferredBannerType?: string;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegaliaPreferences
   */
  preferredCrestType?: string;
}
/**
 *
 * @export
 * @interface LolRegaliaRegaliaRankedEntry
 */
export interface LolRegaliaRegaliaRankedEntry {
  /**
   *
   * @type {LolRegaliaLeagueDivision}
   * @memberof LolRegaliaRegaliaRankedEntry
   */
  division?: LolRegaliaLeagueDivision;
  /**
   *
   * @type {LolRegaliaLeagueQueueType}
   * @memberof LolRegaliaRegaliaRankedEntry
   */
  queueType?: LolRegaliaLeagueQueueType;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaRegaliaRankedEntry
   */
  splitRewardLevel?: number;
  /**
   *
   * @type {LolRegaliaLeagueTier}
   * @memberof LolRegaliaRegaliaRankedEntry
   */
  tier?: LolRegaliaLeagueTier;
}
/**
 *
 * @export
 * @interface LolRegaliaRegaliaSettings
 */
export interface LolRegaliaRegaliaSettings {
  /**
   *
   * @type {LolRegaliaRegaliaBannerType}
   * @memberof LolRegaliaRegaliaSettings
   */
  bannerType?: LolRegaliaRegaliaBannerType;
  /**
   *
   * @type {LolRegaliaRegaliaCrestType}
   * @memberof LolRegaliaRegaliaSettings
   */
  crestType?: LolRegaliaRegaliaCrestType;
}
/**
 *
 * @export
 * @interface LolRegaliaRegaliaSettingsExternal
 */
export interface LolRegaliaRegaliaSettingsExternal {
  /**
   *
   * @type {number}
   * @memberof LolRegaliaRegaliaSettingsExternal
   */
  bannerType?: number;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaRegaliaSettingsExternal
   */
  crestType?: number;
}
/**
 *
 * @export
 * @interface LolRegaliaRegaliaWithPreferences
 */
export interface LolRegaliaRegaliaWithPreferences {
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegaliaWithPreferences
   */
  bannerType?: string;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegaliaWithPreferences
   */
  crestType?: string;
  /**
   *
   * @type {LolRegaliaRegaliaRankedEntry}
   * @memberof LolRegaliaRegaliaWithPreferences
   */
  highestRankedEntry?: LolRegaliaRegaliaRankedEntry;
  /**
   *
   * @type {LolRegaliaLeagueTier}
   * @memberof LolRegaliaRegaliaWithPreferences
   */
  lastSeasonHighestRank?: LolRegaliaLeagueTier;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegaliaWithPreferences
   */
  preferredBannerType?: string;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaRegaliaWithPreferences
   */
  preferredCrestType?: string;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaRegaliaWithPreferences
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaRegaliaWithPreferences
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolRegaliaSummoner
 */
export interface LolRegaliaSummoner {
  /**
   *
   * @type {number}
   * @memberof LolRegaliaSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaSummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRegaliaSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolRegaliaSummonerProfile
 */
export interface LolRegaliaSummonerProfile {
  /**
   *
   * @type {string}
   * @memberof LolRegaliaSummonerProfile
   */
  regalia?: string;
}
/**
 *
 * @export
 * @interface LolRegaliaSummonerProfileUpdate
 */
export interface LolRegaliaSummonerProfileUpdate {
  /**
   *
   * @type {string}
   * @memberof LolRegaliaSummonerProfileUpdate
   */
  key?: string;
  /**
   *
   * @type {string}
   * @memberof LolRegaliaSummonerProfileUpdate
   */
  value?: string;
}
/**
 *
 * @export
 * @interface LolReplaysClashPlaymodeRestrictedInfo
 */
export interface LolReplaysClashPlaymodeRestrictedInfo {
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysClashPlaymodeRestrictedInfo
   */
  isRestricted?: boolean;
}
/**
 *
 * @export
 * @interface LolReplaysGameflowAvailability
 */
export interface LolReplaysGameflowAvailability {
  /**
   *
   * @type {string}
   * @memberof LolReplaysGameflowAvailability
   */
  state?: string;
}
/**
 *
 * @export
 * @interface LolReplaysGameflowGameClient
 */
export interface LolReplaysGameflowGameClient {
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysGameflowGameClient
   */
  running?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolReplaysGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolReplaysGameflowSession
 */
export interface LolReplaysGameflowSession {
  /**
   *
   * @type {LolReplaysGameflowGameClient}
   * @memberof LolReplaysGameflowSession
   */
  gameClient?: LolReplaysGameflowGameClient;
  /**
   *
   * @type {LolReplaysGameflowPhase}
   * @memberof LolReplaysGameflowSession
   */
  phase?: LolReplaysGameflowPhase;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolReplaysGameflowWatchPhase {
  None = 'None',
  WatchStarted = 'WatchStarted',
  WatchInProgress = 'WatchInProgress',
  WatchFailedToLaunch = 'WatchFailedToLaunch',
}

/**
 *
 * @export
 * @interface LolReplaysInstallPaths
 */
export interface LolReplaysInstallPaths {
  /**
   *
   * @type {string}
   * @memberof LolReplaysInstallPaths
   */
  gameExecutablePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolReplaysInstallPaths
   */
  gameInstallRoot?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolReplaysMetadataState {
  Checking = 'checking',
  Found = 'found',
  Watch = 'watch',
  Download = 'download',
  Downloading = 'downloading',
  Incompatible = 'incompatible',
  MissingOrExpired = 'missingOrExpired',
  RetryDownload = 'retryDownload',
  Lost = 'lost',
  Unsupported = 'unsupported',
  Error = 'error',
}

/**
 *
 * @export
 * @interface LolReplaysReplayContextData
 */
export interface LolReplaysReplayContextData {
  /**
   *
   * @type {string}
   * @memberof LolReplaysReplayContextData
   */
  componentType?: string;
}
/**
 *
 * @export
 * @interface LolReplaysReplayCreateMetadata
 */
export interface LolReplaysReplayCreateMetadata {
  /**
   *
   * @type {number}
   * @memberof LolReplaysReplayCreateMetadata
   */
  gameEnd?: number;
  /**
   *
   * @type {string}
   * @memberof LolReplaysReplayCreateMetadata
   */
  gameType?: string;
  /**
   *
   * @type {string}
   * @memberof LolReplaysReplayCreateMetadata
   */
  gameVersion?: string;
  /**
   *
   * @type {number}
   * @memberof LolReplaysReplayCreateMetadata
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolReplaysReplayMetadata
 */
export interface LolReplaysReplayMetadata {
  /**
   *
   * @type {number}
   * @memberof LolReplaysReplayMetadata
   */
  downloadProgress?: number;
  /**
   *
   * @type {number}
   * @memberof LolReplaysReplayMetadata
   */
  gameId?: number;
  /**
   *
   * @type {LolReplaysMetadataState}
   * @memberof LolReplaysReplayMetadata
   */
  state?: LolReplaysMetadataState;
}
/**
 *
 * @export
 * @interface LolReplaysReplaysConfiguration
 */
export interface LolReplaysReplaysConfiguration {
  /**
   *
   * @type {string}
   * @memberof LolReplaysReplaysConfiguration
   */
  gameVersion?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysReplaysConfiguration
   */
  isInTournament?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysReplaysConfiguration
   */
  isLoggedIn?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysReplaysConfiguration
   */
  isPatching?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysReplaysConfiguration
   */
  isPlayingGame?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysReplaysConfiguration
   */
  isPlayingReplay?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysReplaysConfiguration
   */
  isReplaysEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysReplaysConfiguration
   */
  isReplaysForEndOfGameEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolReplaysReplaysConfiguration
   */
  isReplaysForMatchHistoryEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolReplaysReplaysConfiguration
   */
  minServerVersion?: string;
  /**
   *
   * @type {number}
   * @memberof LolReplaysReplaysConfiguration
   */
  minutesUntilReplayConsideredLost?: number;
}
/**
 *
 * @export
 * @interface LolReplaysReplaysDynamicConfig
 */
export interface LolReplaysReplaysDynamicConfig {
  /**
   *
   * @type {string}
   * @memberof LolReplaysReplaysDynamicConfig
   */
  MinSupportedGameServerVersion?: string;
  /**
   *
   * @type {number}
   * @memberof LolReplaysReplaysDynamicConfig
   */
  MinutesUntilReplayConsideredLost?: number;
}
/**
 *
 * @export
 * @interface LolReplaysReplaysSettingsData
 */
export interface LolReplaysReplaysSettingsData {
  /**
   *
   * @type {string}
   * @memberof LolReplaysReplaysSettingsData
   */
  highlights_folder_path?: string;
  /**
   *
   * @type {string}
   * @memberof LolReplaysReplaysSettingsData
   */
  replays_folder_path?: string;
}
/**
 *
 * @export
 * @interface LolReplaysReplaysSettingsResource
 */
export interface LolReplaysReplaysSettingsResource {
  /**
   *
   * @type {LolReplaysReplaysSettingsData}
   * @memberof LolReplaysReplaysSettingsResource
   */
  data?: LolReplaysReplaysSettingsData;
}
/**
 *
 * @export
 * @interface LolReplaysRoflFileMetadata
 */
export interface LolReplaysRoflFileMetadata {
  /**
   *
   * @type {number}
   * @memberof LolReplaysRoflFileMetadata
   */
  gameLength?: number;
  /**
   *
   * @type {string}
   * @memberof LolReplaysRoflFileMetadata
   */
  gameVersion?: string;
  /**
   *
   * @type {number}
   * @memberof LolReplaysRoflFileMetadata
   */
  lastGameChunkId?: number;
  /**
   *
   * @type {number}
   * @memberof LolReplaysRoflFileMetadata
   */
  lastKeyFrameId?: number;
}
/**
 *
 * @export
 * @interface LolRiotMessagingServiceChampionMasteryLevelUp
 */
export interface LolRiotMessagingServiceChampionMasteryLevelUp {
  /**
   *
   * @type {number}
   * @memberof LolRiotMessagingServiceChampionMasteryLevelUp
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolRiotMessagingServiceChampionMasteryLevelUp
   */
  championLevel?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolRiotMessagingServiceChampionMasteryLevelUp
   */
  hasLeveledUp?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolRiotMessagingServiceChampionMasteryLevelUp
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LolRiotMessagingServiceChampionMasteryLevelUp
   */
  playerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRiotMessagingServiceGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolRiotMessagingServiceGameflowSession
 */
export interface LolRiotMessagingServiceGameflowSession {
  /**
   *
   * @type {LolRiotMessagingServiceGameflowPhase}
   * @memberof LolRiotMessagingServiceGameflowSession
   */
  phase?: LolRiotMessagingServiceGameflowPhase;
}
/**
 *
 * @export
 * @interface LolRiotclientUpgraderGameflowAvailability
 */
export interface LolRiotclientUpgraderGameflowAvailability {
  /**
   *
   * @type {boolean}
   * @memberof LolRiotclientUpgraderGameflowAvailability
   */
  isAvailable?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolRiotclientUpgraderGameflowAvailability
   */
  state?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthAccessToken
 */
export interface LolRsoAuthAccessToken {
  /**
   *
   * @type {number}
   * @memberof LolRsoAuthAccessToken
   */
  expiry?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolRsoAuthAccessToken
   */
  scopes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthAccessToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthAuthError
 */
export interface LolRsoAuthAuthError {
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthAuthError
   */
  error?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthAuthError
   */
  errorDescription?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthAuthHint
 */
export interface LolRsoAuthAuthHint {
  /**
   *
   * @type {object}
   * @memberof LolRsoAuthAuthHint
   */
  context?: object;
  /**
   *
   * @type {boolean}
   * @memberof LolRsoAuthAuthHint
   */
  required?: boolean;
  /**
   *
   * @type {LolRsoAuthAuthHintType}
   * @memberof LolRsoAuthAuthHint
   */
  type?: LolRsoAuthAuthHintType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRsoAuthAuthHintType {
  EmailVerification = 'email_verification',
  PasswordReset = 'password_reset',
  ParentalConsent = 'parental_consent',
  AmbiguousUsername = 'ambiguous_username',
}

/**
 *
 * @export
 * @interface LolRsoAuthAuthorization
 */
export interface LolRsoAuthAuthorization {
  /**
   *
   * @type {number}
   * @memberof LolRsoAuthAuthorization
   */
  currentAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthAuthorization
   */
  currentPlatformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthAuthorization
   */
  subject?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthAuthorizationRequest
 */
export interface LolRsoAuthAuthorizationRequest {
  /**
   *
   * @type {Array<string>}
   * @memberof LolRsoAuthAuthorizationRequest
   */
  claims?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthAuthorizationRequest
   */
  clientId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolRsoAuthAuthorizationRequest
   */
  scope?: Array<string>;
  /**
   *
   * @type {Array<LolRsoAuthRSOAuthorizationTrustLevel>}
   * @memberof LolRsoAuthAuthorizationRequest
   */
  trustLevels?: Array<LolRsoAuthRSOAuthorizationTrustLevel>;
}
/**
 *
 * @export
 * @interface LolRsoAuthAuthorizationResponse
 */
export interface LolRsoAuthAuthorizationResponse {
  /**
   *
   * @type {LolRsoAuthImplicitAuthorization}
   * @memberof LolRsoAuthAuthorizationResponse
   */
  authorization?: LolRsoAuthImplicitAuthorization;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthAuthorizationResponse
   */
  type?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRsoAuthConfigReadinessEnum {
  NotReady = 'NotReady',
  Ready = 'Ready',
  Disabled = 'Disabled',
}

/**
 *
 * @export
 * @interface LolRsoAuthConfigStatus
 */
export interface LolRsoAuthConfigStatus {
  /**
   *
   * @type {LolRsoAuthConfigReadinessEnum}
   * @memberof LolRsoAuthConfigStatus
   */
  readiness?: LolRsoAuthConfigReadinessEnum;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRsoAuthConfigType {
  Public = 'public',
  Player = 'player',
}

/**
 *
 * @export
 * @interface LolRsoAuthDeviceId
 */
export interface LolRsoAuthDeviceId {
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthDeviceId
   */
  collectorServerName?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthDeviceId
   */
  frameUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthDeviceId
   */
  installId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthDeviceId
   */
  merchantId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthDeviceId
   */
  sessionId?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthEntitlementsToken
 */
export interface LolRsoAuthEntitlementsToken {
  /**
   *
   * @type {Array<string>}
   * @memberof LolRsoAuthEntitlementsToken
   */
  entitlements?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolRsoAuthEntitlementsToken
   */
  expiry?: number;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthEntitlementsToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthIdToken
 */
export interface LolRsoAuthIdToken {
  /**
   *
   * @type {number}
   * @memberof LolRsoAuthIdToken
   */
  expiry?: number;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthIdToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthImplicitAuthorization
 */
export interface LolRsoAuthImplicitAuthorization {
  /**
   *
   * @type {LolRsoAuthAccessToken}
   * @memberof LolRsoAuthImplicitAuthorization
   */
  accessToken?: LolRsoAuthAccessToken;
  /**
   *
   * @type {LolRsoAuthIdToken}
   * @memberof LolRsoAuthImplicitAuthorization
   */
  idToken?: LolRsoAuthIdToken;
}
/**
 *
 * @export
 * @interface LolRsoAuthPublicClientConfig
 */
export interface LolRsoAuthPublicClientConfig {
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthPublicClientConfig
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthPublicClientConfig
   */
  url?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolRsoAuthRSOAuthorizationTrustLevel {
  AlwaysTrusted = 'always_trusted',
  TrustedDevice = 'trusted_device',
  AlwaysVerify = 'always_verify',
}

/**
 *
 * @export
 * @interface LolRsoAuthRSOJWTConfig
 */
export interface LolRsoAuthRSOJWTConfig {
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthRSOJWTConfig
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthRSOPlayerCredentials
 */
export interface LolRsoAuthRSOPlayerCredentials {
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthRSOPlayerCredentials
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthRSOPlayerCredentials
   */
  platformId?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthRSOPlayerCredentials
   */
  username?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthRegionStatus
 */
export interface LolRsoAuthRegionStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolRsoAuthRegionStatus
   */
  enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolRsoAuthRegionStatus
   */
  isLQFallbackAllowed?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolRsoAuthRegionStatus
   */
  isUserInfoEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthRegionStatus
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthSessionResponse
 */
export interface LolRsoAuthSessionResponse {
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthSessionResponse
   */
  error?: string;
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthSessionResponse
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolRsoAuthUserInfo
 */
export interface LolRsoAuthUserInfo {
  /**
   *
   * @type {string}
   * @memberof LolRsoAuthUserInfo
   */
  userInfo?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusBroadcastMessage
 */
export interface LolServiceStatusBroadcastMessage {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusBroadcastMessage
   */
  content?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusBroadcastMessage
   */
  messageKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusBroadcastMessage
   */
  severity?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusBroadcastNotification
 */
export interface LolServiceStatusBroadcastNotification {
  /**
   *
   * @type {Array<LolServiceStatusBroadcastMessage>}
   * @memberof LolServiceStatusBroadcastNotification
   */
  broadcastMessages?: Array<LolServiceStatusBroadcastMessage>;
}
/**
 *
 * @export
 * @interface LolServiceStatusLegacyServiceStatusMessage
 */
export interface LolServiceStatusLegacyServiceStatusMessage {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusMessage
   */
  content?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusMessage
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusMessage
   */
  heading?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusMessage
   */
  severity?: string;
  /**
   *
   * @type {Array<LolServiceStatusLegacyServiceStatusTranslation>}
   * @memberof LolServiceStatusLegacyServiceStatusMessage
   */
  translations?: Array<LolServiceStatusLegacyServiceStatusTranslation>;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusMessage
   */
  updated_at?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusLegacyServiceStatusResponse
 */
export interface LolServiceStatusLegacyServiceStatusResponse {
  /**
   *
   * @type {Array<LolServiceStatusLegacyServiceStatusMessage>}
   * @memberof LolServiceStatusLegacyServiceStatusResponse
   */
  messages?: Array<LolServiceStatusLegacyServiceStatusMessage>;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusResponse
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusLegacyServiceStatusTranslation
 */
export interface LolServiceStatusLegacyServiceStatusTranslation {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusTranslation
   */
  content?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusTranslation
   */
  heading?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusLegacyServiceStatusTranslation
   */
  locale?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusLoginDataPacket
 */
export interface LolServiceStatusLoginDataPacket {
  /**
   *
   * @type {LolServiceStatusBroadcastNotification}
   * @memberof LolServiceStatusLoginDataPacket
   */
  broadcastNotification?: LolServiceStatusBroadcastNotification;
}
/**
 *
 * @export
 * @interface LolServiceStatusRegionLocaleResource
 */
export interface LolServiceStatusRegionLocaleResource {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRegionLocaleResource
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRegionLocaleResource
   */
  region?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusRiotStatusIncident
 */
export interface LolServiceStatusRiotStatusIncident {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusIncident
   */
  archive_at?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusIncident
   */
  created_at?: string;
  /**
   *
   * @type {number}
   * @memberof LolServiceStatusRiotStatusIncident
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusIncident
   */
  incident_severity?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolServiceStatusRiotStatusIncident
   */
  platforms?: Array<string>;
  /**
   *
   * @type {Array<LolServiceStatusRiotStatusTitle>}
   * @memberof LolServiceStatusRiotStatusIncident
   */
  titles?: Array<LolServiceStatusRiotStatusTitle>;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusIncident
   */
  updated_at?: string;
  /**
   *
   * @type {Array<LolServiceStatusRiotStatusUpdate>}
   * @memberof LolServiceStatusRiotStatusIncident
   */
  updates?: Array<LolServiceStatusRiotStatusUpdate>;
}
/**
 *
 * @export
 * @interface LolServiceStatusRiotStatusMaintenance
 */
export interface LolServiceStatusRiotStatusMaintenance {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusMaintenance
   */
  archive_at?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusMaintenance
   */
  created_at?: string;
  /**
   *
   * @type {number}
   * @memberof LolServiceStatusRiotStatusMaintenance
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusMaintenance
   */
  maintenance_status?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolServiceStatusRiotStatusMaintenance
   */
  platforms?: Array<string>;
  /**
   *
   * @type {Array<LolServiceStatusRiotStatusTitle>}
   * @memberof LolServiceStatusRiotStatusMaintenance
   */
  titles?: Array<LolServiceStatusRiotStatusTitle>;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusMaintenance
   */
  updated_at?: string;
  /**
   *
   * @type {Array<LolServiceStatusRiotStatusUpdate>}
   * @memberof LolServiceStatusRiotStatusMaintenance
   */
  updates?: Array<LolServiceStatusRiotStatusUpdate>;
}
/**
 *
 * @export
 * @interface LolServiceStatusRiotStatusResource
 */
export interface LolServiceStatusRiotStatusResource {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusResource
   */
  id?: string;
  /**
   *
   * @type {Array<LolServiceStatusRiotStatusIncident>}
   * @memberof LolServiceStatusRiotStatusResource
   */
  incidents?: Array<LolServiceStatusRiotStatusIncident>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolServiceStatusRiotStatusResource
   */
  locales?: Array<string>;
  /**
   *
   * @type {Array<LolServiceStatusRiotStatusMaintenance>}
   * @memberof LolServiceStatusRiotStatusResource
   */
  maintenances?: Array<LolServiceStatusRiotStatusMaintenance>;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusResource
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusRiotStatusTitle
 */
export interface LolServiceStatusRiotStatusTitle {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusTitle
   */
  content?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusTitle
   */
  locale?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusRiotStatusTranslation
 */
export interface LolServiceStatusRiotStatusTranslation {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusTranslation
   */
  content?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusTranslation
   */
  locale?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusRiotStatusUpdate
 */
export interface LolServiceStatusRiotStatusUpdate {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusUpdate
   */
  author?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusUpdate
   */
  created_at?: string;
  /**
   *
   * @type {number}
   * @memberof LolServiceStatusRiotStatusUpdate
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolServiceStatusRiotStatusUpdate
   */
  publish?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof LolServiceStatusRiotStatusUpdate
   */
  publish_locations?: Array<string>;
  /**
   *
   * @type {Array<LolServiceStatusRiotStatusTranslation>}
   * @memberof LolServiceStatusRiotStatusUpdate
   */
  translations?: Array<LolServiceStatusRiotStatusTranslation>;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusRiotStatusUpdate
   */
  updated_at?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusServiceStatusResource
 */
export interface LolServiceStatusServiceStatusResource {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusServiceStatusResource
   */
  humanReadableUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusServiceStatusResource
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolServiceStatusTickerMessage
 */
export interface LolServiceStatusTickerMessage {
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusTickerMessage
   */
  createdAt?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusTickerMessage
   */
  heading?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusTickerMessage
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusTickerMessage
   */
  severity?: string;
  /**
   *
   * @type {string}
   * @memberof LolServiceStatusTickerMessage
   */
  updatedAt?: string;
}
/**
 *
 * @export
 * @interface LolSettingsLoginSession
 */
export interface LolSettingsLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolSettingsLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof LolSettingsLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {LolSettingsLoginSessionStates}
   * @memberof LolSettingsLoginSession
   */
  state?: LolSettingsLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolSettingsLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolSettingsLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolSettingsSettingCategory
 */
export interface LolSettingsSettingCategory {
  /**
   *
   * @type {object}
   * @memberof LolSettingsSettingCategory
   */
  data?: object;
  /**
   *
   * @type {number}
   * @memberof LolSettingsSettingCategory
   */
  schemaVersion?: number;
}
/**
 *
 * @export
 * @interface LolShutdownShutdownNotification
 */
export interface LolShutdownShutdownNotification {
  /**
   *
   * @type {string}
   * @memberof LolShutdownShutdownNotification
   */
  additionalInfo?: string;
  /**
   *
   * @type {number}
   * @memberof LolShutdownShutdownNotification
   */
  countdown?: number;
  /**
   *
   * @type {LolShutdownShutdownReason}
   * @memberof LolShutdownShutdownNotification
   */
  reason?: LolShutdownShutdownReason;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolShutdownShutdownReason {
  Invalid = 'Invalid',
  PlatformMaintenance = 'PlatformMaintenance',
  LcuAlphaDisabled = 'LcuAlphaDisabled',
  PlayerBanned = 'PlayerBanned',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum LolSimpleDialogMessagesGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolSimpleDialogMessagesGameflowSession
 */
export interface LolSimpleDialogMessagesGameflowSession {
  /**
   *
   * @type {LolSimpleDialogMessagesGameflowPhase}
   * @memberof LolSimpleDialogMessagesGameflowSession
   */
  phase?: LolSimpleDialogMessagesGameflowPhase;
}
/**
 *
 * @export
 * @interface LolSimpleDialogMessagesLocalMessageRequest
 */
export interface LolSimpleDialogMessagesLocalMessageRequest {
  /**
   *
   * @type {Array<string>}
   * @memberof LolSimpleDialogMessagesLocalMessageRequest
   */
  msgBody?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolSimpleDialogMessagesLocalMessageRequest
   */
  msgType?: string;
}
/**
 *
 * @export
 * @interface LolSimpleDialogMessagesLoginDataPacket
 */
export interface LolSimpleDialogMessagesLoginDataPacket {
  /**
   *
   * @type {Array<LolSimpleDialogMessagesSimpleMessage>}
   * @memberof LolSimpleDialogMessagesLoginDataPacket
   */
  simpleMessages?: Array<LolSimpleDialogMessagesSimpleMessage>;
}
/**
 *
 * @export
 * @interface LolSimpleDialogMessagesMessage
 */
export interface LolSimpleDialogMessagesMessage {
  /**
   *
   * @type {object}
   * @memberof LolSimpleDialogMessagesMessage
   */
  body?: object;
  /**
   *
   * @type {number}
   * @memberof LolSimpleDialogMessagesMessage
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolSimpleDialogMessagesMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolSimpleDialogMessagesSimpleMessage
 */
export interface LolSimpleDialogMessagesSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof LolSimpleDialogMessagesSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSimpleDialogMessagesSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolSimpleDialogMessagesSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolSimpleDialogMessagesSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolSpectatorSpectateGameInfo
 */
export interface LolSpectatorSpectateGameInfo {
  /**
   *
   * @type {string}
   * @memberof LolSpectatorSpectateGameInfo
   */
  allowObserveMode?: string;
  /**
   *
   * @type {string}
   * @memberof LolSpectatorSpectateGameInfo
   */
  dropInSpectateGameId?: string;
  /**
   *
   * @type {string}
   * @memberof LolSpectatorSpectateGameInfo
   */
  gameQueueType?: string;
  /**
   *
   * @type {string}
   * @memberof LolSpectatorSpectateGameInfo
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolSpectatorSummonerOrTeamAvailabilty
 */
export interface LolSpectatorSummonerOrTeamAvailabilty {
  /**
   *
   * @type {Array<string>}
   * @memberof LolSpectatorSummonerOrTeamAvailabilty
   */
  availableForWatching?: Array<string>;
}
/**
 *
 * @export
 * @interface LolStatstonesCatalogBundle
 */
export interface LolStatstonesCatalogBundle {
  /**
   *
   * @type {LolStatstonesCatalogItemDetails}
   * @memberof LolStatstonesCatalogBundle
   */
  item?: LolStatstonesCatalogItemDetails;
}
/**
 *
 * @export
 * @interface LolStatstonesCatalogBundlePrice
 */
export interface LolStatstonesCatalogBundlePrice {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesCatalogBundlePrice
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesCatalogBundlePrice
   */
  currency?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesCatalogItemDetails
 */
export interface LolStatstonesCatalogItemDetails {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesCatalogItemDetails
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesCatalogItemDetails
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesCatalogItemDetails
   */
  itemInstanceId?: string;
  /**
   *
   * @type {Array<LolStatstonesCatalogBundlePrice>}
   * @memberof LolStatstonesCatalogItemDetails
   */
  prices?: Array<LolStatstonesCatalogBundlePrice>;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesCatalogItemDetails
   */
  releaseDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesCatalogItemDetails
   */
  subInventoryType?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesChampionStatstoneSetSummary
 */
export interface LolStatstonesChampionStatstoneSetSummary {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSetSummary
   */
  milestonesPassed?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesChampionStatstoneSetSummary
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSetSummary
   */
  stonesAvailable?: number;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSetSummary
   */
  stonesIlluminated?: number;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSetSummary
   */
  stonesOwned?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesChampionStatstoneSummary
 */
export interface LolStatstonesChampionStatstoneSummary {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSummary
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSummary
   */
  milestonesPassed?: number;
  /**
   *
   * @type {Array<LolStatstonesChampionStatstoneSetSummary>}
   * @memberof LolStatstonesChampionStatstoneSummary
   */
  sets?: Array<LolStatstonesChampionStatstoneSetSummary>;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSummary
   */
  stonesAvailable?: number;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSummary
   */
  stonesIlluminated?: number;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesChampionStatstoneSummary
   */
  stonesOwned?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesCollectionsChampion
 */
export interface LolStatstonesCollectionsChampion {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesCollectionsChampion
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesCollectionsChampion
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesCollectionsChampion
   */
  squarePortraitPath?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesEogNotificationEnvelope
 */
export interface LolStatstonesEogNotificationEnvelope {
  /**
   *
   * @type {Array<LolStatstonesPersonalBestNotification>}
   * @memberof LolStatstonesEogNotificationEnvelope
   */
  othersPersonalBests?: Array<LolStatstonesPersonalBestNotification>;
  /**
   *
   * @type {Array<LolStatstonesMilestoneProgressNotification>}
   * @memberof LolStatstonesEogNotificationEnvelope
   */
  selfMilestoneProgress?: Array<LolStatstonesMilestoneProgressNotification>;
  /**
   *
   * @type {Array<LolStatstonesPersonalBestNotification>}
   * @memberof LolStatstonesEogNotificationEnvelope
   */
  selfPersonalBests?: Array<LolStatstonesPersonalBestNotification>;
  /**
   *
   * @type {Array<LolStatstonesStatstoneProgress>}
   * @memberof LolStatstonesEogNotificationEnvelope
   */
  selfStatstoneProgress?: Array<LolStatstonesStatstoneProgress>;
}
/**
 *
 * @export
 * @interface LolStatstonesGameDataItemReference
 */
export interface LolStatstonesGameDataItemReference {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataItemReference
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataItemReference
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesGameDataItemReference
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesGameDataStatstone
 */
export interface LolStatstonesGameDataStatstone {
  /**
   *
   * @type {LolStatstonesGameDataItemReference}
   * @memberof LolStatstonesGameDataStatstone
   */
  boundChampion?: LolStatstonesGameDataItemReference;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstone
   */
  category?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstone
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstone
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstone
   */
  iconFull?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstone
   */
  iconLit?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstone
   */
  iconUnlit?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstone
   */
  iconUnowned?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesGameDataStatstone
   */
  isEpic?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesGameDataStatstone
   */
  isRetired?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesGameDataStatstone
   */
  itemId?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof LolStatstonesGameDataStatstone
   */
  milestones?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstone
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesGameDataStatstone
   */
  trackingType?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesGameDataStatstonePack
 */
export interface LolStatstonesGameDataStatstonePack {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstonePack
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstonePack
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesGameDataStatstonePack
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstonePack
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesGameDataStatstoneSet
 */
export interface LolStatstonesGameDataStatstoneSet {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstoneSet
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstoneSet
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesGameDataStatstoneSet
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesGameDataStatstoneSet
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesGameDataStatstoneSet
   */
  price?: number;
  /**
   *
   * @type {Array<LolStatstonesGameDataStatstone>}
   * @memberof LolStatstonesGameDataStatstoneSet
   */
  statstones?: Array<LolStatstonesGameDataStatstone>;
}
/**
 *
 * @export
 * @interface LolStatstonesGameDataStatstonesInfo
 */
export interface LolStatstonesGameDataStatstonesInfo {
  /**
   *
   * @type {object}
   * @memberof LolStatstonesGameDataStatstonesInfo
   */
  champIdToPackIds?: object;
  /**
   *
   * @type {object}
   * @memberof LolStatstonesGameDataStatstonesInfo
   */
  collectionIdToStatStoneIds?: object;
  /**
   *
   * @type {Array<LolStatstonesGameDataStatstonePack>}
   * @memberof LolStatstonesGameDataStatstonesInfo
   */
  packData?: Array<LolStatstonesGameDataStatstonePack>;
  /**
   *
   * @type {object}
   * @memberof LolStatstonesGameDataStatstonesInfo
   */
  packIdToChampIds?: object;
  /**
   *
   * @type {object}
   * @memberof LolStatstonesGameDataStatstonesInfo
   */
  packIdToStatStonesIds?: object;
  /**
   *
   * @type {object}
   * @memberof LolStatstonesGameDataStatstonesInfo
   */
  packIdToSubPackIds?: object;
  /**
   *
   * @type {object}
   * @memberof LolStatstonesGameDataStatstonesInfo
   */
  seriesIdToStatStoneIds?: object;
  /**
   *
   * @type {Array<LolStatstonesGameDataStatstoneSet>}
   * @memberof LolStatstonesGameDataStatstonesInfo
   */
  statstoneData?: Array<LolStatstonesGameDataStatstoneSet>;
}
/**
 *
 * @export
 * @interface LolStatstonesLoadout
 */
export interface LolStatstonesLoadout {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesLoadout
   */
  id?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesLoadout
   */
  itemId?: number;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof LolStatstonesLoadout
   */
  loadout?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof LolStatstonesLoadout
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesLoadout
   */
  scope?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesLoadoutItem
 */
export interface LolStatstonesLoadoutItem {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesLoadoutItem
   */
  contentId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesLoadoutItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesLoadoutItem
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesMilestoneNotificationDto
 */
export interface LolStatstonesMilestoneNotificationDto {
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesMilestoneNotificationDto
   */
  isCompleted?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesMilestoneNotificationDto
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesMilestoneNotificationDto
   */
  statstoneId?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesMilestoneNotificationDto
   */
  threshold?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesMilestoneProgressNotification
 */
export interface LolStatstonesMilestoneProgressNotification {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesMilestoneProgressNotification
   */
  imageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesMilestoneProgressNotification
   */
  level?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesMilestoneProgressNotification
   */
  statstoneId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesMilestoneProgressNotification
   */
  statstoneName?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesMilestoneProgressNotification
   */
  threshold?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesNumberFormattingBehavior
 */
export interface LolStatstonesNumberFormattingBehavior {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesNumberFormattingBehavior
   */
  digitsForThousandsSeperator?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesNumberFormattingBehavior
   */
  trimTrailingZerosAfterDecimal?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesNumberFormattingBehavior
   */
  westernNumberGrouping?: boolean;
}
/**
 *
 * @export
 * @interface LolStatstonesNumberFormattingData
 */
export interface LolStatstonesNumberFormattingData {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  billionAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  decimalSeperator?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  hourAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  kilometersAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  metersAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  millionAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  minuteAbbreviation?: string;
  /**
   *
   * @type {LolStatstonesNumberFormattingBehavior}
   * @memberof LolStatstonesNumberFormattingData
   */
  numberFormattingBehavior?: LolStatstonesNumberFormattingBehavior;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  oneHundredMillionAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  percentageFormat?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  secondAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  tenThousandAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  thousandAbbreviation?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  thousandSeperator?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesNumberFormattingData
   */
  trillionAbbreviation?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesPersonalBestNotification
 */
export interface LolStatstonesPersonalBestNotification {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesPersonalBestNotification
   */
  imageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesPersonalBestNotification
   */
  personalBest?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesPersonalBestNotification
   */
  statstoneId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesPersonalBestNotification
   */
  statstoneName?: string;
  /**
   *
   * @type {LolStatstonesSummoner}
   * @memberof LolStatstonesPersonalBestNotification
   */
  summoner?: LolStatstonesSummoner;
}
/**
 *
 * @export
 * @interface LolStatstonesPriceInfo
 */
export interface LolStatstonesPriceInfo {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesPriceInfo
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesPriceInfo
   */
  price?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesProfileStatstoneSummary
 */
export interface LolStatstonesProfileStatstoneSummary {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesProfileStatstoneSummary
   */
  category?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesProfileStatstoneSummary
   */
  championId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesProfileStatstoneSummary
   */
  imageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesProfileStatstoneSummary
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesProfileStatstoneSummary
   */
  value?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstone
 */
export interface LolStatstonesStatstone {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstone
   */
  boundChampionItemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  category?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstone
   */
  completionValue?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  formattedMilestoneLevel?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  formattedPersonalBest?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  formattedValue?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  imageUrl?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesStatstone
   */
  isComplete?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesStatstone
   */
  isEpic?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesStatstone
   */
  isFeatured?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesStatstone
   */
  isRetired?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  nextMilestone?: string;
  /**
   *
   * @type {LolStatstonesStatstonePlayerRecord}
   * @memberof LolStatstonesStatstone
   */
  playerRecord?: LolStatstonesStatstonePlayerRecord;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstone
   */
  statstoneId?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneCompletion
 */
export interface LolStatstonesStatstoneCompletion {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneCompletion
   */
  category?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesStatstoneCompletion
   */
  isEpic?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneCompletion
   */
  statstoneName?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneFeaturedRequest
 */
export interface LolStatstonesStatstoneFeaturedRequest {
  /**
   *
   * @type {Array<LolStatstonesStatstone>}
   * @memberof LolStatstonesStatstoneFeaturedRequest
   */
  existingFeatured?: Array<LolStatstonesStatstone>;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneFeaturedRequest
   */
  index?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneMasteryVignette
 */
export interface LolStatstonesStatstoneMasteryVignette {
  /**
   *
   * @type {Array<string>}
   * @memberof LolStatstonesStatstoneMasteryVignette
   */
  completedSetUuids?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneMasteryVignette
   */
  masteryLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneMasteryVignette
   */
  numSetsCompleted?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneMasteryVignette
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneNotificationDto
 */
export interface LolStatstonesStatstoneNotificationDto {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneNotificationDto
   */
  best?: number;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneNotificationDto
   */
  delta?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesStatstoneNotificationDto
   */
  isNewBest?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneNotificationDto
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneNotificationDto
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneNotificationDto
   */
  statstoneId?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneNotificationDto
   */
  value?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneNotificationEnvelopeDto
 */
export interface LolStatstonesStatstoneNotificationEnvelopeDto {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneNotificationEnvelopeDto
   */
  gameId?: number;
  /**
   *
   * @type {Array<LolStatstonesMilestoneNotificationDto>}
   * @memberof LolStatstonesStatstoneNotificationEnvelopeDto
   */
  milestones?: Array<LolStatstonesMilestoneNotificationDto>;
  /**
   *
   * @type {Array<LolStatstonesStatstoneNotificationDto>}
   * @memberof LolStatstonesStatstoneNotificationEnvelopeDto
   */
  updates?: Array<LolStatstonesStatstoneNotificationDto>;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstonePlayerRecord
 */
export interface LolStatstonesStatstonePlayerRecord {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  dateAcquired?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  dateArchived?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  dateCompleted?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  dateModified?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  entitled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  milestoneLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  personalBest?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  puuid?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  statstoneId?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstonePlayerRecord
   */
  value?: number;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneProgress
 */
export interface LolStatstonesStatstoneProgress {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  delta?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  existingProgressPercent?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  imageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  newMilestoneDifference?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  newProgressPercent?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  nextMilestone?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  statstoneId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  statstoneName?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneProgress
   */
  value?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneRekindledVignette
 */
export interface LolStatstonesStatstoneRekindledVignette {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneRekindledVignette
   */
  portraitPath?: string;
  /**
   *
   * @type {LolStatstonesStatstoneCompletion}
   * @memberof LolStatstonesStatstoneRekindledVignette
   */
  statstone?: LolStatstonesStatstoneCompletion;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneSet
 */
export interface LolStatstonesStatstoneSet {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneSet
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneSet
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneSet
   */
  itemInstanceID?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneSet
   */
  milestonesPassed?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneSet
   */
  name?: string;
  /**
   *
   * @type {Array<LolStatstonesGameDataStatstonePack>}
   * @memberof LolStatstonesStatstoneSet
   */
  ownedFromPacks?: Array<LolStatstonesGameDataStatstonePack>;
  /**
   *
   * @type {Array<LolStatstonesPriceInfo>}
   * @memberof LolStatstonesStatstoneSet
   */
  prices?: Array<LolStatstonesPriceInfo>;
  /**
   *
   * @type {Array<LolStatstonesStatstone>}
   * @memberof LolStatstonesStatstoneSet
   */
  statstones?: Array<LolStatstonesStatstone>;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneSet
   */
  stonesOwned?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneSet
   */
  subInventoryType?: string;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneSetCompleteVignette
 */
export interface LolStatstonesStatstoneSetCompleteVignette {
  /**
   *
   * @type {Array<LolStatstonesStatstoneCompletion>}
   * @memberof LolStatstonesStatstoneSetCompleteVignette
   */
  statstones?: Array<LolStatstonesStatstoneCompletion>;
}
/**
 *
 * @export
 * @interface LolStatstonesStatstoneVignetteNotificationEnvelopeDto
 */
export interface LolStatstonesStatstoneVignetteNotificationEnvelopeDto {
  /**
   *
   * @type {number}
   * @memberof LolStatstonesStatstoneVignetteNotificationEnvelopeDto
   */
  champId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesStatstoneVignetteNotificationEnvelopeDto
   */
  champName?: string;
  /**
   *
   * @type {Array<LolStatstonesStatstoneMasteryVignette>}
   * @memberof LolStatstonesStatstoneVignetteNotificationEnvelopeDto
   */
  masteryVignetteNotifications?: Array<LolStatstonesStatstoneMasteryVignette>;
  /**
   *
   * @type {Array<LolStatstonesStatstoneRekindledVignette>}
   * @memberof LolStatstonesStatstoneVignetteNotificationEnvelopeDto
   */
  rekindledVignetteNotifications?: Array<
    LolStatstonesStatstoneRekindledVignette
  >;
  /**
   *
   * @type {Array<LolStatstonesStatstoneSetCompleteVignette>}
   * @memberof LolStatstonesStatstoneVignetteNotificationEnvelopeDto
   */
  setCompleteVignetteNotifications?: Array<
    LolStatstonesStatstoneSetCompleteVignette
  >;
}
/**
 *
 * @export
 * @interface LolStatstonesSummoner
 */
export interface LolStatstonesSummoner {
  /**
   *
   * @type {string}
   * @memberof LolStatstonesSummoner
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolStatstonesSummoner
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof LolStatstonesSummoner
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolStoreAccessTokenResource
 */
export interface LolStoreAccessTokenResource {
  /**
   *
   * @type {number}
   * @memberof LolStoreAccessTokenResource
   */
  expiry?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof LolStoreAccessTokenResource
   */
  scopes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolStoreAccessTokenResource
   */
  token?: string;
}
/**
 *
 * @export
 * @interface LolStoreAllSummonerData
 */
export interface LolStoreAllSummonerData {
  /**
   *
   * @type {LolStoreSummoner}
   * @memberof LolStoreAllSummonerData
   */
  summoner?: LolStoreSummoner;
  /**
   *
   * @type {LolStoreSummonerLevelAndPoints}
   * @memberof LolStoreAllSummonerData
   */
  summonerLevelAndPoints?: LolStoreSummonerLevelAndPoints;
}
/**
 *
 * @export
 * @interface LolStoreBundleItemDTO
 */
export interface LolStoreBundleItemDTO {
  /**
   *
   * @type {string}
   * @memberof LolStoreBundleItemDTO
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreBundleItemDTO
   */
  discountedRp?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreBundleItemDTO
   */
  iconUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreBundleItemDTO
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreBundleItemDTO
   */
  ip?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreBundleItemDTO
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreBundleItemDTO
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolStoreBundleItemDTO
   */
  owned?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolStoreBundleItemDTO
   */
  quantity?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreBundleItemDTO
   */
  rp?: number;
}
/**
 *
 * @export
 * @interface LolStoreBundled
 */
export interface LolStoreBundled {
  /**
   *
   * @type {boolean}
   * @memberof LolStoreBundled
   */
  flexible?: boolean;
  /**
   *
   * @type {Array<LolStoreBundledItem>}
   * @memberof LolStoreBundled
   */
  items?: Array<LolStoreBundledItem>;
  /**
   *
   * @type {Array<LolStoreBundledItemCost>}
   * @memberof LolStoreBundled
   */
  minimumPrices?: Array<LolStoreBundledItemCost>;
}
/**
 *
 * @export
 * @interface LolStoreBundledItem
 */
export interface LolStoreBundledItem {
  /**
   *
   * @type {Array<LolStoreBundledItemCost>}
   * @memberof LolStoreBundledItem
   */
  discountPrices?: Array<LolStoreBundledItemCost>;
  /**
   *
   * @type {string}
   * @memberof LolStoreBundledItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreBundledItem
   */
  itemId?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreBundledItem
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface LolStoreBundledItemCost
 */
export interface LolStoreBundledItemCost {
  /**
   *
   * @type {number}
   * @memberof LolStoreBundledItemCost
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreBundledItemCost
   */
  costType?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreBundledItemCost
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreBundledItemCost
   */
  discount?: number;
}
/**
 *
 * @export
 * @interface LolStoreCapOffer
 */
export interface LolStoreCapOffer {
  /**
   *
   * @type {boolean}
   * @memberof LolStoreCapOffer
   */
  active?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOffer
   */
  createdDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOffer
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOffer
   */
  label?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOffer
   */
  merchantId?: string;
  /**
   *
   * @type {Array<LolStoreCapOfferPayloadEntry>}
   * @memberof LolStoreCapOffer
   */
  payload?: Array<LolStoreCapOfferPayloadEntry>;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOffer
   */
  productId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOffer
   */
  startDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOffer
   */
  typeId?: string;
}
/**
 *
 * @export
 * @interface LolStoreCapOfferPayloadEntry
 */
export interface LolStoreCapOfferPayloadEntry {
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOfferPayloadEntry
   */
  fulfillmentTypeId?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOfferPayloadEntry
   */
  inventoryTypeUUID?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCapOfferPayloadEntry
   */
  itemInstanceId?: string;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof LolStoreCapOfferPayloadEntry
   */
  itemPriceMap?: { [key: string]: number };
}
/**
 *
 * @export
 * @interface LolStoreCatalogInstanceToItemKeyMap
 */
export interface LolStoreCatalogInstanceToItemKeyMap {
  /**
   *
   * @type {{ [key: string]: LolStoreItemKey; }}
   * @memberof LolStoreCatalogInstanceToItemKeyMap
   */
  platformIds?: { [key: string]: LolStoreItemKey };
}
/**
 *
 * @export
 * @interface LolStoreCatalogItem
 */
export interface LolStoreCatalogItem {
  /**
   *
   * @type {boolean}
   * @memberof LolStoreCatalogItem
   */
  active?: boolean;
  /**
   *
   * @type {LolStoreBundled}
   * @memberof LolStoreCatalogItem
   */
  bundled?: LolStoreBundled;
  /**
   *
   * @type {string}
   * @memberof LolStoreCatalogItem
   */
  iconUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCatalogItem
   */
  inactiveDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreCatalogItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreCatalogItem
   */
  itemId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreCatalogItem
   */
  itemInstanceId?: string;
  /**
   *
   * @type {Array<LolStoreItemKey>}
   * @memberof LolStoreCatalogItem
   */
  itemRequirements?: Array<LolStoreItemKey>;
  /**
   *
   * @type {{ [key: string]: LolStoreItemLocalization; }}
   * @memberof LolStoreCatalogItem
   */
  localizations?: { [key: string]: LolStoreItemLocalization };
  /**
   *
   * @type {number}
   * @memberof LolStoreCatalogItem
   */
  maxQuantity?: number;
  /**
   *
   * @type {Array<LolStoreItemCost>}
   * @memberof LolStoreCatalogItem
   */
  prices?: Array<LolStoreItemCost>;
  /**
   *
   * @type {string}
   * @memberof LolStoreCatalogItem
   */
  releaseDate?: string;
  /**
   *
   * @type {LolStoreSale}
   * @memberof LolStoreCatalogItem
   */
  sale?: LolStoreSale;
  /**
   *
   * @type {string}
   * @memberof LolStoreCatalogItem
   */
  subInventoryType?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolStoreCatalogItem
   */
  tags?: Array<string>;
}
/**
 *
 * @export
 * @interface LolStoreFeaturedPageDTO
 */
export interface LolStoreFeaturedPageDTO {
  /**
   *
   * @type {LolStorePlayer}
   * @memberof LolStoreFeaturedPageDTO
   */
  Player?: LolStorePlayer;
}
/**
 *
 * @export
 * @interface LolStoreGetPlatformIdsFromInstanceIdsRequest
 */
export interface LolStoreGetPlatformIdsFromInstanceIdsRequest {
  /**
   *
   * @type {Array<string>}
   * @memberof LolStoreGetPlatformIdsFromInstanceIdsRequest
   */
  instanceIds?: Array<string>;
}
/**
 *
 * @export
 * @interface LolStoreGiftableResult
 */
export interface LolStoreGiftableResult {
  /**
   *
   * @type {LolStoreGiftingConfig}
   * @memberof LolStoreGiftableResult
   */
  config?: LolStoreGiftingConfig;
  /**
   *
   * @type {Array<LolStoreGiftingFriend>}
   * @memberof LolStoreGiftableResult
   */
  friends?: Array<LolStoreGiftingFriend>;
}
/**
 *
 * @export
 * @interface LolStoreGiftingConfig
 */
export interface LolStoreGiftingConfig {
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingHextecMaxDailyGiftsReceive?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingHextechMaxDailyGiftsSend?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingItemMaxDailyGiftsReceive?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingItemMaxDailyGiftsSend?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingItemMinLevelSend?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingRestrictionFlagRioter?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingRpMaxDailyGiftsReceive?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingRpMaxDailyGiftsSend?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  giftingRpMinLevelSend?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  recipientLevelLimitItem?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingConfig
   */
  recipientLevelLimitRp?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolStoreGiftingConfig
   */
  requiresIdentityVerification?: boolean;
}
/**
 *
 * @export
 * @interface LolStoreGiftingFriend
 */
export interface LolStoreGiftingFriend {
  /**
   *
   * @type {string}
   * @memberof LolStoreGiftingFriend
   */
  friendsSince?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreGiftingFriend
   */
  nick?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolStoreGiftingFriend
   */
  oldFriends?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolStoreGiftingFriend
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolStoreItemCost
 */
export interface LolStoreItemCost {
  /**
   *
   * @type {number}
   * @memberof LolStoreItemCost
   */
  cost?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreItemCost
   */
  currency?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreItemCost
   */
  discount?: number;
}
/**
 *
 * @export
 * @interface LolStoreItemKey
 */
export interface LolStoreItemKey {
  /**
   *
   * @type {string}
   * @memberof LolStoreItemKey
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreItemKey
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolStoreItemLocalization
 */
export interface LolStoreItemLocalization {
  /**
   *
   * @type {string}
   * @memberof LolStoreItemLocalization
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreItemLocalization
   */
  language?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreItemLocalization
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolStoreItemSale
 */
export interface LolStoreItemSale {
  /**
   *
   * @type {boolean}
   * @memberof LolStoreItemSale
   */
  active?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolStoreItemSale
   */
  id?: number;
  /**
   *
   * @type {LolStoreItemKey}
   * @memberof LolStoreItemSale
   */
  item?: LolStoreItemKey;
  /**
   *
   * @type {LolStoreSale}
   * @memberof LolStoreItemSale
   */
  sale?: LolStoreSale;
}
/**
 *
 * @export
 * @interface LolStoreLoginDataPacket
 */
export interface LolStoreLoginDataPacket {
  /**
   *
   * @type {LolStoreAllSummonerData}
   * @memberof LolStoreLoginDataPacket
   */
  allSummonerData?: LolStoreAllSummonerData;
  /**
   *
   * @type {Array<LolStoreSimpleDialogMessage>}
   * @memberof LolStoreLoginDataPacket
   */
  simpleMessages?: Array<LolStoreSimpleDialogMessage>;
}
/**
 *
 * @export
 * @interface LolStoreLoginSession
 */
export interface LolStoreLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolStoreLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof LolStoreLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof LolStoreLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {LolStoreLoginSessionStates}
   * @memberof LolStoreLoginSession
   */
  state?: LolStoreLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolStoreLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolStoreLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolStoreNotification
 */
export interface LolStoreNotification {
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  created?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolStoreNotification
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolStoreNotification
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  detailKey?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolStoreNotification
   */
  dismissible?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreNotification
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreNotification
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolStoreOrderNotificationResource
 */
export interface LolStoreOrderNotificationResource {
  /**
   *
   * @type {string}
   * @memberof LolStoreOrderNotificationResource
   */
  eventType?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreOrderNotificationResource
   */
  eventTypeId?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreOrderNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreOrderNotificationResource
   */
  status?: string;
}
/**
 *
 * @export
 * @interface LolStorePageDTO
 */
export interface LolStorePageDTO {
  /**
   *
   * @type {LolStorePlayer}
   * @memberof LolStorePageDTO
   */
  Player?: LolStorePlayer;
  /**
   *
   * @type {Array<LolStoreCatalogItem>}
   * @memberof LolStorePageDTO
   */
  catalog?: Array<LolStoreCatalogItem>;
  /**
   *
   * @type {Array<string>}
   * @memberof LolStorePageDTO
   */
  groupOrder?: Array<string>;
  /**
   *
   * @type {{ [key: string]: LolStorePageGroupingDTO; }}
   * @memberof LolStorePageDTO
   */
  itemGroups?: { [key: string]: LolStorePageGroupingDTO };
}
/**
 *
 * @export
 * @interface LolStorePageGroupingDTO
 */
export interface LolStorePageGroupingDTO {
  /**
   *
   * @type {boolean}
   * @memberof LolStorePageGroupingDTO
   */
  grouped?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolStorePageGroupingDTO
   */
  hidden?: boolean;
  /**
   *
   * @type {Array<LolStoreItemKey>}
   * @memberof LolStorePageGroupingDTO
   */
  items?: Array<LolStoreItemKey>;
}
/**
 *
 * @export
 * @interface LolStorePlayer
 */
export interface LolStorePlayer {
  /**
   *
   * @type {number}
   * @memberof LolStorePlayer
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolStorePlayer
   */
  ip?: number;
  /**
   *
   * @type {number}
   * @memberof LolStorePlayer
   */
  rp?: number;
  /**
   *
   * @type {number}
   * @memberof LolStorePlayer
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolStoreRiotMessagingServiceMessage
 */
export interface LolStoreRiotMessagingServiceMessage {
  /**
   *
   * @type {string}
   * @memberof LolStoreRiotMessagingServiceMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreRiotMessagingServiceMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof LolStoreRiotMessagingServiceMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof LolStoreRiotMessagingServiceMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreRiotMessagingServiceMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @interface LolStoreSale
 */
export interface LolStoreSale {
  /**
   *
   * @type {string}
   * @memberof LolStoreSale
   */
  endDate?: string;
  /**
   *
   * @type {Array<LolStoreItemCost>}
   * @memberof LolStoreSale
   */
  prices?: Array<LolStoreItemCost>;
  /**
   *
   * @type {string}
   * @memberof LolStoreSale
   */
  startDate?: string;
}
/**
 *
 * @export
 * @interface LolStoreServiceBalance
 */
export interface LolStoreServiceBalance {
  /**
   *
   * @type {number}
   * @memberof LolStoreServiceBalance
   */
  amount?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreServiceBalance
   */
  currency?: string;
}
/**
 *
 * @export
 * @interface LolStoreServiceWallet
 */
export interface LolStoreServiceWallet {
  /**
   *
   * @type {number}
   * @memberof LolStoreServiceWallet
   */
  accountId?: number;
  /**
   *
   * @type {Array<LolStoreServiceBalance>}
   * @memberof LolStoreServiceWallet
   */
  balances?: Array<LolStoreServiceBalance>;
}
/**
 *
 * @export
 * @interface LolStoreSimpleDialogMessage
 */
export interface LolStoreSimpleDialogMessage {
  /**
   *
   * @type {number}
   * @memberof LolStoreSimpleDialogMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolStoreSimpleDialogMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof LolStoreSimpleDialogMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof LolStoreSimpleDialogMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LolStoreStoreStatus
 */
export interface LolStoreStoreStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolStoreStoreStatus
   */
  storefrontIsRunning?: boolean;
}
/**
 *
 * @export
 * @interface LolStoreSummoner
 */
export interface LolStoreSummoner {
  /**
   *
   * @type {number}
   * @memberof LolStoreSummoner
   */
  acctId?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreSummoner
   */
  sumId?: number;
}
/**
 *
 * @export
 * @interface LolStoreSummonerLevelAndPoints
 */
export interface LolStoreSummonerLevelAndPoints {
  /**
   *
   * @type {number}
   * @memberof LolStoreSummonerLevelAndPoints
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolStoreWallet
 */
export interface LolStoreWallet {
  /**
   *
   * @type {number}
   * @memberof LolStoreWallet
   */
  ip?: number;
  /**
   *
   * @type {number}
   * @memberof LolStoreWallet
   */
  rp?: number;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersEndOfGamePlayer
 */
export interface LolSuggestedPlayersEndOfGamePlayer {
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersEndOfGamePlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSuggestedPlayersEndOfGamePlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersEndOfGameStats
 */
export interface LolSuggestedPlayersEndOfGameStats {
  /**
   *
   * @type {Array<LolSuggestedPlayersEndOfGameTeam>}
   * @memberof LolSuggestedPlayersEndOfGameStats
   */
  teams?: Array<LolSuggestedPlayersEndOfGameTeam>;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersEndOfGameTeam
 */
export interface LolSuggestedPlayersEndOfGameTeam {
  /**
   *
   * @type {boolean}
   * @memberof LolSuggestedPlayersEndOfGameTeam
   */
  isWinningTeam?: boolean;
  /**
   *
   * @type {Array<LolSuggestedPlayersEndOfGamePlayer>}
   * @memberof LolSuggestedPlayersEndOfGameTeam
   */
  players?: Array<LolSuggestedPlayersEndOfGamePlayer>;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersConfig
 */
export interface LolSuggestedPlayersSuggestedPlayersConfig {
  /**
   *
   * @type {boolean}
   * @memberof LolSuggestedPlayersSuggestedPlayersConfig
   */
  Enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolSuggestedPlayersSuggestedPlayersConfig
   */
  FriendsOfFriendsEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersConfig
   */
  FriendsOfFriendsLimit?: number;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersConfig
   */
  MaxNumReplacements?: number;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersConfig
   */
  MaxNumSuggestedPlayers?: number;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersConfig
   */
  OnlineFriendsLimit?: number;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersConfig
   */
  PreviousPremadesLimit?: number;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersConfig
   */
  VicoriousComradesLimit?: number;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersDynamicClientConfig
 */
export interface LolSuggestedPlayersSuggestedPlayersDynamicClientConfig {
  /**
   *
   * @type {LolSuggestedPlayersSuggestedPlayersConfig}
   * @memberof LolSuggestedPlayersSuggestedPlayersDynamicClientConfig
   */
  SuggestedPlayers?: LolSuggestedPlayersSuggestedPlayersConfig;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersFriend
 */
export interface LolSuggestedPlayersSuggestedPlayersFriend {
  /**
   *
   * @type {string}
   * @memberof LolSuggestedPlayersSuggestedPlayersFriend
   */
  availability?: string;
  /**
   *
   * @type {string}
   * @memberof LolSuggestedPlayersSuggestedPlayersFriend
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersFriend
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersKudoedPlayer
 */
export interface LolSuggestedPlayersSuggestedPlayersKudoedPlayer {
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersKudoedPlayer
   */
  kudoedSummonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSuggestedPlayersSuggestedPlayersKudoedPlayer
   */
  kudoedSummonerName?: string;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersLobbyStatus
 */
export interface LolSuggestedPlayersSuggestedPlayersLobbyStatus {
  /**
   *
   * @type {Array<number>}
   * @memberof LolSuggestedPlayersSuggestedPlayersLobbyStatus
   */
  invitedSummonerIds?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof LolSuggestedPlayersSuggestedPlayersLobbyStatus
   */
  memberSummonerIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersLobbyStatus
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersPlayerStatus
 */
export interface LolSuggestedPlayersSuggestedPlayersPlayerStatus {
  /**
   *
   * @type {LolSuggestedPlayersSuggestedPlayersLobbyStatus}
   * @memberof LolSuggestedPlayersSuggestedPlayersPlayerStatus
   */
  currentLobbyStatus?: LolSuggestedPlayersSuggestedPlayersLobbyStatus;
  /**
   *
   * @type {LolSuggestedPlayersSuggestedPlayersLobbyStatus}
   * @memberof LolSuggestedPlayersSuggestedPlayersPlayerStatus
   */
  lastQueuedLobbyStatus?: LolSuggestedPlayersSuggestedPlayersLobbyStatus;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersQueue
 */
export interface LolSuggestedPlayersSuggestedPlayersQueue {
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersQueue
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersQueue
   */
  minLevel?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolSuggestedPlayersSuggestedPlayersReason {
  PreviousPremade = 'PreviousPremade',
  OnlineFriend = 'OnlineFriend',
  FriendOfFriend = 'FriendOfFriend',
  VictoriousComrade = 'VictoriousComrade',
  LegacyPlayAgain = 'LegacyPlayAgain',
}

/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersReportedPlayer
 */
export interface LolSuggestedPlayersSuggestedPlayersReportedPlayer {
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersReportedPlayer
   */
  reportedSummonerId?: number;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersSuggestedPlayer
 */
export interface LolSuggestedPlayersSuggestedPlayersSuggestedPlayer {
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersSuggestedPlayer
   */
  commonFriendId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSuggestedPlayersSuggestedPlayersSuggestedPlayer
   */
  commonFriendName?: string;
  /**
   *
   * @type {LolSuggestedPlayersSuggestedPlayersReason}
   * @memberof LolSuggestedPlayersSuggestedPlayersSuggestedPlayer
   */
  reason?: LolSuggestedPlayersSuggestedPlayersReason;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersSuggestedPlayer
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSuggestedPlayersSuggestedPlayersSuggestedPlayer
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersSummoner
 */
export interface LolSuggestedPlayersSuggestedPlayersSummoner {
  /**
   *
   * @type {string}
   * @memberof LolSuggestedPlayersSuggestedPlayersSummoner
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersSummoner
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface LolSuggestedPlayersSuggestedPlayersVictoriousComrade
 */
export interface LolSuggestedPlayersSuggestedPlayersVictoriousComrade {
  /**
   *
   * @type {number}
   * @memberof LolSuggestedPlayersSuggestedPlayersVictoriousComrade
   */
  summonerId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSuggestedPlayersSuggestedPlayersVictoriousComrade
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolSummonerAutoFillQueueDto
 */
export interface LolSummonerAutoFillQueueDto {
  /**
   *
   * @type {boolean}
   * @memberof LolSummonerAutoFillQueueDto
   */
  autoFillEligible?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolSummonerAutoFillQueueDto
   */
  autoFillProtectedForPromos?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LolSummonerAutoFillQueueDto
   */
  autoFillProtectedForStreaking?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolSummonerAutoFillQueueDto
   */
  queueId?: number;
}
/**
 *
 * @export
 * @interface LolSummonerGameloopPlayerInfoV1
 */
export interface LolSummonerGameloopPlayerInfoV1 {
  /**
   *
   * @type {object}
   * @memberof LolSummonerGameloopPlayerInfoV1
   */
  autoFillDataBagByQueueId?: object;
  /**
   *
   * @type {LolSummonerRerollDataBagForClientV1}
   * @memberof LolSummonerGameloopPlayerInfoV1
   */
  rerollDataBag?: LolSummonerRerollDataBagForClientV1;
}
/**
 *
 * @export
 * @interface LolSummonerGameloopPlayerInfoV2
 */
export interface LolSummonerGameloopPlayerInfoV2 {
  /**
   *
   * @type {Array<LolSummonerAutoFillQueueDto>}
   * @memberof LolSummonerGameloopPlayerInfoV2
   */
  autoFillDataBags?: Array<LolSummonerAutoFillQueueDto>;
  /**
   *
   * @type {Array<LolSummonerRerollDataBagForClientV1>}
   * @memberof LolSummonerGameloopPlayerInfoV2
   */
  rerollDataBags?: Array<LolSummonerRerollDataBagForClientV1>;
}
/**
 *
 * @export
 * @interface LolSummonerInternalSummoner
 */
export interface LolSummonerInternalSummoner {
  /**
   *
   * @type {number}
   * @memberof LolSummonerInternalSummoner
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSummonerInternalSummoner
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolSummonerInternalSummoner
   */
  internalName?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolSummonerInternalSummoner
   */
  nameChangeFlag?: boolean;
  /**
   *
   * @type {number}
   * @memberof LolSummonerInternalSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerInternalSummoner
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolSummonerLevelField
 */
export interface LolSummonerLevelField {
  /**
   *
   * @type {number}
   * @memberof LolSummonerLevelField
   */
  finalLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerLevelField
   */
  initialLevel?: number;
  /**
   *
   * @type {LolSummonerLevelProgression}
   * @memberof LolSummonerLevelField
   */
  progress?: LolSummonerLevelProgression;
}
/**
 *
 * @export
 * @interface LolSummonerLevelProgression
 */
export interface LolSummonerLevelProgression {
  /**
   *
   * @type {number}
   * @memberof LolSummonerLevelProgression
   */
  finalLevelBoundary?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerLevelProgression
   */
  finalXp?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerLevelProgression
   */
  initialLevelBoundary?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerLevelProgression
   */
  initialXp?: number;
}
/**
 *
 * @export
 * @interface LolSummonerLoginSession
 */
export interface LolSummonerLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolSummonerLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {boolean}
   * @memberof LolSummonerLoginSession
   */
  connected?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolSummonerLoginSession
   */
  puuid?: string;
  /**
   *
   * @type {LolSummonerLoginSessionStates}
   * @memberof LolSummonerLoginSession
   */
  state?: LolSummonerLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof LolSummonerLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolSummonerLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface LolSummonerRerollDataBagForClientV1
 */
export interface LolSummonerRerollDataBagForClientV1 {
  /**
   *
   * @type {number}
   * @memberof LolSummonerRerollDataBagForClientV1
   */
  maximumRerolls?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerRerollDataBagForClientV1
   */
  pointCostOfReroll?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerRerollDataBagForClientV1
   */
  pointsUntilNextReroll?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerRerollDataBagForClientV1
   */
  queueId?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerRerollDataBagForClientV1
   */
  rerollCount?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerRerollDataBagForClientV1
   */
  totalPoints?: number;
}
/**
 *
 * @export
 * @interface LolSummonerStatus
 */
export interface LolSummonerStatus {
  /**
   *
   * @type {boolean}
   * @memberof LolSummonerStatus
   */
  ready?: boolean;
}
/**
 *
 * @export
 * @interface LolSummonerSummoner
 */
export interface LolSummonerSummoner {
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummoner
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummoner
   */
  displayName?: string;
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummoner
   */
  internalName?: string;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummoner
   */
  percentCompleteForNextLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummoner
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummoner
   */
  puuid?: string;
  /**
   *
   * @type {LolSummonerSummonerRerollPoints}
   * @memberof LolSummonerSummoner
   */
  rerollPoints?: LolSummonerSummonerRerollPoints;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummoner
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummoner
   */
  summonerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummoner
   */
  xpSinceLastLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummoner
   */
  xpUntilNextLevel?: number;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerCacheData
 */
export interface LolSummonerSummonerCacheData {
  /**
   *
   * @type {LolSummonerSummoner}
   * @memberof LolSummonerSummonerCacheData
   */
  summoner?: LolSummonerSummoner;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerCacheData
   */
  summonerIcon?: number;
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerCacheData
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerCreateRequest
 */
export interface LolSummonerSummonerCreateRequest {
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerCreateRequest
   */
  summonerName?: string;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerCreatedId
 */
export interface LolSummonerSummonerCreatedId {
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerCreatedId
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerDTO
 */
export interface LolSummonerSummonerDTO {
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerDTO
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerDTO
   */
  expPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerDTO
   */
  expToNextLevel?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerDTO
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerDTO
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerDTO
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof LolSummonerSummonerDTO
   */
  nameChangeFlag?: boolean;
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerDTO
   */
  partnerId?: string;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerDTO
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerDTO
   */
  puuid?: string;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerIcon
 */
export interface LolSummonerSummonerIcon {
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerIcon
   */
  inventoryToken?: string;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerIcon
   */
  profileIconId?: number;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerIdAndIcon
 */
export interface LolSummonerSummonerIdAndIcon {
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerIdAndIcon
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerIdAndIcon
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerIdAndName
 */
export interface LolSummonerSummonerIdAndName {
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerIdAndName
   */
  displayName?: string;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerIdAndName
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerProfileUpdate
 */
export interface LolSummonerSummonerProfileUpdate {
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerProfileUpdate
   */
  inventory?: string;
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerProfileUpdate
   */
  key?: string;
  /**
   *
   * @type {object}
   * @memberof LolSummonerSummonerProfileUpdate
   */
  value?: object;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerRequestedName
 */
export interface LolSummonerSummonerRequestedName {
  /**
   *
   * @type {string}
   * @memberof LolSummonerSummonerRequestedName
   */
  name?: string;
}
/**
 *
 * @export
 * @interface LolSummonerSummonerRerollPoints
 */
export interface LolSummonerSummonerRerollPoints {
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerRerollPoints
   */
  currentPoints?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerRerollPoints
   */
  maxRolls?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerRerollPoints
   */
  numberOfRolls?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerRerollPoints
   */
  pointsCostToRoll?: number;
  /**
   *
   * @type {number}
   * @memberof LolSummonerSummonerRerollPoints
   */
  pointsToReroll?: number;
}
/**
 *
 * @export
 * @interface LolSummonerXpAndLevelMessage
 */
export interface LolSummonerXpAndLevelMessage {
  /**
   *
   * @type {LolSummonerLevelField}
   * @memberof LolSummonerXpAndLevelMessage
   */
  level?: LolSummonerLevelField;
  /**
   *
   * @type {object}
   * @memberof LolSummonerXpAndLevelMessage
   */
  xp?: object;
}
/**
 *
 * @export
 * @interface LolTastesDataModelResponse
 */
export interface LolTastesDataModelResponse {
  /**
   *
   * @type {object}
   * @memberof LolTastesDataModelResponse
   */
  modelData?: object;
  /**
   *
   * @type {number}
   * @memberof LolTastesDataModelResponse
   */
  responseCode?: number;
}
/**
 *
 * @export
 * @interface LolTencentAntiaddictionAntiAddictionState
 */
export interface LolTencentAntiaddictionAntiAddictionState {
  /**
   *
   * @type {string}
   * @memberof LolTencentAntiaddictionAntiAddictionState
   */
  localizationKey?: string;
  /**
   *
   * @type {LolTencentAntiaddictionPolicyType}
   * @memberof LolTencentAntiaddictionAntiAddictionState
   */
  policyType?: LolTencentAntiaddictionPolicyType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolTencentAntiaddictionPolicyType {
  TencentWarning = 'tencentWarning',
  TencentShutdown = 'tencentShutdown',
}

/**
 *
 * @export
 * @interface LolTrophiesCapClashTrophyEntitlementPayload
 */
export interface LolTrophiesCapClashTrophyEntitlementPayload {
  /**
   *
   * @type {LolTrophiesClashV2TrophyRewardSpec}
   * @memberof LolTrophiesCapClashTrophyEntitlementPayload
   */
  rewardSpec?: LolTrophiesClashV2TrophyRewardSpec;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesCapClashTrophyEntitlementPayload
   */
  rewardType?: string;
}
/**
 *
 * @export
 * @interface LolTrophiesClashV2TrophyRewardSpec
 */
export interface LolTrophiesClashV2TrophyRewardSpec {
  /**
   *
   * @type {string}
   * @memberof LolTrophiesClashV2TrophyRewardSpec
   */
  bracket?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesClashV2TrophyRewardSpec
   */
  cup?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesClashV2TrophyRewardSpec
   */
  gem?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesClashV2TrophyRewardSpec
   */
  pedestal?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesClashV2TrophyRewardSpec
   */
  seasonId?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesClashV2TrophyRewardSpec
   */
  theme?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesClashV2TrophyRewardSpec
   */
  tier?: string;
}
/**
 *
 * @export
 * @interface LolTrophiesInventoryItemsByType
 */
export interface LolTrophiesInventoryItemsByType {
  /**
   *
   * @type {Array<LolTrophiesTournamentTrophyInventoryItem>}
   * @memberof LolTrophiesInventoryItemsByType
   */
  TOURNAMENT_TROPHY?: Array<LolTrophiesTournamentTrophyInventoryItem>;
}
/**
 *
 * @export
 * @interface LolTrophiesInventoryResponse
 */
export interface LolTrophiesInventoryResponse {
  /**
   *
   * @type {LolTrophiesInventoryItemsByType}
   * @memberof LolTrophiesInventoryResponse
   */
  items?: LolTrophiesInventoryItemsByType;
}
/**
 *
 * @export
 * @interface LolTrophiesLoadout
 */
export interface LolTrophiesLoadout {
  /**
   *
   * @type {string}
   * @memberof LolTrophiesLoadout
   */
  id?: string;
  /**
   *
   * @type {{ [key: string]: LolTrophiesLoadoutItem; }}
   * @memberof LolTrophiesLoadout
   */
  loadout?: { [key: string]: LolTrophiesLoadoutItem };
  /**
   *
   * @type {string}
   * @memberof LolTrophiesLoadout
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesLoadout
   */
  scope?: string;
}
/**
 *
 * @export
 * @interface LolTrophiesLoadoutItem
 */
export interface LolTrophiesLoadoutItem {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LolTrophiesLoadoutItem
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LolTrophiesLoadoutItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolTrophiesLoadoutItem
   */
  itemId?: number;
}
/**
 *
 * @export
 * @interface LolTrophiesOtherPlayerTrophyInventoryItem
 */
export interface LolTrophiesOtherPlayerTrophyInventoryItem {
  /**
   *
   * @type {string}
   * @memberof LolTrophiesOtherPlayerTrophyInventoryItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolTrophiesOtherPlayerTrophyInventoryItem
   */
  itemId?: number;
  /**
   *
   * @type {LolTrophiesCapClashTrophyEntitlementPayload}
   * @memberof LolTrophiesOtherPlayerTrophyInventoryItem
   */
  payload?: LolTrophiesCapClashTrophyEntitlementPayload;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesOtherPlayerTrophyInventoryItem
   */
  purchaseDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesOtherPlayerTrophyInventoryItem
   */
  uuid?: string;
}
/**
 *
 * @export
 * @interface LolTrophiesTournamentTrophyInventoryItem
 */
export interface LolTrophiesTournamentTrophyInventoryItem {
  /**
   *
   * @type {LolTrophiesCapClashTrophyEntitlementPayload}
   * @memberof LolTrophiesTournamentTrophyInventoryItem
   */
  payload?: LolTrophiesCapClashTrophyEntitlementPayload;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesTournamentTrophyInventoryItem
   */
  purchaseDate?: string;
}
/**
 *
 * @export
 * @interface LolTrophiesTrophyProfileData
 */
export interface LolTrophiesTrophyProfileData {
  /**
   *
   * @type {number}
   * @memberof LolTrophiesTrophyProfileData
   */
  bracket?: number;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesTrophyProfileData
   */
  cup?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesTrophyProfileData
   */
  gem?: string;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesTrophyProfileData
   */
  pedestal?: string;
  /**
   *
   * @type {number}
   * @memberof LolTrophiesTrophyProfileData
   */
  seasonId?: number;
  /**
   *
   * @type {string}
   * @memberof LolTrophiesTrophyProfileData
   */
  theme?: string;
  /**
   *
   * @type {number}
   * @memberof LolTrophiesTrophyProfileData
   */
  tier?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolUserExperienceGameflowPhase {
  None = 'None',
  Lobby = 'Lobby',
  Matchmaking = 'Matchmaking',
  CheckedIntoTournament = 'CheckedIntoTournament',
  ReadyCheck = 'ReadyCheck',
  ChampSelect = 'ChampSelect',
  GameStart = 'GameStart',
  FailedToLaunch = 'FailedToLaunch',
  InProgress = 'InProgress',
  Reconnect = 'Reconnect',
  WaitingForStats = 'WaitingForStats',
  PreEndOfGame = 'PreEndOfGame',
  EndOfGame = 'EndOfGame',
  TerminatedInError = 'TerminatedInError',
}

/**
 *
 * @export
 * @interface LolUserExperienceGameflowSession
 */
export interface LolUserExperienceGameflowSession {
  /**
   *
   * @type {LolUserExperienceGameflowPhase}
   * @memberof LolUserExperienceGameflowSession
   */
  phase?: LolUserExperienceGameflowPhase;
}
/**
 *
 * @export
 * @interface LolWorldsTokenCardCollectionsSummonerIcons
 */
export interface LolWorldsTokenCardCollectionsSummonerIcons {
  /**
   *
   * @type {Array<number>}
   * @memberof LolWorldsTokenCardCollectionsSummonerIcons
   */
  icons?: Array<number>;
}
/**
 *
 * @export
 * @interface LolWorldsTokenCardInventoryItem
 */
export interface LolWorldsTokenCardInventoryItem {
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardInventoryItem
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof LolWorldsTokenCardInventoryItem
   */
  itemId?: number;
  /**
   *
   * @type {LolWorldsTokenCardItemOwnershipType}
   * @memberof LolWorldsTokenCardInventoryItem
   */
  ownershipType?: LolWorldsTokenCardItemOwnershipType;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardInventoryItem
   */
  purchaseDate?: string;
  /**
   *
   * @type {number}
   * @memberof LolWorldsTokenCardInventoryItem
   */
  quantity?: number;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardInventoryItem
   */
  uuid?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolWorldsTokenCardItemOwnershipType {
  OWNED = 'OWNED',
  RENTED = 'RENTED',
  LOYALTY = 'LOYALTY',
  F2P = 'F2P',
}

/**
 *
 * @export
 * @interface LolWorldsTokenCardLoginSession
 */
export interface LolWorldsTokenCardLoginSession {
  /**
   *
   * @type {number}
   * @memberof LolWorldsTokenCardLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof LolWorldsTokenCardLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface LolWorldsTokenCardLootDataGdsResource
 */
export interface LolWorldsTokenCardLootDataGdsResource {
  /**
   *
   * @type {Array<LolWorldsTokenCardLootTokenBankCardGdsResource>}
   * @memberof LolWorldsTokenCardLootDataGdsResource
   */
  LootTokenBankCards?: Array<LolWorldsTokenCardLootTokenBankCardGdsResource>;
}
/**
 *
 * @export
 * @interface LolWorldsTokenCardLootTokenBankCardGdsResource
 */
export interface LolWorldsTokenCardLootTokenBankCardGdsResource {
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  activationDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  backsplashImagePath?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  buttonText?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  deactivationDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  lootItemName?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  nonPremiumCapCurrencyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  premiumCapCurrencyId?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  storeLinkItem?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  storeLinkType?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  titleText?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  tokenIconPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  tooltipDescriptionText?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  tooltipSplashPath?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  tooltipTitleText?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  unlockItemId?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardLootTokenBankCardGdsResource
   */
  unlockItemType?: string;
}
/**
 *
 * @export
 * @interface LolWorldsTokenCardTokenUpsell
 */
export interface LolWorldsTokenCardTokenUpsell {
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  buttonText?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  currencyUrl?: string;
  /**
   *
   * @type {LolWorldsTokenCardTokenUpsellLockedType}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  currentlyLocked?: LolWorldsTokenCardTokenUpsellLockedType;
  /**
   *
   * @type {number}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  dependentInventoryId?: number;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  dependentInventoryType?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  endDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  internalName?: string;
  /**
   *
   * @type {number}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  lockedCount?: number;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  premiumCurrencyName?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  purchaseUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  startDate?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  tooltipBackgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  tooltipDescription?: string;
  /**
   *
   * @type {string}
   * @memberof LolWorldsTokenCardTokenUpsell
   */
  tooltipTitle?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum LolWorldsTokenCardTokenUpsellLockedType {
  UNASSIGNED = 'UNASSIGNED',
  UNLOCKED = 'UNLOCKED',
  LOCKED = 'LOCKED',
}

/**
 *
 * @export
 * @interface LootItemClientDTO
 */
export interface LootItemClientDTO {
  /**
   *
   * @type {string}
   * @memberof LootItemClientDTO
   */
  asset?: string;
  /**
   *
   * @type {string}
   * @memberof LootItemClientDTO
   */
  displayCategories?: string;
  /**
   *
   * @type {number}
   * @memberof LootItemClientDTO
   */
  expiryTime?: number;
  /**
   *
   * @type {string}
   * @memberof LootItemClientDTO
   */
  lootName?: string;
  /**
   *
   * @type {string}
   * @memberof LootItemClientDTO
   */
  rarity?: string;
  /**
   *
   * @type {number}
   * @memberof LootItemClientDTO
   */
  rentalGames?: number;
  /**
   *
   * @type {number}
   * @memberof LootItemClientDTO
   */
  rentalSeconds?: number;
  /**
   *
   * @type {number}
   * @memberof LootItemClientDTO
   */
  storeItemId?: number;
  /**
   *
   * @type {string}
   * @memberof LootItemClientDTO
   */
  tags?: string;
  /**
   *
   * @type {string}
   * @memberof LootItemClientDTO
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof LootItemClientDTO
   */
  upgradeLootName?: string;
  /**
   *
   * @type {number}
   * @memberof LootItemClientDTO
   */
  value?: number;
}
/**
 *
 * @export
 * @interface LootItemListClientDTO
 */
export interface LootItemListClientDTO {
  /**
   *
   * @type {number}
   * @memberof LootItemListClientDTO
   */
  lastUpdate?: number;
  /**
   *
   * @type {Array<LootItemClientDTO>}
   * @memberof LootItemListClientDTO
   */
  lootItems?: Array<LootItemClientDTO>;
}
/**
 *
 * @export
 * @interface LootLcdsClientConfigurationDTO
 */
export interface LootLcdsClientConfigurationDTO {
  /**
   *
   * @type {Array<string>}
   * @memberof LootLcdsClientConfigurationDTO
   */
  currenciesUsingCapWallets?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LootLcdsClientConfigurationDTO
   */
  lootItemsUsingBreakoutRecipeMenu?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof LootLcdsClientConfigurationDTO
   */
  lootMaterialsToAlwaysRender?: Array<string>;
}
/**
 *
 * @export
 * @interface LootLcdsLootDescriptionDTO
 */
export interface LootLcdsLootDescriptionDTO {
  /**
   *
   * @type {Array<string>}
   * @memberof LootLcdsLootDescriptionDTO
   */
  childLootTableNames?: Array<string>;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LootLcdsLootDescriptionDTO
   */
  localizationLongDescriptionMap?: { [key: string]: string };
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof LootLcdsLootDescriptionDTO
   */
  localizationMap?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof LootLcdsLootDescriptionDTO
   */
  lootName?: string;
}
/**
 *
 * @export
 * @interface LootLcdsRecipeClientDTO
 */
export interface LootLcdsRecipeClientDTO {
  /**
   *
   * @type {string}
   * @memberof LootLcdsRecipeClientDTO
   */
  crafterName?: string;
  /**
   *
   * @type {string}
   * @memberof LootLcdsRecipeClientDTO
   */
  displayCategories?: string;
  /**
   *
   * @type {LootLcdsRecipeMetadata}
   * @memberof LootLcdsRecipeClientDTO
   */
  metadata?: LootLcdsRecipeMetadata;
  /**
   *
   * @type {Array<LootLcdsRecipeOutputDTO>}
   * @memberof LootLcdsRecipeClientDTO
   */
  outputs?: Array<LootLcdsRecipeOutputDTO>;
  /**
   *
   * @type {string}
   * @memberof LootLcdsRecipeClientDTO
   */
  recipeName?: string;
  /**
   *
   * @type {Array<LootLcdsRecipeSlotClientDTO>}
   * @memberof LootLcdsRecipeClientDTO
   */
  slots?: Array<LootLcdsRecipeSlotClientDTO>;
  /**
   *
   * @type {string}
   * @memberof LootLcdsRecipeClientDTO
   */
  type?: string;
}
/**
 *
 * @export
 * @interface LootLcdsRecipeListClientDTO
 */
export interface LootLcdsRecipeListClientDTO {
  /**
   *
   * @type {number}
   * @memberof LootLcdsRecipeListClientDTO
   */
  lastUpdate?: number;
  /**
   *
   * @type {Array<LootLcdsRecipeClientDTO>}
   * @memberof LootLcdsRecipeListClientDTO
   */
  recipes?: Array<LootLcdsRecipeClientDTO>;
}
/**
 *
 * @export
 * @interface LootLcdsRecipeMetadata
 */
export interface LootLcdsRecipeMetadata {
  /**
   *
   * @type {Array<LootLcdsLootDescriptionDTO>}
   * @memberof LootLcdsRecipeMetadata
   */
  bonusDescriptions?: Array<LootLcdsLootDescriptionDTO>;
  /**
   *
   * @type {Array<LootLcdsLootDescriptionDTO>}
   * @memberof LootLcdsRecipeMetadata
   */
  guaranteedDescriptions?: Array<LootLcdsLootDescriptionDTO>;
  /**
   *
   * @type {boolean}
   * @memberof LootLcdsRecipeMetadata
   */
  tooltipsDisabled?: boolean;
}
/**
 *
 * @export
 * @interface LootLcdsRecipeOutputDTO
 */
export interface LootLcdsRecipeOutputDTO {
  /**
   *
   * @type {boolean}
   * @memberof LootLcdsRecipeOutputDTO
   */
  allowDuplicates?: boolean;
  /**
   *
   * @type {string}
   * @memberof LootLcdsRecipeOutputDTO
   */
  lootName?: string;
  /**
   *
   * @type {number}
   * @memberof LootLcdsRecipeOutputDTO
   */
  probability?: number;
  /**
   *
   * @type {string}
   * @memberof LootLcdsRecipeOutputDTO
   */
  quantityExpression?: string;
}
/**
 *
 * @export
 * @interface LootLcdsRecipeSlotClientDTO
 */
export interface LootLcdsRecipeSlotClientDTO {
  /**
   *
   * @type {string}
   * @memberof LootLcdsRecipeSlotClientDTO
   */
  quantityExpression?: string;
  /**
   *
   * @type {string}
   * @memberof LootLcdsRecipeSlotClientDTO
   */
  query?: string;
  /**
   *
   * @type {number}
   * @memberof LootLcdsRecipeSlotClientDTO
   */
  slotNumber?: number;
}
/**
 *
 * @export
 * @interface LootNameRefId
 */
export interface LootNameRefId {
  /**
   *
   * @type {string}
   * @memberof LootNameRefId
   */
  lootName?: string;
  /**
   *
   * @type {string}
   * @memberof LootNameRefId
   */
  refId?: string;
}
/**
 *
 * @export
 * @interface LootSimpleDialogMessageResponse
 */
export interface LootSimpleDialogMessageResponse {
  /**
   *
   * @type {number}
   * @memberof LootSimpleDialogMessageResponse
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof LootSimpleDialogMessageResponse
   */
  command?: string;
  /**
   *
   * @type {string}
   * @memberof LootSimpleDialogMessageResponse
   */
  msgId?: string;
}
/**
 *
 * @export
 * @interface MatchedPlayerDTO
 */
export interface MatchedPlayerDTO {
  /**
   *
   * @type {PlayerInfoDTO}
   * @memberof MatchedPlayerDTO
   */
  captain?: PlayerInfoDTO;
  /**
   *
   * @type {Array<PlayerInfoDTO>}
   * @memberof MatchedPlayerDTO
   */
  players?: Array<PlayerInfoDTO>;
  /**
   *
   * @type {string}
   * @memberof MatchedPlayerDTO
   */
  rosterId?: string;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsBustedLeaver
 */
export interface MatchmakingLcdsBustedLeaver {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsBustedLeaver
   */
  accessToken?: string;
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsBustedLeaver
   */
  leaverPenaltyMillisRemaining?: number;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsBustedLeaver
   */
  reasonFailed?: string;
  /**
   *
   * @type {MatchmakingLcdsSummoner}
   * @memberof MatchmakingLcdsBustedLeaver
   */
  summoner?: MatchmakingLcdsSummoner;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsFailedJoinPlayer
 */
export interface MatchmakingLcdsFailedJoinPlayer {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsFailedJoinPlayer
   */
  reasonFailed?: string;
  /**
   *
   * @type {MatchmakingLcdsSummoner}
   * @memberof MatchmakingLcdsFailedJoinPlayer
   */
  summoner?: MatchmakingLcdsSummoner;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsGameDTO
 */
export interface MatchmakingLcdsGameDTO {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsGameDTO
   */
  gameState?: string;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsGameDTO
   */
  statusOfParticipants?: string;
  /**
   *
   * @type {Array<MatchmakingLcdsPlayerParticipant>}
   * @memberof MatchmakingLcdsGameDTO
   */
  teamOne?: Array<MatchmakingLcdsPlayerParticipant>;
  /**
   *
   * @type {Array<MatchmakingLcdsPlayerParticipant>}
   * @memberof MatchmakingLcdsGameDTO
   */
  teamTwo?: Array<MatchmakingLcdsPlayerParticipant>;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsGameDTO
   */
  terminatedCondition?: string;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsGameNotification
 */
export interface MatchmakingLcdsGameNotification {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsGameNotification
   */
  messageArgument?: string;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsGameNotification
   */
  messageCode?: string;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsGameNotification
   */
  type?: string;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsMatchMakerParams
 */
export interface MatchmakingLcdsMatchMakerParams {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsMatchMakerParams
   */
  botDifficulty?: string;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsMatchMakerParams
   */
  invitationId?: string;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsMatchMakerParams
   */
  languages?: string;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsMatchMakerParams
   */
  lastMaestroMessage?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof MatchmakingLcdsMatchMakerParams
   */
  queueIds?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof MatchmakingLcdsMatchMakerParams
   */
  team?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsMatchMakerParams
   */
  teamId?: number;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsMatchMakerPayload
 */
export interface MatchmakingLcdsMatchMakerPayload {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsMatchMakerPayload
   */
  LEAVER_BUSTER_ACCESS_TOKEN?: string;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsPlayerParticipant
 */
export interface MatchmakingLcdsPlayerParticipant {
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsPlayerParticipant
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsQueueDisabled
 */
export interface MatchmakingLcdsQueueDisabled {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsQueueDisabled
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsQueueDisabled
   */
  queueId?: number;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsQueueDisabled
   */
  reasonFailed?: string;
  /**
   *
   * @type {MatchmakingLcdsSummoner}
   * @memberof MatchmakingLcdsQueueDisabled
   */
  summoner?: MatchmakingLcdsSummoner;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsQueueDodger
 */
export interface MatchmakingLcdsQueueDodger {
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsQueueDodger
   */
  dodgePenaltyRemainingTime?: number;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsQueueDodger
   */
  reasonFailed?: string;
  /**
   *
   * @type {MatchmakingLcdsSummoner}
   * @memberof MatchmakingLcdsQueueDodger
   */
  summoner?: MatchmakingLcdsSummoner;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsQueueInfo
 */
export interface MatchmakingLcdsQueueInfo {
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsQueueInfo
   */
  queueId?: number;
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsQueueInfo
   */
  waitTime?: number;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsQueueRestricted
 */
export interface MatchmakingLcdsQueueRestricted {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsQueueRestricted
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsQueueRestricted
   */
  queueId?: number;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsQueueRestricted
   */
  reasonFailed?: string;
  /**
   *
   * @type {MatchmakingLcdsSummoner}
   * @memberof MatchmakingLcdsQueueRestricted
   */
  summoner?: MatchmakingLcdsSummoner;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsQueueThrottled
 */
export interface MatchmakingLcdsQueueThrottled {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsQueueThrottled
   */
  message?: string;
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsQueueThrottled
   */
  queueId?: number;
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsQueueThrottled
   */
  reasonFailed?: string;
  /**
   *
   * @type {MatchmakingLcdsSummoner}
   * @memberof MatchmakingLcdsQueueThrottled
   */
  summoner?: MatchmakingLcdsSummoner;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsSearchingForMatchNotification
 */
export interface MatchmakingLcdsSearchingForMatchNotification {
  /**
   *
   * @type {Array<MatchmakingLcdsQueueInfo>}
   * @memberof MatchmakingLcdsSearchingForMatchNotification
   */
  joinedQueues?: Array<MatchmakingLcdsQueueInfo>;
  /**
   *
   * @type {Array<object>}
   * @memberof MatchmakingLcdsSearchingForMatchNotification
   */
  playerJoinFailures?: Array<object>;
}
/**
 *
 * @export
 * @interface MatchmakingLcdsSummoner
 */
export interface MatchmakingLcdsSummoner {
  /**
   *
   * @type {string}
   * @memberof MatchmakingLcdsSummoner
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof MatchmakingLcdsSummoner
   */
  sumId?: number;
}
/**
 *
 * @export
 * @interface MemberBanUnbanTournament
 */
export interface MemberBanUnbanTournament {
  /**
   *
   * @type {number}
   * @memberof MemberBanUnbanTournament
   */
  tournamentId?: number;
  /**
   *
   * @type {number}
   * @memberof MemberBanUnbanTournament
   */
  tournamentPhaseLockInTime?: number;
  /**
   *
   * @type {string}
   * @memberof MemberBanUnbanTournament
   */
  tournamentnameLocKey?: string;
  /**
   *
   * @type {string}
   * @memberof MemberBanUnbanTournament
   */
  tournamentnameLocKeySecondary?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum MetricDataType {
  Unknown = 'unknown',
  Int = 'int',
  Uint = 'uint',
  Float = 'float',
  Bool = 'bool',
  String = 'string',
}

/**
 *
 * @export
 * @interface MetricMetadata
 */
export interface MetricMetadata {
  /**
   *
   * @type {Array<MetricMetadataAlert>}
   * @memberof MetricMetadata
   */
  alerts?: Array<MetricMetadataAlert>;
  /**
   *
   * @type {string}
   * @memberof MetricMetadata
   */
  category?: string;
  /**
   *
   * @type {MetricDataType}
   * @memberof MetricMetadata
   */
  data_type?: MetricDataType;
  /**
   *
   * @type {string}
   * @memberof MetricMetadata
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof MetricMetadata
   */
  destination?: string;
  /**
   *
   * @type {string}
   * @memberof MetricMetadata
   */
  info?: string;
  /**
   *
   * @type {MetricMetadataNotify}
   * @memberof MetricMetadata
   */
  notify?: MetricMetadataNotify;
  /**
   *
   * @type {number}
   * @memberof MetricMetadata
   */
  period?: number;
  /**
   *
   * @type {string}
   * @memberof MetricMetadata
   */
  pretty_name?: string;
  /**
   *
   * @type {MetricPriority}
   * @memberof MetricMetadata
   */
  priority?: MetricPriority;
  /**
   *
   * @type {number}
   * @memberof MetricMetadata
   */
  sample_window_ms?: number;
  /**
   *
   * @type {AggregationType}
   * @memberof MetricMetadata
   */
  transientAggregation?: AggregationType;
  /**
   *
   * @type {MetricType}
   * @memberof MetricMetadata
   */
  type?: MetricType;
  /**
   *
   * @type {string}
   * @memberof MetricMetadata
   */
  units?: string;
}
/**
 *
 * @export
 * @interface MetricMetadataAlert
 */
export interface MetricMetadataAlert {
  /**
   *
   * @type {string}
   * @memberof MetricMetadataAlert
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof MetricMetadataAlert
   */
  info?: string;
  /**
   *
   * @type {string}
   * @memberof MetricMetadataAlert
   */
  level?: string;
  /**
   *
   * @type {number}
   * @memberof MetricMetadataAlert
   */
  max?: number;
  /**
   *
   * @type {number}
   * @memberof MetricMetadataAlert
   */
  min?: number;
  /**
   *
   * @type {MetricMetadataNotify}
   * @memberof MetricMetadataAlert
   */
  notify?: MetricMetadataNotify;
  /**
   *
   * @type {string}
   * @memberof MetricMetadataAlert
   */
  pretty_name?: string;
}
/**
 *
 * @export
 * @interface MetricMetadataHipchatNotification
 */
export interface MetricMetadataHipchatNotification {
  /**
   *
   * @type {string}
   * @memberof MetricMetadataHipchatNotification
   */
  roomid?: string;
  /**
   *
   * @type {string}
   * @memberof MetricMetadataHipchatNotification
   */
  tags?: string;
}
/**
 *
 * @export
 * @interface MetricMetadataNotify
 */
export interface MetricMetadataNotify {
  /**
   *
   * @type {Array<string>}
   * @memberof MetricMetadataNotify
   */
  email?: Array<string>;
  /**
   *
   * @type {Array<MetricMetadataHipchatNotification>}
   * @memberof MetricMetadataNotify
   */
  hipchat?: Array<MetricMetadataHipchatNotification>;
  /**
   *
   * @type {Array<MetricMetadataPagerDutyNotification>}
   * @memberof MetricMetadataNotify
   */
  pagerduty?: Array<MetricMetadataPagerDutyNotification>;
}
/**
 *
 * @export
 * @interface MetricMetadataPagerDutyNotification
 */
export interface MetricMetadataPagerDutyNotification {
  /**
   *
   * @type {string}
   * @memberof MetricMetadataPagerDutyNotification
   */
  apikey?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum MetricPriority {
  Low = 'low',
  Medium = 'medium',
  High = 'high',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum MetricType {
  Unknown = 'unknown',
  Percentage = 'percentage',
  Count = 'count',
  Duration = 'duration',
  Rate = 'rate',
}

/**
 *
 * @export
 * @interface MissionAlertDTO
 */
export interface MissionAlertDTO {
  /**
   *
   * @type {number}
   * @memberof MissionAlertDTO
   */
  alertTime?: number;
  /**
   *
   * @type {string}
   * @memberof MissionAlertDTO
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof MissionAlertDTO
   */
  type?: string;
}
/**
 *
 * @export
 * @interface MissionDisplay
 */
export interface MissionDisplay {
  /**
   *
   * @type {Array<string>}
   * @memberof MissionDisplay
   */
  attributes?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof MissionDisplay
   */
  locations?: Array<string>;
}
/**
 *
 * @export
 * @interface MissionMetadata
 */
export interface MissionMetadata {
  /**
   *
   * @type {NpeRewardPackMetadata}
   * @memberof MissionMetadata
   */
  npeRewardPack?: NpeRewardPackMetadata;
  /**
   *
   * @type {TutorialMetadata}
   * @memberof MissionMetadata
   */
  tutorial?: TutorialMetadata;
}
/**
 *
 * @export
 * @interface MissionProgressDTO
 */
export interface MissionProgressDTO {
  /**
   *
   * @type {number}
   * @memberof MissionProgressDTO
   */
  currentProgress?: number;
  /**
   *
   * @type {number}
   * @memberof MissionProgressDTO
   */
  lastViewedProgress?: number;
  /**
   *
   * @type {number}
   * @memberof MissionProgressDTO
   */
  totalCount?: number;
}
/**
 *
 * @export
 * @interface MissionRequirementDTO
 */
export interface MissionRequirementDTO {
  /**
   *
   * @type {string}
   * @memberof MissionRequirementDTO
   */
  expression?: string;
}
/**
 *
 * @export
 * @interface MissionsCompressedPayloadDTO
 */
export interface MissionsCompressedPayloadDTO {
  /**
   *
   * @type {string}
   * @memberof MissionsCompressedPayloadDTO
   */
  missionsCompressed?: string;
}
/**
 *
 * @export
 * @interface MultiLeagueEntryChangeEventDTO
 */
export interface MultiLeagueEntryChangeEventDTO {
  /**
   *
   * @type {number}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  gameId?: number;
  /**
   *
   * @type {LeagueEntryChangeEventDTOV2}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  mainChangeEventDTO?: LeagueEntryChangeEventDTOV2;
  /**
   *
   * @type {string}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  participantId?: string;
  /**
   *
   * @type {number}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  previousSplitPointsRequired?: number;
  /**
   *
   * @type {number}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  provisionalGameThreshold?: number;
  /**
   *
   * @type {string}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  shardId?: string;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  splitPointBreakdown?: { [key: string]: number };
  /**
   *
   * @type {number}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  splitPointsBeforeGame?: number;
  /**
   *
   * @type {number}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  splitPointsGained?: number;
  /**
   *
   * @type {number}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  splitPointsRequired?: number;
  /**
   *
   * @type {Array<SplitRewardGrantDTO>}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  splitRewardGrants?: Array<SplitRewardGrantDTO>;
  /**
   *
   * @type {number}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  upcomingSplitPointsRequired?: number;
  /**
   *
   * @type {Array<SplitRewardGrantDTO>}
   * @memberof MultiLeagueEntryChangeEventDTO
   */
  upcomingSplitRewards?: Array<SplitRewardGrantDTO>;
}
/**
 *
 * @export
 * @interface MultipleReplayMetadataRequestV2
 */
export interface MultipleReplayMetadataRequestV2 {
  /**
   *
   * @type {Array<number>}
   * @memberof MultipleReplayMetadataRequestV2
   */
  gameIds?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof MultipleReplayMetadataRequestV2
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface MultipleReplayMetadataResponseItemV2
 */
export interface MultipleReplayMetadataResponseItemV2 {
  /**
   *
   * @type {number}
   * @memberof MultipleReplayMetadataResponseItemV2
   */
  gameId?: number;
  /**
   *
   * @type {ReplayMetadataV2}
   * @memberof MultipleReplayMetadataResponseItemV2
   */
  metadata?: ReplayMetadataV2;
  /**
   *
   * @type {ReplayResponseStatus}
   * @memberof MultipleReplayMetadataResponseItemV2
   */
  status?: ReplayResponseStatus;
}
/**
 *
 * @export
 * @interface MultipleReplayMetadataResponseV2
 */
export interface MultipleReplayMetadataResponseV2 {
  /**
   *
   * @type {Array<MultipleReplayMetadataResponseItemV2>}
   * @memberof MultipleReplayMetadataResponseV2
   */
  metadataResponses?: Array<MultipleReplayMetadataResponseItemV2>;
}
/**
 *
 * @export
 * @interface NpeReward
 */
export interface NpeReward {
  /**
   *
   * @type {object}
   * @memberof NpeReward
   */
  data?: object;
  /**
   *
   * @type {string}
   * @memberof NpeReward
   */
  renderer?: string;
}
/**
 *
 * @export
 * @interface NpeRewardPackMetadata
 */
export interface NpeRewardPackMetadata {
  /**
   *
   * @type {number}
   * @memberof NpeRewardPackMetadata
   */
  index?: number;
  /**
   *
   * @type {NpeReward}
   * @memberof NpeRewardPackMetadata
   */
  majorReward?: NpeReward;
  /**
   *
   * @type {Array<NpeReward>}
   * @memberof NpeRewardPackMetadata
   */
  minorRewards?: Array<NpeReward>;
  /**
   *
   * @type {boolean}
   * @memberof NpeRewardPackMetadata
   */
  premiumReward?: boolean;
  /**
   *
   * @type {string}
   * @memberof NpeRewardPackMetadata
   */
  rewardKey?: string;
}
/**
 *
 * @export
 * @interface PartiesVoiceDTO
 */
export interface PartiesVoiceDTO {
  /**
   *
   * @type {string}
   * @memberof PartiesVoiceDTO
   */
  jwt?: string;
}
/**
 *
 * @export
 * @interface PatcherChunkingPatcherEnvironment
 */
export interface PatcherChunkingPatcherEnvironment {
  /**
   *
   * @type {boolean}
   * @memberof PatcherChunkingPatcherEnvironment
   */
  client_patcher_available?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherChunkingPatcherEnvironment
   */
  client_patcher_enabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherChunkingPatcherEnvironment
   */
  game_patcher_available?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherChunkingPatcherEnvironment
   */
  game_patcher_enabled?: boolean;
}
/**
 *
 * @export
 * @interface PatcherComponentActionProgress
 */
export interface PatcherComponentActionProgress {
  /**
   *
   * @type {string}
   * @memberof PatcherComponentActionProgress
   */
  currentItem?: string;
  /**
   *
   * @type {PatcherComponentStateProgress}
   * @memberof PatcherComponentActionProgress
   */
  network?: PatcherComponentStateProgress;
  /**
   *
   * @type {PatcherComponentStateWorkType}
   * @memberof PatcherComponentActionProgress
   */
  primaryWork?: PatcherComponentStateWorkType;
  /**
   *
   * @type {PatcherComponentStateProgress}
   * @memberof PatcherComponentActionProgress
   */
  total?: PatcherComponentStateProgress;
}
/**
 *
 * @export
 * @interface PatcherComponentState
 */
export interface PatcherComponentState {
  /**
   *
   * @type {PatcherComponentStateAction}
   * @memberof PatcherComponentState
   */
  action?: PatcherComponentStateAction;
  /**
   *
   * @type {string}
   * @memberof PatcherComponentState
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof PatcherComponentState
   */
  isCorrupted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherComponentState
   */
  isUpToDate?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherComponentState
   */
  isUpdateAvailable?: boolean;
  /**
   *
   * @type {PatcherComponentActionProgress}
   * @memberof PatcherComponentState
   */
  progress?: PatcherComponentActionProgress;
  /**
   *
   * @type {string}
   * @memberof PatcherComponentState
   */
  timeOfLastUpToDateCheckISO8601?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PatcherComponentStateAction {
  Idle = 'Idle',
  CheckingForUpdates = 'CheckingForUpdates',
  Patching = 'Patching',
  Repairing = 'Repairing',
  Migrating = 'Migrating',
}

/**
 *
 * @export
 * @interface PatcherComponentStateProgress
 */
export interface PatcherComponentStateProgress {
  /**
   *
   * @type {number}
   * @memberof PatcherComponentStateProgress
   */
  bytesComplete?: number;
  /**
   *
   * @type {number}
   * @memberof PatcherComponentStateProgress
   */
  bytesPerSecond?: number;
  /**
   *
   * @type {number}
   * @memberof PatcherComponentStateProgress
   */
  bytesRequired?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PatcherComponentStateWorkType {
  Scanning = 'Scanning',
  Network = 'Network',
  Disk = 'Disk',
}

/**
 *
 * @export
 * @interface PatcherNotification
 */
export interface PatcherNotification {
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof PatcherNotification
   */
  data?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof PatcherNotification
   */
  id?: string;
  /**
   *
   * @type {PatcherNotificationId}
   * @memberof PatcherNotification
   */
  notificationId?: PatcherNotificationId;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PatcherNotificationId {
  UnspecifiedError = 'UnspecifiedError',
  ConnectionError = 'ConnectionError',
  MissingFilesError = 'MissingFilesError',
  FailedToWriteError = 'FailedToWriteError',
  WillRestoreClientBackupOnRestart = 'WillRestoreClientBackupOnRestart',
  DidRestoreClientBackup = 'DidRestoreClientBackup',
  NotEnoughDiskSpace = 'NotEnoughDiskSpace',
  BrokenPermissions = 'BrokenPermissions',
}

/**
 *
 * @export
 * @interface PatcherP2PStatus
 */
export interface PatcherP2PStatus {
  /**
   *
   * @type {boolean}
   * @memberof PatcherP2PStatus
   */
  isAllowedByUser?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherP2PStatus
   */
  isEnabledForPatchline?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherP2PStatus
   */
  requiresRestart?: boolean;
}
/**
 *
 * @export
 * @interface PatcherP2PStatusUpdate
 */
export interface PatcherP2PStatusUpdate {
  /**
   *
   * @type {boolean}
   * @memberof PatcherP2PStatusUpdate
   */
  isAllowedByUser?: boolean;
}
/**
 *
 * @export
 * @interface PatcherProductResource
 */
export interface PatcherProductResource {
  /**
   *
   * @type {string}
   * @memberof PatcherProductResource
   */
  id?: string;
}
/**
 *
 * @export
 * @interface PatcherProductState
 */
export interface PatcherProductState {
  /**
   *
   * @type {PatcherComponentStateAction}
   * @memberof PatcherProductState
   */
  action?: PatcherComponentStateAction;
  /**
   *
   * @type {Array<PatcherComponentState>}
   * @memberof PatcherProductState
   */
  components?: Array<PatcherComponentState>;
  /**
   *
   * @type {string}
   * @memberof PatcherProductState
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof PatcherProductState
   */
  isCorrupted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherProductState
   */
  isStopped?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherProductState
   */
  isUpToDate?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherProductState
   */
  isUpdateAvailable?: boolean;
  /**
   *
   * @type {number}
   * @memberof PatcherProductState
   */
  percentPatched?: number;
}
/**
 *
 * @export
 * @interface PatcherStatus
 */
export interface PatcherStatus {
  /**
   *
   * @type {boolean}
   * @memberof PatcherStatus
   */
  connectedToPatchServer?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatcherStatus
   */
  hasUpdatesOnRestart?: boolean;
  /**
   *
   * @type {number}
   * @memberof PatcherStatus
   */
  successfullyInstalledVersion?: number;
  /**
   *
   * @type {boolean}
   * @memberof PatcherStatus
   */
  willRestartOnSelfUpdate?: boolean;
}
/**
 *
 * @export
 * @interface PatcherUxResource
 */
export interface PatcherUxResource {
  /**
   *
   * @type {boolean}
   * @memberof PatcherUxResource
   */
  visible?: boolean;
}
/**
 *
 * @export
 * @interface PaymentsFrontEndRequest
 */
export interface PaymentsFrontEndRequest {
  /**
   *
   * @type {string}
   * @memberof PaymentsFrontEndRequest
   */
  gifteeAccountId?: string;
  /**
   *
   * @type {string}
   * @memberof PaymentsFrontEndRequest
   */
  gifteeMessage?: string;
  /**
   *
   * @type {boolean}
   * @memberof PaymentsFrontEndRequest
   */
  isPrepaid?: boolean;
  /**
   *
   * @type {string}
   * @memberof PaymentsFrontEndRequest
   */
  localeId?: string;
  /**
   *
   * @type {string}
   * @memberof PaymentsFrontEndRequest
   */
  rsoToken?: string;
  /**
   *
   * @type {number}
   * @memberof PaymentsFrontEndRequest
   */
  summonerLevel?: number;
  /**
   *
   * @type {boolean}
   * @memberof PaymentsFrontEndRequest
   */
  usePmcSessions?: boolean;
}
/**
 *
 * @export
 * @interface PaymentsFrontEndResult
 */
export interface PaymentsFrontEndResult {
  /**
   *
   * @type {string}
   * @memberof PaymentsFrontEndResult
   */
  url?: string;
}
/**
 *
 * @export
 * @interface PaymentsPMCStartUrlRequest
 */
export interface PaymentsPMCStartUrlRequest {
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlRequest
   */
  gifteeAccountId?: string;
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlRequest
   */
  gifteeMessage?: string;
  /**
   *
   * @type {boolean}
   * @memberof PaymentsPMCStartUrlRequest
   */
  isPrepaid?: boolean;
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlRequest
   */
  localeId?: string;
  /**
   *
   * @type {number}
   * @memberof PaymentsPMCStartUrlRequest
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface PaymentsPMCStartUrlResult
 */
export interface PaymentsPMCStartUrlResult {
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlResult
   */
  createdAt?: string;
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlResult
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlResult
   */
  localeId?: string;
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlResult
   */
  playerFacingId?: string;
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlResult
   */
  pmcStartUrl?: string;
  /**
   *
   * @type {number}
   * @memberof PaymentsPMCStartUrlResult
   */
  summonerLevel?: number;
  /**
   *
   * @type {string}
   * @memberof PaymentsPMCStartUrlResult
   */
  userId?: string;
}
/**
 *
 * @export
 * @interface PendingRosterDTO
 */
export interface PendingRosterDTO {
  /**
   *
   * @type {number}
   * @memberof PendingRosterDTO
   */
  captainId?: number;
  /**
   *
   * @type {boolean}
   * @memberof PendingRosterDTO
   */
  highTierVariance?: boolean;
  /**
   *
   * @type {string}
   * @memberof PendingRosterDTO
   */
  invitationId?: string;
  /**
   *
   * @type {Array<FailedInvite>}
   * @memberof PendingRosterDTO
   */
  inviteFaileds?: Array<FailedInvite>;
  /**
   *
   * @type {Array<PendingRosterInviteeDTO>}
   * @memberof PendingRosterDTO
   */
  invitees?: Array<PendingRosterInviteeDTO>;
  /**
   *
   * @type {number}
   * @memberof PendingRosterDTO
   */
  logo?: number;
  /**
   *
   * @type {number}
   * @memberof PendingRosterDTO
   */
  logoColor?: number;
  /**
   *
   * @type {Array<PendingRosterMemberDTO>}
   * @memberof PendingRosterDTO
   */
  members?: Array<PendingRosterMemberDTO>;
  /**
   *
   * @type {string}
   * @memberof PendingRosterDTO
   */
  name?: string;
  /**
   *
   * @type {Array<RewardLogo>}
   * @memberof PendingRosterDTO
   */
  rewardLogos?: Array<RewardLogo>;
  /**
   *
   * @type {string}
   * @memberof PendingRosterDTO
   */
  shortName?: string;
  /**
   *
   * @type {Array<TicketOfferDTO>}
   * @memberof PendingRosterDTO
   */
  ticketOffers?: Array<TicketOfferDTO>;
  /**
   *
   * @type {number}
   * @memberof PendingRosterDTO
   */
  tier?: number;
  /**
   *
   * @type {number}
   * @memberof PendingRosterDTO
   */
  tournamentId?: number;
  /**
   *
   * @type {number}
   * @memberof PendingRosterDTO
   */
  version?: number;
}
/**
 *
 * @export
 * @interface PendingRosterInviteeDTO
 */
export interface PendingRosterInviteeDTO {
  /**
   *
   * @type {number}
   * @memberof PendingRosterInviteeDTO
   */
  inviteTime?: number;
  /**
   *
   * @type {number}
   * @memberof PendingRosterInviteeDTO
   */
  inviteeId?: number;
  /**
   *
   * @type {PendingRosterInviteeState}
   * @memberof PendingRosterInviteeDTO
   */
  inviteeState?: PendingRosterInviteeState;
  /**
   *
   * @type {number}
   * @memberof PendingRosterInviteeDTO
   */
  inviter?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PendingRosterInviteeState {
  SUGGESTED = 'SUGGESTED',
  PENDING = 'PENDING',
  DECLINED = 'DECLINED',
  REVOKED = 'REVOKED',
}

/**
 *
 * @export
 * @interface PendingRosterMemberDTO
 */
export interface PendingRosterMemberDTO {
  /**
   *
   * @type {number}
   * @memberof PendingRosterMemberDTO
   */
  bet?: number;
  /**
   *
   * @type {TicketType}
   * @memberof PendingRosterMemberDTO
   */
  betType?: TicketType;
  /**
   *
   * @type {number}
   * @memberof PendingRosterMemberDTO
   */
  joinTime?: number;
  /**
   *
   * @type {PendingRosterMemberState}
   * @memberof PendingRosterMemberDTO
   */
  memberState?: PendingRosterMemberState;
  /**
   *
   * @type {number}
   * @memberof PendingRosterMemberDTO
   */
  pendingPay?: number;
  /**
   *
   * @type {number}
   * @memberof PendingRosterMemberDTO
   */
  pendingPremiumPay?: number;
  /**
   *
   * @type {number}
   * @memberof PendingRosterMemberDTO
   */
  playerId?: number;
  /**
   *
   * @type {Position}
   * @memberof PendingRosterMemberDTO
   */
  position?: Position;
  /**
   *
   * @type {number}
   * @memberof PendingRosterMemberDTO
   */
  selfBet?: number;
  /**
   *
   * @type {number}
   * @memberof PendingRosterMemberDTO
   */
  tier?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PendingRosterMemberState {
  NOTREADY = 'NOT_READY',
  FORCEDNOTREADY = 'FORCED_NOT_READY',
  READY = 'READY',
  LEFT = 'LEFT',
  KICK = 'KICK',
}

/**
 *
 * @export
 * @interface PersonalizedOffersLcdsChampionDTO
 */
export interface PersonalizedOffersLcdsChampionDTO {
  /**
   *
   * @type {number}
   * @memberof PersonalizedOffersLcdsChampionDTO
   */
  championId?: number;
  /**
   *
   * @type {boolean}
   * @memberof PersonalizedOffersLcdsChampionDTO
   */
  owned?: boolean;
}
/**
 *
 * @export
 * @interface PersonalizedOffersLcdsChampionSkinDTO
 */
export interface PersonalizedOffersLcdsChampionSkinDTO {
  /**
   *
   * @type {number}
   * @memberof PersonalizedOffersLcdsChampionSkinDTO
   */
  championId?: number;
  /**
   *
   * @type {boolean}
   * @memberof PersonalizedOffersLcdsChampionSkinDTO
   */
  owned?: boolean;
  /**
   *
   * @type {number}
   * @memberof PersonalizedOffersLcdsChampionSkinDTO
   */
  skinId?: number;
}
/**
 *
 * @export
 * @interface PersonalizedOffersLcdsClientDynamicConfigurationNotification
 */
export interface PersonalizedOffersLcdsClientDynamicConfigurationNotification {
  /**
   *
   * @type {string}
   * @memberof PersonalizedOffersLcdsClientDynamicConfigurationNotification
   */
  configs?: string;
  /**
   *
   * @type {boolean}
   * @memberof PersonalizedOffersLcdsClientDynamicConfigurationNotification
   */
  delta?: boolean;
}
/**
 *
 * @export
 * @interface PersonalizedOffersStoreFulfillmentNotification
 */
export interface PersonalizedOffersStoreFulfillmentNotification {
  /**
   *
   * @type {object}
   * @memberof PersonalizedOffersStoreFulfillmentNotification
   */
  data?: object;
  /**
   *
   * @type {string}
   * @memberof PersonalizedOffersStoreFulfillmentNotification
   */
  inventoryType?: string;
}
/**
 *
 * @export
 * @interface PhaseInMember
 */
export interface PhaseInMember {
  /**
   *
   * @type {number}
   * @memberof PhaseInMember
   */
  bet?: number;
  /**
   *
   * @type {number}
   * @memberof PhaseInMember
   */
  pendingPay?: number;
  /**
   *
   * @type {number}
   * @memberof PhaseInMember
   */
  playerId?: number;
  /**
   *
   * @type {number}
   * @memberof PhaseInMember
   */
  selfBet?: number;
}
/**
 *
 * @export
 * @interface PhaseRosterDTO
 */
export interface PhaseRosterDTO {
  /**
   *
   * @type {Bracket}
   * @memberof PhaseRosterDTO
   */
  bracketDTO?: Bracket;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterDTO
   */
  bracketId?: number;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterDTO
   */
  checkinTime?: number;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterDTO
   */
  period?: number;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterDTO
   */
  phaseId?: number;
  /**
   *
   * @type {Array<PhaseRosterSubDTO>}
   * @memberof PhaseRosterDTO
   */
  phaseRosterSubs?: Array<PhaseRosterSubDTO>;
}
/**
 *
 * @export
 * @interface PhaseRosterSubDTO
 */
export interface PhaseRosterSubDTO {
  /**
   *
   * @type {number}
   * @memberof PhaseRosterSubDTO
   */
  bet?: number;
  /**
   *
   * @type {TicketType}
   * @memberof PhaseRosterSubDTO
   */
  betType?: TicketType;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterSubDTO
   */
  pay?: number;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterSubDTO
   */
  playerId?: number;
  /**
   *
   * @type {Position}
   * @memberof PhaseRosterSubDTO
   */
  position?: Position;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterSubDTO
   */
  premiumPay?: number;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterSubDTO
   */
  replacedPlayerId?: number;
  /**
   *
   * @type {SubState}
   * @memberof PhaseRosterSubDTO
   */
  subState?: SubState;
  /**
   *
   * @type {number}
   * @memberof PhaseRosterSubDTO
   */
  tier?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PickModes {
  NOTPICKING = 'NOT_PICKING',
  INPROGRESS = 'IN_PROGRESS',
  DONE = 'DONE',
}

/**
 *
 * @export
 * @interface PlayerBehaviorLcdsForcedClientShutdown
 */
export interface PlayerBehaviorLcdsForcedClientShutdown {
  /**
   *
   * @type {string}
   * @memberof PlayerBehaviorLcdsForcedClientShutdown
   */
  additionalInfo?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerBehaviorLcdsForcedClientShutdown
   */
  reason?: string;
}
/**
 *
 * @export
 * @interface PlayerBehaviorLcdsSimpleMessage
 */
export interface PlayerBehaviorLcdsSimpleMessage {
  /**
   *
   * @type {number}
   * @memberof PlayerBehaviorLcdsSimpleMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerBehaviorLcdsSimpleMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PlayerBehaviorLcdsSimpleMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof PlayerBehaviorLcdsSimpleMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface PlayerBehaviorSimpleMessageResponse
 */
export interface PlayerBehaviorSimpleMessageResponse {
  /**
   *
   * @type {number}
   * @memberof PlayerBehaviorSimpleMessageResponse
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerBehaviorSimpleMessageResponse
   */
  command?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerBehaviorSimpleMessageResponse
   */
  msgId?: string;
}
/**
 *
 * @export
 * @interface PlayerDTO
 */
export interface PlayerDTO {
  /**
   *
   * @type {boolean}
   * @memberof PlayerDTO
   */
  banned?: boolean;
  /**
   *
   * @type {Array<ClashOfflineNotification>}
   * @memberof PlayerDTO
   */
  notifications?: Array<ClashOfflineNotification>;
}
/**
 *
 * @export
 * @interface PlayerInfoDTO
 */
export interface PlayerInfoDTO {
  /**
   *
   * @type {number}
   * @memberof PlayerInfoDTO
   */
  playerId?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerInfoDTO
   */
  position?: string;
  /**
   *
   * @type {Role}
   * @memberof PlayerInfoDTO
   */
  role?: Role;
  /**
   *
   * @type {string}
   * @memberof PlayerInfoDTO
   */
  teamId?: string;
}
/**
 *
 * @export
 * @interface PlayerInventory
 */
export interface PlayerInventory {
  /**
   *
   * @type {Array<number>}
   * @memberof PlayerInventory
   */
  champions?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof PlayerInventory
   */
  icons?: Array<number>;
  /**
   *
   * @type {Array<string>}
   * @memberof PlayerInventory
   */
  inventoryJwts?: Array<string>;
  /**
   *
   * @type {Array<number>}
   * @memberof PlayerInventory
   */
  skins?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof PlayerInventory
   */
  wardSkins?: Array<number>;
}
/**
 *
 * @export
 * @interface PlayerLootDTO
 */
export interface PlayerLootDTO {
  /**
   *
   * @type {number}
   * @memberof PlayerLootDTO
   */
  count?: number;
  /**
   *
   * @type {number}
   * @memberof PlayerLootDTO
   */
  expiryTime?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerLootDTO
   */
  lootName?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerLootDTO
   */
  refId?: string;
}
/**
 *
 * @export
 * @interface PlayerLootDefinitionsDTO
 */
export interface PlayerLootDefinitionsDTO {
  /**
   *
   * @type {LootItemListClientDTO}
   * @memberof PlayerLootDefinitionsDTO
   */
  lootItemList?: LootItemListClientDTO;
  /**
   *
   * @type {Array<PlayerLootDTO>}
   * @memberof PlayerLootDefinitionsDTO
   */
  playerLoot?: Array<PlayerLootDTO>;
  /**
   *
   * @type {QueryResultDTO}
   * @memberof PlayerLootDefinitionsDTO
   */
  queryResult?: QueryResultDTO;
  /**
   *
   * @type {LootLcdsRecipeListClientDTO}
   * @memberof PlayerLootDefinitionsDTO
   */
  recipeList?: LootLcdsRecipeListClientDTO;
}
/**
 *
 * @export
 * @interface PlayerLootResultDTO
 */
export interface PlayerLootResultDTO {
  /**
   *
   * @type {Array<PlayerLootDTO>}
   * @memberof PlayerLootResultDTO
   */
  added?: Array<PlayerLootDTO>;
  /**
   *
   * @type {string}
   * @memberof PlayerLootResultDTO
   */
  details?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PlayerLootResultDTO
   */
  redeemed?: Array<string>;
  /**
   *
   * @type {Array<PlayerLootDTO>}
   * @memberof PlayerLootResultDTO
   */
  removed?: Array<PlayerLootDTO>;
  /**
   *
   * @type {string}
   * @memberof PlayerLootResultDTO
   */
  status?: string;
}
/**
 *
 * @export
 * @interface PlayerMissionDTO
 */
export interface PlayerMissionDTO {
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  backgroundImageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  celebrationType?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  clientNotifyLevel?: string;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionDTO
   */
  completedDate?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  completionExpression?: string;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionDTO
   */
  cooldownTimeMillis?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  description?: string;
  /**
   *
   * @type {MissionDisplay}
   * @memberof PlayerMissionDTO
   */
  display?: MissionDisplay;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  displayType?: string;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionDTO
   */
  earnedDate?: number;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionDTO
   */
  endTime?: number;
  /**
   *
   * @type {Array<MissionAlertDTO>}
   * @memberof PlayerMissionDTO
   */
  expiringWarnings?: Array<MissionAlertDTO>;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  helperText?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  iconImageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  internalName?: string;
  /**
   *
   * @type {boolean}
   * @memberof PlayerMissionDTO
   */
  isNew?: boolean;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionDTO
   */
  lastUpdatedTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  locale?: string;
  /**
   *
   * @type {MissionMetadata}
   * @memberof PlayerMissionDTO
   */
  metadata?: MissionMetadata;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  missionType?: string;
  /**
   *
   * @type {Array<PlayerMissionObjectiveDTO>}
   * @memberof PlayerMissionDTO
   */
  objectives?: Array<PlayerMissionObjectiveDTO>;
  /**
   *
   * @type {Array<string>}
   * @memberof PlayerMissionDTO
   */
  requirements?: Array<string>;
  /**
   *
   * @type {RewardStrategy}
   * @memberof PlayerMissionDTO
   */
  rewardStrategy?: RewardStrategy;
  /**
   *
   * @type {Array<PlayerMissionRewardDTO>}
   * @memberof PlayerMissionDTO
   */
  rewards?: Array<PlayerMissionRewardDTO>;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionDTO
   */
  sequence?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  seriesName?: string;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionDTO
   */
  startTime?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  status?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionDTO
   */
  title?: string;
  /**
   *
   * @type {boolean}
   * @memberof PlayerMissionDTO
   */
  viewed?: boolean;
}
/**
 *
 * @export
 * @interface PlayerMissionEligibilityData
 */
export interface PlayerMissionEligibilityData {
  /**
   *
   * @type {number}
   * @memberof PlayerMissionEligibilityData
   */
  level?: number;
  /**
   *
   * @type {boolean}
   * @memberof PlayerMissionEligibilityData
   */
  loyaltyEnabled?: boolean;
  /**
   *
   * @type {PlayerInventory}
   * @memberof PlayerMissionEligibilityData
   */
  playerInventory?: PlayerInventory;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionEligibilityData
   */
  userInfoToken?: string;
}
/**
 *
 * @export
 * @interface PlayerMissionObjectiveDTO
 */
export interface PlayerMissionObjectiveDTO {
  /**
   *
   * @type {string}
   * @memberof PlayerMissionObjectiveDTO
   */
  description?: string;
  /**
   *
   * @type {boolean}
   * @memberof PlayerMissionObjectiveDTO
   */
  hasObjectiveBasedReward?: boolean;
  /**
   *
   * @type {MissionProgressDTO}
   * @memberof PlayerMissionObjectiveDTO
   */
  progress?: MissionProgressDTO;
  /**
   *
   * @type {Array<string>}
   * @memberof PlayerMissionObjectiveDTO
   */
  requirements?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof PlayerMissionObjectiveDTO
   */
  rewardGroups?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionObjectiveDTO
   */
  sequence?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionObjectiveDTO
   */
  status?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionObjectiveDTO
   */
  type?: string;
}
/**
 *
 * @export
 * @interface PlayerMissionRewardDTO
 */
export interface PlayerMissionRewardDTO {
  /**
   *
   * @type {string}
   * @memberof PlayerMissionRewardDTO
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionRewardDTO
   */
  iconUrl?: string;
  /**
   *
   * @type {boolean}
   * @memberof PlayerMissionRewardDTO
   */
  isObjectiveBasedReward?: boolean;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionRewardDTO
   */
  itemId?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof PlayerMissionRewardDTO
   */
  media?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof PlayerMissionRewardDTO
   */
  quantity?: number;
  /**
   *
   * @type {boolean}
   * @memberof PlayerMissionRewardDTO
   */
  rewardFulfilled?: boolean;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionRewardDTO
   */
  rewardGroup?: string;
  /**
   *
   * @type {boolean}
   * @memberof PlayerMissionRewardDTO
   */
  rewardGroupSelected?: boolean;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionRewardDTO
   */
  rewardType?: string;
  /**
   *
   * @type {number}
   * @memberof PlayerMissionRewardDTO
   */
  sequence?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionRewardDTO
   */
  smallIconUrl?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerMissionRewardDTO
   */
  uniqueName?: string;
}
/**
 *
 * @export
 * @interface PlayerNotificationsPlayerNotificationConfigResource
 */
export interface PlayerNotificationsPlayerNotificationConfigResource {
  /**
   *
   * @type {number}
   * @memberof PlayerNotificationsPlayerNotificationConfigResource
   */
  ExpirationCheckFrequency?: number;
}
/**
 *
 * @export
 * @interface PlayerNotificationsPlayerNotificationResource
 */
export interface PlayerNotificationsPlayerNotificationResource {
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  created?: string;
  /**
   *
   * @type {boolean}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  critical?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  data?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  detailKey?: string;
  /**
   *
   * @type {boolean}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  dismissible?: boolean;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  expires?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  iconUrl?: string;
  /**
   *
   * @type {number}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  source?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  state?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  titleKey?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsPlayerNotificationResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface PlayerNotificationsRiotMessagingServiceMessage
 */
export interface PlayerNotificationsRiotMessagingServiceMessage {
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsRiotMessagingServiceMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsRiotMessagingServiceMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsRiotMessagingServiceMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof PlayerNotificationsRiotMessagingServiceMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof PlayerNotificationsRiotMessagingServiceMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @interface PlayerParticipant
 */
export interface PlayerParticipant {
  /**
   *
   * @type {number}
   * @memberof PlayerParticipant
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface PlayerRosterHistoryDTO
 */
export interface PlayerRosterHistoryDTO {
  /**
   *
   * @type {Array<RosterMemberDTO>}
   * @memberof PlayerRosterHistoryDTO
   */
  rosters?: Array<RosterMemberDTO>;
}
/**
 *
 * @export
 * @interface PlayerTierDTO
 */
export interface PlayerTierDTO {
  /**
   *
   * @type {number}
   * @memberof PlayerTierDTO
   */
  playerId?: number;
  /**
   *
   * @type {number}
   * @memberof PlayerTierDTO
   */
  tier?: number;
}
/**
 *
 * @export
 * @interface PluginDescriptionResource
 */
export interface PluginDescriptionResource {
  /**
   *
   * @type {string}
   * @memberof PluginDescriptionResource
   */
  name?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof PluginDescriptionResource
   */
  pluginDependencies?: { [key: string]: string };
  /**
   *
   * @type {PluginMetadataResource}
   * @memberof PluginDescriptionResource
   */
  riotMeta?: PluginMetadataResource;
  /**
   *
   * @type {string}
   * @memberof PluginDescriptionResource
   */
  version?: string;
}
/**
 *
 * @export
 * @interface PluginLcdsEvent
 */
export interface PluginLcdsEvent {
  /**
   *
   * @type {object}
   * @memberof PluginLcdsEvent
   */
  body?: object;
  /**
   *
   * @type {string}
   * @memberof PluginLcdsEvent
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof PluginLcdsEvent
   */
  subtopic?: string;
  /**
   *
   * @type {string}
   * @memberof PluginLcdsEvent
   */
  typeName?: string;
}
/**
 *
 * @export
 * @interface PluginLcdsResponse
 */
export interface PluginLcdsResponse {
  /**
   *
   * @type {object}
   * @memberof PluginLcdsResponse
   */
  body?: object;
  /**
   *
   * @type {string}
   * @memberof PluginLcdsResponse
   */
  typeName?: string;
}
/**
 *
 * @export
 * @interface PluginManagerResource
 */
export interface PluginManagerResource {
  /**
   *
   * @type {PluginManagerState}
   * @memberof PluginManagerResource
   */
  state?: PluginManagerState;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PluginManagerState {
  NotReady = 'NotReady',
  PluginsInitialized = 'PluginsInitialized',
}

/**
 *
 * @export
 * @interface PluginMetadataResource
 */
export interface PluginMetadataResource {
  /**
   *
   * @type {string}
   * @memberof PluginMetadataResource
   */
  app?: string;
  /**
   *
   * @type {string}
   * @memberof PluginMetadataResource
   */
  feature?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PluginMetadataResource
   */
  globalAssetBundles?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof PluginMetadataResource
   */
  hasBundledAssets?: boolean;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof PluginMetadataResource
   */
  _implements?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof PluginMetadataResource
   */
  mock?: string;
  /**
   *
   * @type {{ [key: string]: object; }}
   * @memberof PluginMetadataResource
   */
  perLocaleAssetBundles?: { [key: string]: object };
  /**
   *
   * @type {string}
   * @memberof PluginMetadataResource
   */
  subtype?: string;
  /**
   *
   * @type {PluginThreadingModel}
   * @memberof PluginMetadataResource
   */
  threading?: PluginThreadingModel;
  /**
   *
   * @type {string}
   * @memberof PluginMetadataResource
   */
  type?: string;
}
/**
 *
 * @export
 * @interface PluginRegionLocaleChangedEvent
 */
export interface PluginRegionLocaleChangedEvent {
  /**
   *
   * @type {string}
   * @memberof PluginRegionLocaleChangedEvent
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof PluginRegionLocaleChangedEvent
   */
  region?: string;
}
/**
 *
 * @export
 * @interface PluginResource
 */
export interface PluginResource {
  /**
   *
   * @type {string}
   * @memberof PluginResource
   */
  app?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PluginResource
   */
  assetBundleNames?: Array<string>;
  /**
   *
   * @type {Array<PluginResourceContract>}
   * @memberof PluginResource
   */
  dependencies?: Array<PluginResourceContract>;
  /**
   *
   * @type {string}
   * @memberof PluginResource
   */
  feature?: string;
  /**
   *
   * @type {string}
   * @memberof PluginResource
   */
  fullName?: string;
  /**
   *
   * @type {Array<PluginResourceContract>}
   * @memberof PluginResource
   */
  implementedContracts?: Array<PluginResourceContract>;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof PluginResource
   */
  mountedAssetBundles?: { [key: string]: string };
  /**
   *
   * @type {number}
   * @memberof PluginResource
   */
  orderWADFileMounted?: number;
  /**
   *
   * @type {string}
   * @memberof PluginResource
   */
  shortName?: string;
  /**
   *
   * @type {string}
   * @memberof PluginResource
   */
  subtype?: string;
  /**
   *
   * @type {string}
   * @memberof PluginResource
   */
  supertype?: string;
  /**
   *
   * @type {string}
   * @memberof PluginResource
   */
  threadingModel?: string;
  /**
   *
   * @type {string}
   * @memberof PluginResource
   */
  version?: string;
}
/**
 *
 * @export
 * @interface PluginResourceContract
 */
export interface PluginResourceContract {
  /**
   *
   * @type {string}
   * @memberof PluginResourceContract
   */
  fullName?: string;
  /**
   *
   * @type {string}
   * @memberof PluginResourceContract
   */
  version?: string;
}
/**
 *
 * @export
 * @interface PluginResourceEvent
 */
export interface PluginResourceEvent {
  /**
   *
   * @type {object}
   * @memberof PluginResourceEvent
   */
  data?: object;
  /**
   *
   * @type {PluginResourceEventType}
   * @memberof PluginResourceEvent
   */
  eventType?: PluginResourceEventType;
  /**
   *
   * @type {string}
   * @memberof PluginResourceEvent
   */
  uri?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PluginResourceEventType {
  Create = 'Create',
  Update = 'Update',
  Delete = 'Delete',
}

/**
 *
 * @export
 * @interface PluginServiceProxyResponse
 */
export interface PluginServiceProxyResponse {
  /**
   *
   * @type {string}
   * @memberof PluginServiceProxyResponse
   */
  error?: string;
  /**
   *
   * @type {string}
   * @memberof PluginServiceProxyResponse
   */
  methodName?: string;
  /**
   *
   * @type {string}
   * @memberof PluginServiceProxyResponse
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof PluginServiceProxyResponse
   */
  serviceName?: string;
  /**
   *
   * @type {string}
   * @memberof PluginServiceProxyResponse
   */
  status?: string;
  /**
   *
   * @type {string}
   * @memberof PluginServiceProxyResponse
   */
  uuid?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum PluginThreadingModel {
  Dedicated = 'dedicated',
  Sequential = 'sequential',
  Concurrent = 'concurrent',
  Parallel = 'parallel',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum Position {
  TOP = 'TOP',
  MIDDLE = 'MIDDLE',
  BOTTOM = 'BOTTOM',
  JUNGLE = 'JUNGLE',
  UTILITY = 'UTILITY',
  FILL = 'FILL',
  UNSELECTED = 'UNSELECTED',
}

/**
 *
 * @export
 * @interface PrivateSummonerDTO
 */
export interface PrivateSummonerDTO {
  /**
   *
   * @type {number}
   * @memberof PrivateSummonerDTO
   */
  acctId?: number;
  /**
   *
   * @type {string}
   * @memberof PrivateSummonerDTO
   */
  internalName?: string;
  /**
   *
   * @type {string}
   * @memberof PrivateSummonerDTO
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof PrivateSummonerDTO
   */
  nameChangeFlag?: boolean;
  /**
   *
   * @type {number}
   * @memberof PrivateSummonerDTO
   */
  profileIconId?: number;
  /**
   *
   * @type {number}
   * @memberof PrivateSummonerDTO
   */
  sumId?: number;
}
/**
 *
 * @export
 * @interface ProcessControlProcess
 */
export interface ProcessControlProcess {
  /**
   *
   * @type {number}
   * @memberof ProcessControlProcess
   */
  restart_countdown_seconds?: number;
  /**
   *
   * @type {string}
   * @memberof ProcessControlProcess
   */
  status?: string;
}
/**
 *
 * @export
 * @interface PublicPhaseSubDTO
 */
export interface PublicPhaseSubDTO {
  /**
   *
   * @type {number}
   * @memberof PublicPhaseSubDTO
   */
  playerId?: number;
  /**
   *
   * @type {number}
   * @memberof PublicPhaseSubDTO
   */
  replacedPlayerId?: number;
}
/**
 *
 * @export
 * @interface PublicPhaseSubsDTO
 */
export interface PublicPhaseSubsDTO {
  /**
   *
   * @type {number}
   * @memberof PublicPhaseSubsDTO
   */
  phaseId?: number;
  /**
   *
   * @type {Array<PublicPhaseSubDTO>}
   * @memberof PublicPhaseSubsDTO
   */
  phaseSubs?: Array<PublicPhaseSubDTO>;
}
/**
 *
 * @export
 * @interface PublicRosterDTO
 */
export interface PublicRosterDTO {
  /**
   *
   * @type {number}
   * @memberof PublicRosterDTO
   */
  id?: number;
  /**
   *
   * @type {number}
   * @memberof PublicRosterDTO
   */
  logo?: number;
  /**
   *
   * @type {number}
   * @memberof PublicRosterDTO
   */
  logoColor?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof PublicRosterDTO
   */
  memberIds?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof PublicRosterDTO
   */
  name?: string;
  /**
   *
   * @type {Array<PublicPhaseSubsDTO>}
   * @memberof PublicRosterDTO
   */
  phasesSubs?: Array<PublicPhaseSubsDTO>;
  /**
   *
   * @type {string}
   * @memberof PublicRosterDTO
   */
  shortName?: string;
  /**
   *
   * @type {number}
   * @memberof PublicRosterDTO
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface PublicSummonerDTO
 */
export interface PublicSummonerDTO {
  /**
   *
   * @type {number}
   * @memberof PublicSummonerDTO
   */
  acctId?: number;
  /**
   *
   * @type {string}
   * @memberof PublicSummonerDTO
   */
  internalName?: string;
  /**
   *
   * @type {string}
   * @memberof PublicSummonerDTO
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof PublicSummonerDTO
   */
  profileIconId?: number;
  /**
   *
   * @type {string}
   * @memberof PublicSummonerDTO
   */
  puuid?: string;
  /**
   *
   * @type {number}
   * @memberof PublicSummonerDTO
   */
  summonerId?: number;
  /**
   *
   * @type {number}
   * @memberof PublicSummonerDTO
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface Punishment
 */
export interface Punishment {
  /**
   *
   * @type {boolean}
   * @memberof Punishment
   */
  permaBan?: boolean;
  /**
   *
   * @type {string}
   * @memberof Punishment
   */
  playerFacingMessage?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof Punishment
   */
  punishedForChatLogs?: Array<string>;
  /**
   *
   * @type {Array<number>}
   * @memberof Punishment
   */
  punishedForGameIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof Punishment
   */
  punishedUntilDateMillis?: number;
  /**
   *
   * @type {number}
   * @memberof Punishment
   */
  punishmentLengthGames?: number;
  /**
   *
   * @type {number}
   * @memberof Punishment
   */
  punishmentLengthMillis?: number;
  /**
   *
   * @type {string}
   * @memberof Punishment
   */
  punishmentReason?: string;
  /**
   *
   * @type {string}
   * @memberof Punishment
   */
  punishmentType?: string;
}
/**
 *
 * @export
 * @interface QueryResultDTO
 */
export interface QueryResultDTO {
  /**
   *
   * @type {number}
   * @memberof QueryResultDTO
   */
  lastUpdate?: number;
  /**
   *
   * @type {object}
   * @memberof QueryResultDTO
   */
  queryToLootNames?: object;
}
/**
 *
 * @export
 * @interface RankedQueueStatsDTO
 */
export interface RankedQueueStatsDTO {
  /**
   *
   * @type {number}
   * @memberof RankedQueueStatsDTO
   */
  leaguePoints?: number;
  /**
   *
   * @type {number}
   * @memberof RankedQueueStatsDTO
   */
  losses?: number;
  /**
   *
   * @type {string}
   * @memberof RankedQueueStatsDTO
   */
  miniSeriesProgress?: string;
  /**
   *
   * @type {string}
   * @memberof RankedQueueStatsDTO
   */
  previousSeasonAchievedRank?: string;
  /**
   *
   * @type {string}
   * @memberof RankedQueueStatsDTO
   */
  previousSeasonAchievedTier?: string;
  /**
   *
   * @type {string}
   * @memberof RankedQueueStatsDTO
   */
  previousSeasonEndRank?: string;
  /**
   *
   * @type {string}
   * @memberof RankedQueueStatsDTO
   */
  previousSeasonEndTier?: string;
  /**
   *
   * @type {number}
   * @memberof RankedQueueStatsDTO
   */
  provisionalGameThreshold?: number;
  /**
   *
   * @type {number}
   * @memberof RankedQueueStatsDTO
   */
  provisionalGamesRemaining?: number;
  /**
   *
   * @type {string}
   * @memberof RankedQueueStatsDTO
   */
  queueType?: string;
  /**
   *
   * @type {string}
   * @memberof RankedQueueStatsDTO
   */
  rank?: string;
  /**
   *
   * @type {string}
   * @memberof RankedQueueStatsDTO
   */
  tier?: string;
  /**
   *
   * @type {RankedQueueWarningsDTO}
   * @memberof RankedQueueStatsDTO
   */
  warnings?: RankedQueueWarningsDTO;
  /**
   *
   * @type {number}
   * @memberof RankedQueueStatsDTO
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface RankedQueueWarningsDTO
 */
export interface RankedQueueWarningsDTO {
  /**
   *
   * @type {number}
   * @memberof RankedQueueWarningsDTO
   */
  apexDaysUntilDecay?: number;
  /**
   *
   * @type {number}
   * @memberof RankedQueueWarningsDTO
   */
  demotionWarning?: number;
  /**
   *
   * @type {boolean}
   * @memberof RankedQueueWarningsDTO
   */
  displayDecayWarning?: boolean;
  /**
   *
   * @type {number}
   * @memberof RankedQueueWarningsDTO
   */
  timeUntilInactivityStatusChanges?: number;
}
/**
 *
 * @export
 * @interface RankedScoutingDTO
 */
export interface RankedScoutingDTO {
  /**
   *
   * @type {number}
   * @memberof RankedScoutingDTO
   */
  playerId?: number;
  /**
   *
   * @type {Array<ChampionMasteryPublicDTO>}
   * @memberof RankedScoutingDTO
   */
  topMasteries?: Array<ChampionMasteryPublicDTO>;
  /**
   *
   * @type {Array<ChampionScoutingDTO>}
   * @memberof RankedScoutingDTO
   */
  topSeasonChampions?: Array<ChampionScoutingDTO>;
  /**
   *
   * @type {number}
   * @memberof RankedScoutingDTO
   */
  totalMasteryScore?: number;
}
/**
 *
 * @export
 * @interface RankedScoutingMemberDTO
 */
export interface RankedScoutingMemberDTO {
  /**
   *
   * @type {Array<RankedScoutingTopChampionDTO>}
   * @memberof RankedScoutingMemberDTO
   */
  championScoutingData?: Array<RankedScoutingTopChampionDTO>;
  /**
   *
   * @type {number}
   * @memberof RankedScoutingMemberDTO
   */
  playerId?: number;
}
/**
 *
 * @export
 * @interface RankedScoutingTopChampionDTO
 */
export interface RankedScoutingTopChampionDTO {
  /**
   *
   * @type {number}
   * @memberof RankedScoutingTopChampionDTO
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof RankedScoutingTopChampionDTO
   */
  gameCount?: number;
  /**
   *
   * @type {number}
   * @memberof RankedScoutingTopChampionDTO
   */
  kda?: number;
  /**
   *
   * @type {number}
   * @memberof RankedScoutingTopChampionDTO
   */
  rank?: number;
  /**
   *
   * @type {number}
   * @memberof RankedScoutingTopChampionDTO
   */
  winCount?: number;
}
/**
 *
 * @export
 * @interface RankedStatsDTO
 */
export interface RankedStatsDTO {
  /**
   *
   * @type {Array<string>}
   * @memberof RankedStatsDTO
   */
  earnedRegaliaRewardIds?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof RankedStatsDTO
   */
  highestPreviousSeasonAchievedRank?: string;
  /**
   *
   * @type {string}
   * @memberof RankedStatsDTO
   */
  highestPreviousSeasonAchievedTier?: string;
  /**
   *
   * @type {string}
   * @memberof RankedStatsDTO
   */
  highestPreviousSeasonEndRank?: string;
  /**
   *
   * @type {string}
   * @memberof RankedStatsDTO
   */
  highestPreviousSeasonEndTier?: string;
  /**
   *
   * @type {Array<RankedQueueStatsDTO>}
   * @memberof RankedStatsDTO
   */
  queues?: Array<RankedQueueStatsDTO>;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof RankedStatsDTO
   */
  splitsProgress?: { [key: string]: number };
}
/**
 *
 * @export
 * @interface RecofrienderAccountResource
 */
export interface RecofrienderAccountResource {
  /**
   *
   * @type {number}
   * @memberof RecofrienderAccountResource
   */
  accountId?: number;
  /**
   *
   * @type {Array<RecofrienderActionResource>}
   * @memberof RecofrienderAccountResource
   */
  contacts?: Array<RecofrienderActionResource>;
  /**
   *
   * @type {string}
   * @memberof RecofrienderAccountResource
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface RecofrienderActionResource
 */
export interface RecofrienderActionResource {
  /**
   *
   * @type {number}
   * @memberof RecofrienderActionResource
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof RecofrienderActionResource
   */
  action?: string;
  /**
   *
   * @type {string}
   * @memberof RecofrienderActionResource
   */
  platformId?: string;
}
/**
 *
 * @export
 * @interface RecofrienderChatFriendResource
 */
export interface RecofrienderChatFriendResource {
  /**
   *
   * @type {string}
   * @memberof RecofrienderChatFriendResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof RecofrienderChatFriendResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface RecofrienderConfig
 */
export interface RecofrienderConfig {
  /**
   *
   * @type {string}
   * @memberof RecofrienderConfig
   */
  ContactDetailsUrlTemplate?: string;
  /**
   *
   * @type {string}
   * @memberof RecofrienderConfig
   */
  ContactsUrlTemplate?: string;
  /**
   *
   * @type {boolean}
   * @memberof RecofrienderConfig
   */
  EnableSocial?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof RecofrienderConfig
   */
  EnabledNetworks?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof RecofrienderConfig
   */
  ExternalCallTimeoutSeconds?: number;
  /**
   *
   * @type {string}
   * @memberof RecofrienderConfig
   */
  FaqLink?: string;
}
/**
 *
 * @export
 * @interface RecofrienderContactCountResource
 */
export interface RecofrienderContactCountResource {
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactCountResource
   */
  count?: number;
}
/**
 *
 * @export
 * @interface RecofrienderContactPaginationResource
 */
export interface RecofrienderContactPaginationResource {
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactPaginationResource
   */
  cached?: number;
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactPaginationResource
   */
  count?: number;
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactPaginationResource
   */
  limit?: number;
  /**
   *
   * @type {boolean}
   * @memberof RecofrienderContactPaginationResource
   */
  more?: boolean;
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactPaginationResource
   */
  start?: number;
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactPaginationResource
   */
  total?: number;
}
/**
 *
 * @export
 * @interface RecofrienderContactResource
 */
export interface RecofrienderContactResource {
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactResource
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof RecofrienderContactResource
   */
  action?: string;
  /**
   *
   * @type {string}
   * @memberof RecofrienderContactResource
   */
  displayState?: string;
  /**
   *
   * @type {RecofrienderFriendState}
   * @memberof RecofrienderContactResource
   */
  friendState?: RecofrienderFriendState;
  /**
   *
   * @type {string}
   * @memberof RecofrienderContactResource
   */
  imageUrl?: string;
  /**
   *
   * @type {string}
   * @memberof RecofrienderContactResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactResource
   */
  recommendScore?: number;
  /**
   *
   * @type {string}
   * @memberof RecofrienderContactResource
   */
  source?: string;
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface RecofrienderContactStateResource
 */
export interface RecofrienderContactStateResource {
  /**
   *
   * @type {number}
   * @memberof RecofrienderContactStateResource
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof RecofrienderContactStateResource
   */
  action?: string;
  /**
   *
   * @type {string}
   * @memberof RecofrienderContactStateResource
   */
  displayState?: string;
}
/**
 *
 * @export
 * @interface RecofrienderDebugConfig
 */
export interface RecofrienderDebugConfig {
  /**
   *
   * @type {boolean}
   * @memberof RecofrienderDebugConfig
   */
  isHttpLoggingEnabled?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum RecofrienderFriendState {
  NONE = 'NONE',
  FRIEND = 'FRIEND',
  BLOCKED = 'BLOCKED',
}

/**
 *
 * @export
 * @interface RecofrienderLinkResource
 */
export interface RecofrienderLinkResource {
  /**
   *
   * @type {boolean}
   * @memberof RecofrienderLinkResource
   */
  linked?: boolean;
  /**
   *
   * @type {string}
   * @memberof RecofrienderLinkResource
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof RecofrienderLinkResource
   */
  reason?: string;
}
/**
 *
 * @export
 * @interface RecofrienderLoginSession
 */
export interface RecofrienderLoginSession {
  /**
   *
   * @type {number}
   * @memberof RecofrienderLoginSession
   */
  accountId?: number;
  /**
   *
   * @type {object}
   * @memberof RecofrienderLoginSession
   */
  gasToken?: object;
  /**
   *
   * @type {string}
   * @memberof RecofrienderLoginSession
   */
  idToken?: string;
  /**
   *
   * @type {RecofrienderLoginSessionStates}
   * @memberof RecofrienderLoginSession
   */
  state?: RecofrienderLoginSessionStates;
  /**
   *
   * @type {number}
   * @memberof RecofrienderLoginSession
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum RecofrienderLoginSessionStates {
  INPROGRESS = 'IN_PROGRESS',
  SUCCEEDED = 'SUCCEEDED',
  LOGGINGOUT = 'LOGGING_OUT',
  ERROR = 'ERROR',
}

/**
 *
 * @export
 * @interface RecofrienderNetworkConfig
 */
export interface RecofrienderNetworkConfig {
  /**
   *
   * @type {boolean}
   * @memberof RecofrienderNetworkConfig
   */
  enabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof RecofrienderNetworkConfig
   */
  linkUrlTemplate?: string;
  /**
   *
   * @type {string}
   * @memberof RecofrienderNetworkConfig
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof RecofrienderNetworkConfig
   */
  unlinkUrlTemplate?: string;
}
/**
 *
 * @export
 * @interface RecofrienderSessionResource
 */
export interface RecofrienderSessionResource {
  /**
   *
   * @type {number}
   * @memberof RecofrienderSessionResource
   */
  sessionExpire?: number;
  /**
   *
   * @type {string}
   * @memberof RecofrienderSessionResource
   */
  sessionState?: string;
}
/**
 *
 * @export
 * @interface RecofrienderSummonerResource
 */
export interface RecofrienderSummonerResource {
  /**
   *
   * @type {number}
   * @memberof RecofrienderSummonerResource
   */
  accountId?: number;
  /**
   *
   * @type {number}
   * @memberof RecofrienderSummonerResource
   */
  summonerId?: number;
}
/**
 *
 * @export
 * @interface RecofrienderUrlResource
 */
export interface RecofrienderUrlResource {
  /**
   *
   * @type {string}
   * @memberof RecofrienderUrlResource
   */
  url?: string;
}
/**
 *
 * @export
 * @interface RedeemLootTransactionDTO
 */
export interface RedeemLootTransactionDTO {
  /**
   *
   * @type {string}
   * @memberof RedeemLootTransactionDTO
   */
  lootName?: string;
}
/**
 *
 * @export
 * @interface RegionLocale
 */
export interface RegionLocale {
  /**
   *
   * @type {string}
   * @memberof RegionLocale
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof RegionLocale
   */
  region?: string;
  /**
   *
   * @type {string}
   * @memberof RegionLocale
   */
  webLanguage?: string;
  /**
   *
   * @type {string}
   * @memberof RegionLocale
   */
  webRegion?: string;
}
/**
 * Help format for remoting functions and types.
 * @export
 * @enum {string}
 */
export enum RemotingHelpFormat {
  Full = 'Full',
  Epytext = 'Epytext',
  Brief = 'Brief',
  Console = 'Console',
}

/**
 * Well-known privilege levels for bindable functions.
 * @export
 * @enum {string}
 */
export enum RemotingPrivilege {
  None = 'None',
  User = 'User',
  Admin = 'Admin',
  Local = 'Local',
}

/**
 * Serialization format for remoting requests and results.
 * @export
 * @enum {string}
 */
export enum RemotingSerializedFormat {
  JSON = 'JSON',
  YAML = 'YAML',
  MsgPack = 'MsgPack',
}

/**
 *
 * @export
 * @interface ReplayMetadataV2
 */
export interface ReplayMetadataV2 {
  /**
   *
   * @type {number}
   * @memberof ReplayMetadataV2
   */
  fileSize?: number;
  /**
   *
   * @type {string}
   * @memberof ReplayMetadataV2
   */
  gameVersion?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum ReplayResponseStatus {
  OK = 'OK',
  NOTFOUND = 'NOT_FOUND',
  EXPIRED = 'EXPIRED',
  BADREQUEST = 'BAD_REQUEST',
  INTERNALSERVERERROR = 'INTERNAL_SERVER_ERROR',
}

/**
 *
 * @export
 * @interface RerollPointsDTO
 */
export interface RerollPointsDTO {
  /**
   *
   * @type {number}
   * @memberof RerollPointsDTO
   */
  currentPoints?: number;
  /**
   *
   * @type {number}
   * @memberof RerollPointsDTO
   */
  maxRolls?: number;
  /**
   *
   * @type {number}
   * @memberof RerollPointsDTO
   */
  numberOfRolls?: number;
  /**
   *
   * @type {number}
   * @memberof RerollPointsDTO
   */
  pointsCostToRoll?: number;
  /**
   *
   * @type {number}
   * @memberof RerollPointsDTO
   */
  pointsToReroll?: number;
}
/**
 *
 * @export
 * @interface RewardDetails
 */
export interface RewardDetails {
  /**
   *
   * @type {number}
   * @memberof RewardDetails
   */
  rosterId?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof RewardDetails
   */
  teamMemberIds?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof RewardDetails
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface RewardLogo
 */
export interface RewardLogo {
  /**
   *
   * @type {number}
   * @memberof RewardLogo
   */
  logo?: number;
  /**
   *
   * @type {number}
   * @memberof RewardLogo
   */
  memberOwnedCount?: number;
}
/**
 *
 * @export
 * @interface RewardStrategy
 */
export interface RewardStrategy {
  /**
   *
   * @type {string}
   * @memberof RewardStrategy
   */
  groupStrategy?: string;
  /**
   *
   * @type {number}
   * @memberof RewardStrategy
   */
  selectMaxGroupCount?: number;
  /**
   *
   * @type {number}
   * @memberof RewardStrategy
   */
  selectMinGroupCount?: number;
}
/**
 *
 * @export
 * @interface RiotMessagingServiceAcknowledgeBody
 */
export interface RiotMessagingServiceAcknowledgeBody {
  /**
   *
   * @type {string}
   * @memberof RiotMessagingServiceAcknowledgeBody
   */
  id?: string;
}
/**
 *
 * @export
 * @interface RiotMessagingServiceEntitlementsToken
 */
export interface RiotMessagingServiceEntitlementsToken {
  /**
   *
   * @type {string}
   * @memberof RiotMessagingServiceEntitlementsToken
   */
  accessToken?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof RiotMessagingServiceEntitlementsToken
   */
  entitlements?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof RiotMessagingServiceEntitlementsToken
   */
  issuer?: string;
  /**
   *
   * @type {string}
   * @memberof RiotMessagingServiceEntitlementsToken
   */
  subject?: string;
  /**
   *
   * @type {string}
   * @memberof RiotMessagingServiceEntitlementsToken
   */
  token?: string;
}
/**
 *
 * @export
 * @interface RiotMessagingServicePluginRegionLocaleChangedEvent
 */
export interface RiotMessagingServicePluginRegionLocaleChangedEvent {
  /**
   *
   * @type {string}
   * @memberof RiotMessagingServicePluginRegionLocaleChangedEvent
   */
  locale?: string;
  /**
   *
   * @type {string}
   * @memberof RiotMessagingServicePluginRegionLocaleChangedEvent
   */
  region?: string;
}
/**
 *
 * @export
 * @interface RiotMessagingServiceSession
 */
export interface RiotMessagingServiceSession {
  /**
   *
   * @type {RiotMessagingServiceState}
   * @memberof RiotMessagingServiceSession
   */
  state?: RiotMessagingServiceState;
  /**
   *
   * @type {string}
   * @memberof RiotMessagingServiceSession
   */
  token?: string;
  /**
   *
   * @type {RiotMessagingServiceTokenType}
   * @memberof RiotMessagingServiceSession
   */
  tokenType?: RiotMessagingServiceTokenType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum RiotMessagingServiceState {
  Disconnecting = 'Disconnecting',
  Disconnected = 'Disconnected',
  Connecting = 'Connecting',
  Connected = 'Connected',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum RiotMessagingServiceTokenType {
  Unavailable = 'Unavailable',
  Access = 'Access',
  Identity = 'Identity',
}

/**
 *
 * @export
 * @interface RmsMessage
 */
export interface RmsMessage {
  /**
   *
   * @type {boolean}
   * @memberof RmsMessage
   */
  ackRequired?: boolean;
  /**
   *
   * @type {string}
   * @memberof RmsMessage
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof RmsMessage
   */
  payload?: string;
  /**
   *
   * @type {string}
   * @memberof RmsMessage
   */
  resource?: string;
  /**
   *
   * @type {string}
   * @memberof RmsMessage
   */
  service?: string;
  /**
   *
   * @type {number}
   * @memberof RmsMessage
   */
  timestamp?: number;
  /**
   *
   * @type {string}
   * @memberof RmsMessage
   */
  version?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum Role {
  CAPTAIN = 'CAPTAIN',
  MEMBER = 'MEMBER',
  NONE = 'NONE',
}

/**
 *
 * @export
 * @interface RosterAggregatedStatsDTO
 */
export interface RosterAggregatedStatsDTO {
  /**
   *
   * @type {Array<RosterPeriodAggregatedStatsDTO>}
   * @memberof RosterAggregatedStatsDTO
   */
  periodStats?: Array<RosterPeriodAggregatedStatsDTO>;
  /**
   *
   * @type {{ [key: string]: RosterPlayerAggregatedStatsDTO; }}
   * @memberof RosterAggregatedStatsDTO
   */
  playerStats?: { [key: string]: RosterPlayerAggregatedStatsDTO };
}
/**
 *
 * @export
 * @interface RosterDTO
 */
export interface RosterDTO {
  /**
   *
   * @type {boolean}
   * @memberof RosterDTO
   */
  banned?: boolean;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  captainId?: number;
  /**
   *
   * @type {RosterDynamicStateDTO}
   * @memberof RosterDTO
   */
  dynamicState?: RosterDynamicStateDTO;
  /**
   *
   * @type {boolean}
   * @memberof RosterDTO
   */
  eliminated?: boolean;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof RosterDTO
   */
  invitationId?: string;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  logo?: number;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  logoColor?: number;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  losses?: number;
  /**
   *
   * @type {Array<RosterMemberDTO>}
   * @memberof RosterDTO
   */
  members?: Array<RosterMemberDTO>;
  /**
   *
   * @type {string}
   * @memberof RosterDTO
   */
  name?: string;
  /**
   *
   * @type {Array<PhaseRosterDTO>}
   * @memberof RosterDTO
   */
  phases?: Array<PhaseRosterDTO>;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  points?: number;
  /**
   *
   * @type {string}
   * @memberof RosterDTO
   */
  shortName?: string;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  tier?: number;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  tournamentId?: number;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  version?: number;
  /**
   *
   * @type {number}
   * @memberof RosterDTO
   */
  wins?: number;
}
/**
 *
 * @export
 * @interface RosterDynamicStateDTO
 */
export interface RosterDynamicStateDTO {
  /**
   *
   * @type {Array<PhaseInMember>}
   * @memberof RosterDynamicStateDTO
   */
  members?: Array<PhaseInMember>;
  /**
   *
   * @type {Array<number>}
   * @memberof RosterDynamicStateDTO
   */
  phaseCheckinStates?: Array<number>;
  /**
   *
   * @type {Array<PhaseRosterSubDTO>}
   * @memberof RosterDynamicStateDTO
   */
  phaseRosterSubs?: Array<PhaseRosterSubDTO>;
  /**
   *
   * @type {number}
   * @memberof RosterDynamicStateDTO
   */
  rosterId?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof RosterDynamicStateDTO
   */
  subbedMemberIds?: Array<number>;
  /**
   *
   * @type {Array<TicketOfferDTO>}
   * @memberof RosterDynamicStateDTO
   */
  ticketOffers?: Array<TicketOfferDTO>;
  /**
   *
   * @type {number}
   * @memberof RosterDynamicStateDTO
   */
  tournamentId?: number;
  /**
   *
   * @type {number}
   * @memberof RosterDynamicStateDTO
   */
  version?: number;
  /**
   *
   * @type {RosterWithdraw}
   * @memberof RosterDynamicStateDTO
   */
  withdraw?: RosterWithdraw;
}
/**
 *
 * @export
 * @interface RosterMatchAggregatedStatsDTO
 */
export interface RosterMatchAggregatedStatsDTO {
  /**
   *
   * @type {number}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  duration?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  gameId?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  kills?: number;
  /**
   *
   * @type {boolean}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  loserBracket?: boolean;
  /**
   *
   * @type {number}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  opponentKills?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  opponentLogo?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  opponentLogoColor?: number;
  /**
   *
   * @type {string}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  opponentShortName?: string;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  playerChampionIds?: { [key: string]: number };
  /**
   *
   * @type {number}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  round?: number;
  /**
   *
   * @type {boolean}
   * @memberof RosterMatchAggregatedStatsDTO
   */
  win?: boolean;
}
/**
 *
 * @export
 * @interface RosterMemberDTO
 */
export interface RosterMemberDTO {
  /**
   *
   * @type {TicketType}
   * @memberof RosterMemberDTO
   */
  bidType?: TicketType;
  /**
   *
   * @type {number}
   * @memberof RosterMemberDTO
   */
  currentBid?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMemberDTO
   */
  joinTime?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMemberDTO
   */
  pendingPremiumSpend?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMemberDTO
   */
  pendingSpend?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMemberDTO
   */
  playerId?: number;
  /**
   *
   * @type {Position}
   * @memberof RosterMemberDTO
   */
  position?: Position;
  /**
   *
   * @type {number}
   * @memberof RosterMemberDTO
   */
  rosterId?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMemberDTO
   */
  tier?: number;
  /**
   *
   * @type {number}
   * @memberof RosterMemberDTO
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface RosterPeriodAggregatedStatsDTO
 */
export interface RosterPeriodAggregatedStatsDTO {
  /**
   *
   * @type {number}
   * @memberof RosterPeriodAggregatedStatsDTO
   */
  bracketSize?: number;
  /**
   *
   * @type {Array<RosterMatchAggregatedStatsDTO>}
   * @memberof RosterPeriodAggregatedStatsDTO
   */
  matchStats?: Array<RosterMatchAggregatedStatsDTO>;
  /**
   *
   * @type {number}
   * @memberof RosterPeriodAggregatedStatsDTO
   */
  period?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof RosterPeriodAggregatedStatsDTO
   */
  playerBids?: { [key: string]: number };
  /**
   *
   * @type {number}
   * @memberof RosterPeriodAggregatedStatsDTO
   */
  time?: number;
}
/**
 *
 * @export
 * @interface RosterPlayerAggregatedStatsDTO
 */
export interface RosterPlayerAggregatedStatsDTO {
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof RosterPlayerAggregatedStatsDTO
   */
  rawStatsMax?: { [key: string]: number };
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof RosterPlayerAggregatedStatsDTO
   */
  rawStatsSum?: { [key: string]: number };
  /**
   *
   * @type {boolean}
   * @memberof RosterPlayerAggregatedStatsDTO
   */
  sub?: boolean;
}
/**
 *
 * @export
 * @interface RosterStatsDTO
 */
export interface RosterStatsDTO {
  /**
   *
   * @type {number}
   * @memberof RosterStatsDTO
   */
  rosterId?: number;
  /**
   *
   * @type {number}
   * @memberof RosterStatsDTO
   */
  rosterLogo?: number;
  /**
   *
   * @type {number}
   * @memberof RosterStatsDTO
   */
  rosterLogoColor?: number;
  /**
   *
   * @type {string}
   * @memberof RosterStatsDTO
   */
  rosterName?: string;
  /**
   *
   * @type {string}
   * @memberof RosterStatsDTO
   */
  rosterShortName?: string;
  /**
   *
   * @type {number}
   * @memberof RosterStatsDTO
   */
  scheduleEndTime?: number;
  /**
   *
   * @type {number}
   * @memberof RosterStatsDTO
   */
  scheduleTime?: number;
  /**
   *
   * @type {RosterAggregatedStatsDTO}
   * @memberof RosterStatsDTO
   */
  stats?: RosterAggregatedStatsDTO;
  /**
   *
   * @type {number}
   * @memberof RosterStatsDTO
   */
  tier?: number;
  /**
   *
   * @type {string}
   * @memberof RosterStatsDTO
   */
  tournamentNameLocKey?: string;
  /**
   *
   * @type {string}
   * @memberof RosterStatsDTO
   */
  tournamentNameLocKeySecondary?: string;
  /**
   *
   * @type {number}
   * @memberof RosterStatsDTO
   */
  tournamentPeriods?: number;
  /**
   *
   * @type {number}
   * @memberof RosterStatsDTO
   */
  tournamentThemeId?: number;
}
/**
 *
 * @export
 * @interface RosterWithdraw
 */
export interface RosterWithdraw {
  /**
   *
   * @type {Array<number>}
   * @memberof RosterWithdraw
   */
  declineWithdrawMembers?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof RosterWithdraw
   */
  gameStartBufferMs?: number;
  /**
   *
   * @type {number}
   * @memberof RosterWithdraw
   */
  initVoteMember?: number;
  /**
   *
   * @type {number}
   * @memberof RosterWithdraw
   */
  initVoteTime?: number;
  /**
   *
   * @type {number}
   * @memberof RosterWithdraw
   */
  lockoutTimeMs?: number;
  /**
   *
   * @type {number}
   * @memberof RosterWithdraw
   */
  voteTimeoutMs?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof RosterWithdraw
   */
  voteWithdrawMembers?: Array<number>;
}
/**
 *
 * @export
 * @interface SanitizerContainsSanitizedRequest
 */
export interface SanitizerContainsSanitizedRequest {
  /**
   *
   * @type {boolean}
   * @memberof SanitizerContainsSanitizedRequest
   */
  aggressiveScan?: boolean;
  /**
   *
   * @type {number}
   * @memberof SanitizerContainsSanitizedRequest
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof SanitizerContainsSanitizedRequest
   */
  text?: string;
}
/**
 *
 * @export
 * @interface SanitizerContainsSanitizedResponse
 */
export interface SanitizerContainsSanitizedResponse {
  /**
   *
   * @type {boolean}
   * @memberof SanitizerContainsSanitizedResponse
   */
  contains?: boolean;
}
/**
 *
 * @export
 * @interface SanitizerSanitizeRequest
 */
export interface SanitizerSanitizeRequest {
  /**
   *
   * @type {boolean}
   * @memberof SanitizerSanitizeRequest
   */
  aggressiveScan?: boolean;
  /**
   *
   * @type {number}
   * @memberof SanitizerSanitizeRequest
   */
  level?: number;
  /**
   *
   * @type {string}
   * @memberof SanitizerSanitizeRequest
   */
  text?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof SanitizerSanitizeRequest
   */
  texts?: Array<string>;
}
/**
 *
 * @export
 * @interface SanitizerSanitizeResponse
 */
export interface SanitizerSanitizeResponse {
  /**
   *
   * @type {boolean}
   * @memberof SanitizerSanitizeResponse
   */
  modified?: boolean;
  /**
   *
   * @type {string}
   * @memberof SanitizerSanitizeResponse
   */
  text?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof SanitizerSanitizeResponse
   */
  texts?: Array<string>;
}
/**
 *
 * @export
 * @interface SanitizerSanitizerStatus
 */
export interface SanitizerSanitizerStatus {
  /**
   *
   * @type {number}
   * @memberof SanitizerSanitizerStatus
   */
  breakingCharsCount?: number;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof SanitizerSanitizerStatus
   */
  filteredWordCountsByLevel?: { [key: string]: number };
  /**
   *
   * @type {string}
   * @memberof SanitizerSanitizerStatus
   */
  locale?: string;
  /**
   *
   * @type {number}
   * @memberof SanitizerSanitizerStatus
   */
  projectedCharsCount?: number;
  /**
   *
   * @type {boolean}
   * @memberof SanitizerSanitizerStatus
   */
  ready?: boolean;
  /**
   *
   * @type {string}
   * @memberof SanitizerSanitizerStatus
   */
  region?: string;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof SanitizerSanitizerStatus
   */
  whitelistedWordCountsByLevel?: { [key: string]: number };
}
/**
 *
 * @export
 * @interface SeasonSplitDTO
 */
export interface SeasonSplitDTO {
  /**
   *
   * @type {number}
   * @memberof SeasonSplitDTO
   */
  endTime?: number;
  /**
   *
   * @type {Array<SplitRewardGroupDTO>}
   * @memberof SeasonSplitDTO
   */
  rewardTrack?: Array<SplitRewardGroupDTO>;
  /**
   *
   * @type {number}
   * @memberof SeasonSplitDTO
   */
  seasonId?: number;
  /**
   *
   * @type {number}
   * @memberof SeasonSplitDTO
   */
  splitId?: number;
  /**
   *
   * @type {number}
   * @memberof SeasonSplitDTO
   */
  startTime?: number;
}
/**
 *
 * @export
 * @interface SeriesDTO
 */
export interface SeriesDTO {
  /**
   *
   * @type {number}
   * @memberof SeriesDTO
   */
  createdDate?: number;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  displayType?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  eligibilityType?: string;
  /**
   *
   * @type {number}
   * @memberof SeriesDTO
   */
  endDate?: number;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  internalName?: string;
  /**
   *
   * @type {number}
   * @memberof SeriesDTO
   */
  lastUpdatedTimestamp?: number;
  /**
   *
   * @type {SeriesMediaDTO}
   * @memberof SeriesDTO
   */
  media?: SeriesMediaDTO;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  optInButtonText?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  optOutButtonText?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  parentInternalName?: string;
  /**
   *
   * @type {number}
   * @memberof SeriesDTO
   */
  startDate?: number;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  status?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof SeriesDTO
   */
  tags?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesDTO
   */
  type?: string;
  /**
   *
   * @type {boolean}
   * @memberof SeriesDTO
   */
  viewed?: boolean;
  /**
   *
   * @type {Array<AlertDTO>}
   * @memberof SeriesDTO
   */
  warnings?: Array<AlertDTO>;
}
/**
 *
 * @export
 * @interface SeriesMediaDTO
 */
export interface SeriesMediaDTO {
  /**
   *
   * @type {string}
   * @memberof SeriesMediaDTO
   */
  accentColor?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesMediaDTO
   */
  backgroundImageLargeUrl?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesMediaDTO
   */
  backgroundImageSmallUrl?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesMediaDTO
   */
  backgroundUrl?: string;
  /**
   *
   * @type {string}
   * @memberof SeriesMediaDTO
   */
  trackerIconUrl?: string;
}
/**
 *
 * @export
 * @interface ShutdownLcdsForcedClientShutdown
 */
export interface ShutdownLcdsForcedClientShutdown {
  /**
   *
   * @type {string}
   * @memberof ShutdownLcdsForcedClientShutdown
   */
  additionalInfo?: string;
  /**
   *
   * @type {string}
   * @memberof ShutdownLcdsForcedClientShutdown
   */
  reason?: string;
}
/**
 *
 * @export
 * @interface SignedRankedStatsDTO
 */
export interface SignedRankedStatsDTO {
  /**
   *
   * @type {Array<string>}
   * @memberof SignedRankedStatsDTO
   */
  earnedRegaliaRewardIds?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof SignedRankedStatsDTO
   */
  highestPreviousSeasonAchievedRank?: string;
  /**
   *
   * @type {string}
   * @memberof SignedRankedStatsDTO
   */
  highestPreviousSeasonAchievedTier?: string;
  /**
   *
   * @type {string}
   * @memberof SignedRankedStatsDTO
   */
  highestPreviousSeasonEndRank?: string;
  /**
   *
   * @type {string}
   * @memberof SignedRankedStatsDTO
   */
  highestPreviousSeasonEndTier?: string;
  /**
   *
   * @type {string}
   * @memberof SignedRankedStatsDTO
   */
  jwt?: string;
  /**
   *
   * @type {Array<RankedQueueStatsDTO>}
   * @memberof SignedRankedStatsDTO
   */
  queues?: Array<RankedQueueStatsDTO>;
  /**
   *
   * @type {{ [key: string]: number; }}
   * @memberof SignedRankedStatsDTO
   */
  splitsProgress?: { [key: string]: number };
}
/**
 *
 * @export
 * @interface SimpleDialogMessage
 */
export interface SimpleDialogMessage {
  /**
   *
   * @type {number}
   * @memberof SimpleDialogMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof SimpleDialogMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof SimpleDialogMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof SimpleDialogMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface SimpleDialogMessageResponse
 */
export interface SimpleDialogMessageResponse {
  /**
   *
   * @type {number}
   * @memberof SimpleDialogMessageResponse
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof SimpleDialogMessageResponse
   */
  command?: string;
  /**
   *
   * @type {string}
   * @memberof SimpleDialogMessageResponse
   */
  msgId?: string;
}
/**
 *
 * @export
 * @interface SpectatorLcdsSpectateAvailabilityDto
 */
export interface SpectatorLcdsSpectateAvailabilityDto {
  /**
   *
   * @type {Array<string>}
   * @memberof SpectatorLcdsSpectateAvailabilityDto
   */
  teamOrSummonerIds?: Array<string>;
}
/**
 *
 * @export
 * @interface SpectatorLcdsSpectateAvailabilityResponseDto
 */
export interface SpectatorLcdsSpectateAvailabilityResponseDto {
  /**
   *
   * @type {Array<string>}
   * @memberof SpectatorLcdsSpectateAvailabilityResponseDto
   */
  availableForWatching?: Array<string>;
}
/**
 *
 * @export
 * @interface SplitRewardDTO
 */
export interface SplitRewardDTO {
  /**
   *
   * @type {string}
   * @memberof SplitRewardDTO
   */
  defaultRewardId?: string;
  /**
   *
   * @type {SplitRewardsMetaData}
   * @memberof SplitRewardDTO
   */
  metadata?: SplitRewardsMetaData;
  /**
   *
   * @type {string}
   * @memberof SplitRewardDTO
   */
  rewardType?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof SplitRewardDTO
   */
  tieredRewardIds?: { [key: string]: string };
}
/**
 *
 * @export
 * @interface SplitRewardGrantDTO
 */
export interface SplitRewardGrantDTO {
  /**
   *
   * @type {string}
   * @memberof SplitRewardGrantDTO
   */
  rewardId?: string;
  /**
   *
   * @type {string}
   * @memberof SplitRewardGrantDTO
   */
  rewardType?: string;
}
/**
 *
 * @export
 * @interface SplitRewardGroupDTO
 */
export interface SplitRewardGroupDTO {
  /**
   *
   * @type {Array<SplitRewardDTO>}
   * @memberof SplitRewardGroupDTO
   */
  rewards?: Array<SplitRewardDTO>;
  /**
   *
   * @type {number}
   * @memberof SplitRewardGroupDTO
   */
  splitPoints?: number;
}
/**
 *
 * @export
 * @interface SplitRewardsMetaData
 */
export interface SplitRewardsMetaData {
  /**
   *
   * @type {string}
   * @memberof SplitRewardsMetaData
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof SplitRewardsMetaData
   */
  quantity?: number;
}
/**
 *
 * @export
 * @interface StoreLcdsChampionDTO
 */
export interface StoreLcdsChampionDTO {
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionDTO
   */
  active?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionDTO
   */
  botEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionDTO
   */
  championId?: number;
  /**
   *
   * @type {Array<StoreLcdsChampionSkinDTO>}
   * @memberof StoreLcdsChampionDTO
   */
  championSkins?: Array<StoreLcdsChampionSkinDTO>;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionDTO
   */
  endDate?: number;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionDTO
   */
  freeToPlay?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionDTO
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionDTO
   */
  owned?: boolean;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionDTO
   */
  purchaseDate?: number;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionDTO
   */
  rankedPlayEnabled?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof StoreLcdsChampionDTO
   */
  sources?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionDTO
   */
  winCountRemaining?: number;
}
/**
 *
 * @export
 * @interface StoreLcdsChampionSkinDTO
 */
export interface StoreLcdsChampionSkinDTO {
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionSkinDTO
   */
  championId?: number;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionSkinDTO
   */
  endDate?: number;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionSkinDTO
   */
  freeToPlayReward?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionSkinDTO
   */
  lastSelected?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionSkinDTO
   */
  owned?: boolean;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionSkinDTO
   */
  purchaseDate?: number;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionSkinDTO
   */
  skinId?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof StoreLcdsChampionSkinDTO
   */
  sources?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof StoreLcdsChampionSkinDTO
   */
  stillObtainable?: boolean;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsChampionSkinDTO
   */
  winCountRemaining?: number;
}
/**
 *
 * @export
 * @interface StoreLcdsSimpleDialogMessage
 */
export interface StoreLcdsSimpleDialogMessage {
  /**
   *
   * @type {number}
   * @memberof StoreLcdsSimpleDialogMessage
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof StoreLcdsSimpleDialogMessage
   */
  msgId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof StoreLcdsSimpleDialogMessage
   */
  params?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof StoreLcdsSimpleDialogMessage
   */
  type?: string;
}
/**
 *
 * @export
 * @interface StoreLcdsSimpleDialogMessageResponse
 */
export interface StoreLcdsSimpleDialogMessageResponse {
  /**
   *
   * @type {number}
   * @memberof StoreLcdsSimpleDialogMessageResponse
   */
  accountId?: number;
  /**
   *
   * @type {string}
   * @memberof StoreLcdsSimpleDialogMessageResponse
   */
  command?: string;
  /**
   *
   * @type {string}
   * @memberof StoreLcdsSimpleDialogMessageResponse
   */
  msgId?: string;
}
/**
 *
 * @export
 * @interface StoreLcdsStoreAccountBalanceNotification
 */
export interface StoreLcdsStoreAccountBalanceNotification {
  /**
   *
   * @type {number}
   * @memberof StoreLcdsStoreAccountBalanceNotification
   */
  ip?: number;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsStoreAccountBalanceNotification
   */
  rp?: number;
}
/**
 *
 * @export
 * @interface StoreLcdsStoreFulfillmentNotification
 */
export interface StoreLcdsStoreFulfillmentNotification {
  /**
   *
   * @type {object}
   * @memberof StoreLcdsStoreFulfillmentNotification
   */
  data?: object;
  /**
   *
   * @type {string}
   * @memberof StoreLcdsStoreFulfillmentNotification
   */
  inventoryType?: string;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsStoreFulfillmentNotification
   */
  ip?: number;
  /**
   *
   * @type {number}
   * @memberof StoreLcdsStoreFulfillmentNotification
   */
  rp?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum SubState {
  SUGGESTED = 'SUGGESTED',
  PENDING = 'PENDING',
  DECLINED = 'DECLINED',
  REVOKED = 'REVOKED',
  NOTREADY = 'NOT_READY',
  FORCEDNOTREADY = 'FORCED_NOT_READY',
  READY = 'READY',
}

/**
 *
 * @export
 * @interface SummonerLevelAndPoints
 */
export interface SummonerLevelAndPoints {
  /**
   *
   * @type {number}
   * @memberof SummonerLevelAndPoints
   */
  expPoints?: number;
  /**
   *
   * @type {number}
   * @memberof SummonerLevelAndPoints
   */
  expToNextLevel?: number;
  /**
   *
   * @type {number}
   * @memberof SummonerLevelAndPoints
   */
  sumId?: number;
  /**
   *
   * @type {number}
   * @memberof SummonerLevelAndPoints
   */
  summonerLevel?: number;
}
/**
 *
 * @export
 * @interface ThemeVp
 */
export interface ThemeVp {
  /**
   *
   * @type {number}
   * @memberof ThemeVp
   */
  themeId?: number;
  /**
   *
   * @type {number}
   * @memberof ThemeVp
   */
  themeVp?: number;
}
/**
 *
 * @export
 * @interface TicketOfferDTO
 */
export interface TicketOfferDTO {
  /**
   *
   * @type {number}
   * @memberof TicketOfferDTO
   */
  count?: number;
  /**
   *
   * @type {number}
   * @memberof TicketOfferDTO
   */
  offerPlayerId?: number;
  /**
   *
   * @type {number}
   * @memberof TicketOfferDTO
   */
  receivePlayerId?: number;
  /**
   *
   * @type {TicketOfferState}
   * @memberof TicketOfferDTO
   */
  ticketOfferState?: TicketOfferState;
  /**
   *
   * @type {TicketType}
   * @memberof TicketOfferDTO
   */
  type?: TicketType;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum TicketOfferState {
  ACTIVE = 'ACTIVE',
  ACCEPTED = 'ACCEPTED',
  REJECTED = 'REJECTED',
  REVOKED = 'REVOKED',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum TicketType {
  BASIC = 'BASIC',
  PREMIUM = 'PREMIUM',
}

/**
 *
 * @export
 * @interface TierConfig
 */
export interface TierConfig {
  /**
   *
   * @type {number}
   * @memberof TierConfig
   */
  delayTime?: number;
  /**
   *
   * @type {number}
   * @memberof TierConfig
   */
  estimateTime?: number;
  /**
   *
   * @type {number}
   * @memberof TierConfig
   */
  tier?: number;
}
/**
 *
 * @export
 * @interface TimeSeriesEventBeginV1
 */
export interface TimeSeriesEventBeginV1 {
  /**
   * event name
   * @type {string}
   * @memberof TimeSeriesEventBeginV1
   */
  eventName?: string;
  /**
   * timestamp in microseconds of when the event occurred
   * @type {number}
   * @memberof TimeSeriesEventBeginV1
   */
  when?: number;
}
/**
 *
 * @export
 * @interface TimeSeriesEventEndV1
 */
export interface TimeSeriesEventEndV1 {
  /**
   * event name
   * @type {string}
   * @memberof TimeSeriesEventEndV1
   */
  eventName?: string;
  /**
   * optional event name suffix
   * @type {string}
   * @memberof TimeSeriesEventEndV1
   */
  suffix?: string;
  /**
   * timestamp in microseconds of when the event occurred
   * @type {number}
   * @memberof TimeSeriesEventEndV1
   */
  when?: number;
}
/**
 *
 * @export
 * @interface TimeSeriesEventMarkerV1
 */
export interface TimeSeriesEventMarkerV1 {
  /**
   * event name
   * @type {string}
   * @memberof TimeSeriesEventMarkerV1
   */
  eventName?: string;
  /**
   * event marker name
   * @type {string}
   * @memberof TimeSeriesEventMarkerV1
   */
  markerName?: string;
  /**
   * timestamp in microseconds of when the event occurred
   * @type {number}
   * @memberof TimeSeriesEventMarkerV1
   */
  when?: number;
}
/**
 *
 * @export
 * @interface TournamentDTO
 */
export interface TournamentDTO {
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  bracketFormationInitDelayMs?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  bracketFormationIntervalMs?: number;
  /**
   *
   * @type {string}
   * @memberof TournamentDTO
   */
  bracketSize?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof TournamentDTO
   */
  buyInOptions?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof TournamentDTO
   */
  buyInOptionsPremium?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  entryFee?: number;
  /**
   *
   * @type {boolean}
   * @memberof TournamentDTO
   */
  honorRestriction?: boolean;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  id?: number;
  /**
   *
   * @type {boolean}
   * @memberof TournamentDTO
   */
  lastThemeOfSeason?: boolean;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  maxSub?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  minGames?: number;
  /**
   *
   * @type {string}
   * @memberof TournamentDTO
   */
  nameLocKey?: string;
  /**
   *
   * @type {string}
   * @memberof TournamentDTO
   */
  nameLocKeySecondary?: string;
  /**
   *
   * @type {Array<TournamentPhaseDTO>}
   * @memberof TournamentDTO
   */
  phases?: Array<TournamentPhaseDTO>;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  queueId?: number;
  /**
   *
   * @type {boolean}
   * @memberof TournamentDTO
   */
  rankRestriction?: boolean;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  resumeTime?: number;
  /**
   *
   * @type {Array<ClashRewardConfigClient>}
   * @memberof TournamentDTO
   */
  rewardConfig?: Array<ClashRewardConfigClient>;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  rosterCreateDeadline?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  rosterSize?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  scheduleEndTime?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  scheduleTime?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  scoutingTimeMs?: number;
  /**
   *
   * @type {boolean}
   * @memberof TournamentDTO
   */
  smsRestriction?: boolean;
  /**
   *
   * @type {TournamentStatusEnum}
   * @memberof TournamentDTO
   */
  status?: TournamentStatusEnum;
  /**
   *
   * @type {number}
   * @memberof TournamentDTO
   */
  themeId?: number;
  /**
   *
   * @type {Array<TierConfig>}
   * @memberof TournamentDTO
   */
  tierConfigs?: Array<TierConfig>;
  /**
   *
   * @type {boolean}
   * @memberof TournamentDTO
   */
  voiceEnabled?: boolean;
}
/**
 *
 * @export
 * @interface TournamentHistoryAndWinnersDTO
 */
export interface TournamentHistoryAndWinnersDTO {
  /**
   *
   * @type {Array<TournamentDTO>}
   * @memberof TournamentHistoryAndWinnersDTO
   */
  tournamentHistory?: Array<TournamentDTO>;
  /**
   *
   * @type {string}
   * @memberof TournamentHistoryAndWinnersDTO
   */
  tournamentWinnersCompressed?: string;
}
/**
 *
 * @export
 * @interface TournamentInfoDTO
 */
export interface TournamentInfoDTO {
  /**
   *
   * @type {Array<PendingRosterDTO>}
   * @memberof TournamentInfoDTO
   */
  inviteePendingRosters?: Array<PendingRosterDTO>;
  /**
   *
   * @type {PendingRosterDTO}
   * @memberof TournamentInfoDTO
   */
  pendingRoster?: PendingRosterDTO;
  /**
   *
   * @type {RosterDTO}
   * @memberof TournamentInfoDTO
   */
  roster?: RosterDTO;
  /**
   *
   * @type {Array<RosterDTO>}
   * @memberof TournamentInfoDTO
   */
  subRosters?: Array<RosterDTO>;
  /**
   *
   * @type {number}
   * @memberof TournamentInfoDTO
   */
  themeVp?: number;
  /**
   *
   * @type {TournamentDTO}
   * @memberof TournamentInfoDTO
   */
  tournament?: TournamentDTO;
}
/**
 *
 * @export
 * @interface TournamentInfoMinimalDTO
 */
export interface TournamentInfoMinimalDTO {
  /**
   *
   * @type {number}
   * @memberof TournamentInfoMinimalDTO
   */
  time?: number;
  /**
   *
   * @type {Array<TournamentInfoDTO>}
   * @memberof TournamentInfoMinimalDTO
   */
  tournamentInfo?: Array<TournamentInfoDTO>;
}
/**
 *
 * @export
 * @interface TournamentPhaseDTO
 */
export interface TournamentPhaseDTO {
  /**
   *
   * @type {boolean}
   * @memberof TournamentPhaseDTO
   */
  cancelled?: boolean;
  /**
   *
   * @type {CapacityEnum}
   * @memberof TournamentPhaseDTO
   */
  capacityStatus?: CapacityEnum;
  /**
   *
   * @type {number}
   * @memberof TournamentPhaseDTO
   */
  id?: number;
  /**
   *
   * @type {Array<number>}
   * @memberof TournamentPhaseDTO
   */
  limitTiers?: Array<number>;
  /**
   *
   * @type {number}
   * @memberof TournamentPhaseDTO
   */
  period?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentPhaseDTO
   */
  registrationTime?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentPhaseDTO
   */
  startTime?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentPhaseDTO
   */
  tournamentId?: number;
}
/**
 *
 * @export
 * @interface TournamentPlayerInfoDTO
 */
export interface TournamentPlayerInfoDTO {
  /**
   *
   * @type {PlayerDTO}
   * @memberof TournamentPlayerInfoDTO
   */
  player?: PlayerDTO;
  /**
   *
   * @type {Array<RosterStatsDTO>}
   * @memberof TournamentPlayerInfoDTO
   */
  rosterStats?: Array<RosterStatsDTO>;
  /**
   *
   * @type {number}
   * @memberof TournamentPlayerInfoDTO
   */
  seasonVp?: number;
  /**
   *
   * @type {Array<ThemeVp>}
   * @memberof TournamentPlayerInfoDTO
   */
  themeVps?: Array<ThemeVp>;
  /**
   *
   * @type {number}
   * @memberof TournamentPlayerInfoDTO
   */
  tier?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentPlayerInfoDTO
   */
  time?: number;
  /**
   *
   * @type {Array<TournamentInfoDTO>}
   * @memberof TournamentPlayerInfoDTO
   */
  tournamentInfo?: Array<TournamentInfoDTO>;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum TournamentStatusEnum {
  DEFAULT = 'DEFAULT',
  CANCELLED = 'CANCELLED',
  PAUSED = 'PAUSED',
  PRERESUME = 'PRERESUME',
}

/**
 *
 * @export
 * @interface TracingEventV1
 */
export interface TracingEventV1 {
  /**
   * destination module name
   * @type {string}
   * @memberof TracingEventV1
   */
  dest?: string;
  /**
   * event specific details
   * @type {string}
   * @memberof TracingEventV1
   */
  details?: string;
  /**
   * event name
   * @type {string}
   * @memberof TracingEventV1
   */
  name?: string;
  /**
   * source module name
   * @type {string}
   * @memberof TracingEventV1
   */
  src?: string;
  /**
   * a list of tags associated with this event
   * @type {string}
   * @memberof TracingEventV1
   */
  tags?: string;
  /**
   * timestamp in microseconds of when the event occurred
   * @type {number}
   * @memberof TracingEventV1
   */
  when?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum TracingModuleThreadingModelV1 {
  KNone = 'kNone',
  KMainThread = 'kMainThread',
  KDedicated = 'kDedicated',
  KSequential = 'kSequential',
  KConcurrent = 'kConcurrent',
  KParallel = 'kParallel',
}

/**
 *
 * @export
 * @enum {string}
 */
export enum TracingModuleTypeV1 {
  KUnknown = 'kUnknown',
  KRemoteAppModule = 'kRemoteAppModule',
  KBackEndPlugin = 'kBackEndPlugin',
  KBackendOther = 'kBackendOther',
  KFrontEndPlugin = 'kFrontEndPlugin',
  KRemotingSource = 'kRemotingSource',
}

/**
 *
 * @export
 * @interface TracingModuleV1
 */
export interface TracingModuleV1 {
  /**
   *
   * @type {number}
   * @memberof TracingModuleV1
   */
  moduleId?: number;
  /**
   *
   * @type {string}
   * @memberof TracingModuleV1
   */
  name?: string;
  /**
   *
   * @type {TracingModuleThreadingModelV1}
   * @memberof TracingModuleV1
   */
  threadingModel?: TracingModuleThreadingModelV1;
  /**
   *
   * @type {TracingModuleTypeV1}
   * @memberof TracingModuleV1
   */
  type?: TracingModuleTypeV1;
}
/**
 *
 * @export
 * @interface TracingPhaseBeginV1
 */
export interface TracingPhaseBeginV1 {
  /**
   *
   * @type {TracingPhaseImportanceV1}
   * @memberof TracingPhaseBeginV1
   */
  importance?: TracingPhaseImportanceV1;
  /**
   * phase name
   * @type {string}
   * @memberof TracingPhaseBeginV1
   */
  name?: string;
  /**
   * timestamp in microseconds of when the phase began
   * @type {number}
   * @memberof TracingPhaseBeginV1
   */
  when?: number;
}
/**
 *
 * @export
 * @interface TracingPhaseEndV1
 */
export interface TracingPhaseEndV1 {
  /**
   * phase name
   * @type {string}
   * @memberof TracingPhaseEndV1
   */
  name?: string;
  /**
   * timestamp in microseconds of when the phase ended
   * @type {number}
   * @memberof TracingPhaseEndV1
   */
  when?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum TracingPhaseImportanceV1 {
  Trivial = 'trivial',
  Minor = 'minor',
  Major = 'major',
}

/**
 *
 * @export
 * @interface TutorialMetadata
 */
export interface TutorialMetadata {
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof TutorialMetadata
   */
  displayRewards?: { [key: string]: string };
  /**
   *
   * @type {string}
   * @memberof TutorialMetadata
   */
  queueId?: string;
  /**
   *
   * @type {number}
   * @memberof TutorialMetadata
   */
  stepNumber?: number;
  /**
   *
   * @type {boolean}
   * @memberof TutorialMetadata
   */
  useChosenChampion?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TutorialMetadata
   */
  useQuickSearchMatchmaking?: boolean;
}
/**
 *
 * @export
 * @interface VoiceChatAudioPropertiesResource
 */
export interface VoiceChatAudioPropertiesResource {
  /**
   *
   * @type {number}
   * @memberof VoiceChatAudioPropertiesResource
   */
  fastEnergyMeter?: number;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatAudioPropertiesResource
   */
  isLoopbackEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatAudioPropertiesResource
   */
  isMicActive?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatAudioPropertiesResource
   */
  isSpeakerActive?: boolean;
  /**
   *
   * @type {number}
   * @memberof VoiceChatAudioPropertiesResource
   */
  micEnergy?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatAudioPropertiesResource
   */
  micVolume?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatAudioPropertiesResource
   */
  noiseFloorMeter?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatAudioPropertiesResource
   */
  speakerEnergy?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatAudioPropertiesResource
   */
  speakerVolume?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatAudioPropertiesResource
   */
  speechThresholdMeter?: number;
}
/**
 *
 * @export
 * @interface VoiceChatCallStatsResource
 */
export interface VoiceChatCallStatsResource {
  /**
   *
   * @type {string}
   * @memberof VoiceChatCallStatsResource
   */
  callId?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof VoiceChatCallStatsResource
   */
  captureDeviceConsecutivelyReadCount?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof VoiceChatCallStatsResource
   */
  codecName?: string;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  currentBars?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  currentOpusBandwidth?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  currentOpusBitRate?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  currentOpusComplexity?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  currentOpusMaxPacketSize?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  currentOpusVbrMode?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  incomingDiscarded?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  incomingOutOfTime?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  incomingPacketloss?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  incomingReceived?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  lastLatencyMeasured?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  latencyMeasurementCount?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  latencyPacketsDropped?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  latencyPacketsLost?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  latencyPacketsMalformed?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  latencyPacketsNegativeLatency?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  latencyPacketsSent?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  latencySum?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  maxLatency?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  minLatency?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  outgoingSent?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  plcOn?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  plcSyntheticFrames?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  rFactor?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  renderDeviceErrors?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  renderDeviceOverruns?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  renderDeviceUnderruns?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  sampleIntervalBegin?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCallStatsResource
   */
  sampleIntervalEnd?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum VoiceChatCaptureDevicePermissionStatus {
  PromptForPermission = 'promptForPermission',
  PermissionDenied = 'permissionDenied',
  PermissionGranted = 'permissionGranted',
}

/**
 *
 * @export
 * @interface VoiceChatCodecSettingsResource
 */
export interface VoiceChatCodecSettingsResource {
  /**
   *
   * @type {number}
   * @memberof VoiceChatCodecSettingsResource
   */
  codecBandwidth?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCodecSettingsResource
   */
  codecBitrate?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCodecSettingsResource
   */
  codecComplexity?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatCodecSettingsResource
   */
  codecVbrMode?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum VoiceChatConfigReadinessEnum {
  NotReady = 'NotReady',
  Ready = 'Ready',
  Disabled = 'Disabled',
}

/**
 *
 * @export
 * @interface VoiceChatConfigResource
 */
export interface VoiceChatConfigResource {
  /**
   *
   * @type {string}
   * @memberof VoiceChatConfigResource
   */
  accessTokenUri?: string;
  /**
   *
   * @type {string}
   * @memberof VoiceChatConfigResource
   */
  authTokenUri?: string;
  /**
   *
   * @type {string}
   * @memberof VoiceChatConfigResource
   */
  jwt2gvtUrl?: string;
  /**
   *
   * @type {number}
   * @memberof VoiceChatConfigResource
   */
  logLevel?: number;
  /**
   *
   * @type {string}
   * @memberof VoiceChatConfigResource
   */
  logLevelName?: string;
  /**
   *
   * @type {string}
   * @memberof VoiceChatConfigResource
   */
  logsPath?: string;
  /**
   *
   * @type {string}
   * @memberof VoiceChatConfigResource
   */
  provider?: string;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatConfigResource
   */
  useExternalAuth?: boolean;
  /**
   *
   * @type {string}
   * @memberof VoiceChatConfigResource
   */
  voiceDomain?: string;
  /**
   *
   * @type {string}
   * @memberof VoiceChatConfigResource
   */
  voiceServerUri?: string;
}
/**
 *
 * @export
 * @interface VoiceChatConfigStatus
 */
export interface VoiceChatConfigStatus {
  /**
   *
   * @type {VoiceChatConfigReadinessEnum}
   * @memberof VoiceChatConfigStatus
   */
  readiness?: VoiceChatConfigReadinessEnum;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum VoiceChatConfigType {
  Public = 'public',
  Player = 'player',
}

/**
 *
 * @export
 * @interface VoiceChatDeviceResource
 */
export interface VoiceChatDeviceResource {
  /**
   *
   * @type {string}
   * @memberof VoiceChatDeviceResource
   */
  handle?: string;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatDeviceResource
   */
  is_current_device?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatDeviceResource
   */
  is_default?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatDeviceResource
   */
  is_effective_device?: boolean;
  /**
   *
   * @type {string}
   * @memberof VoiceChatDeviceResource
   */
  name?: string;
}
/**
 *
 * @export
 * @interface VoiceChatParticipantResource
 */
export interface VoiceChatParticipantResource {
  /**
   *
   * @type {number}
   * @memberof VoiceChatParticipantResource
   */
  energy?: number;
  /**
   *
   * @type {string}
   * @memberof VoiceChatParticipantResource
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatParticipantResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatParticipantResource
   */
  isSpeaking?: boolean;
  /**
   *
   * @type {string}
   * @memberof VoiceChatParticipantResource
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof VoiceChatParticipantResource
   */
  speakingTimestamp?: number;
  /**
   *
   * @type {string}
   * @memberof VoiceChatParticipantResource
   */
  uri?: string;
  /**
   *
   * @type {number}
   * @memberof VoiceChatParticipantResource
   */
  volume?: number;
}
/**
 *
 * @export
 * @interface VoiceChatPushToTalkResource
 */
export interface VoiceChatPushToTalkResource {
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatPushToTalkResource
   */
  pttEnabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof VoiceChatPushToTalkResource
   */
  pttKeyBinding?: string;
}
/**
 *
 * @export
 * @interface VoiceChatRsoAuthorizationResource
 */
export interface VoiceChatRsoAuthorizationResource {
  /**
   *
   * @type {number}
   * @memberof VoiceChatRsoAuthorizationResource
   */
  currentAccountId?: number;
  /**
   *
   * @type {string}
   * @memberof VoiceChatRsoAuthorizationResource
   */
  currentPlatformId?: string;
  /**
   *
   * @type {string}
   * @memberof VoiceChatRsoAuthorizationResource
   */
  subject?: string;
}
/**
 *
 * @export
 * @interface VoiceChatSessionResource
 */
export interface VoiceChatSessionResource {
  /**
   *
   * @type {string}
   * @memberof VoiceChatSessionResource
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatSessionResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatSessionResource
   */
  isTransmitEnabled?: boolean;
  /**
   *
   * @type {Array<VoiceChatParticipantResource>}
   * @memberof VoiceChatSessionResource
   */
  participants?: Array<VoiceChatParticipantResource>;
  /**
   *
   * @type {VoiceChatSessionStatus}
   * @memberof VoiceChatSessionResource
   */
  status?: VoiceChatSessionStatus;
  /**
   *
   * @type {number}
   * @memberof VoiceChatSessionResource
   */
  volume?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum VoiceChatSessionStatus {
  Active = 'active',
  OnHold = 'onHold',
}

/**
 *
 * @export
 * @interface VoiceChatSettingsResource
 */
export interface VoiceChatSettingsResource {
  /**
   *
   * @type {string}
   * @memberof VoiceChatSettingsResource
   */
  currentCaptureDeviceHandle?: string;
  /**
   *
   * @type {string}
   * @memberof VoiceChatSettingsResource
   */
  currentRenderDeviceHandle?: string;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatSettingsResource
   */
  localMicMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatSettingsResource
   */
  loopbackEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof VoiceChatSettingsResource
   */
  micLevel?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatSettingsResource
   */
  speakerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatSettingsResource
   */
  vadHangoverTime?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatSettingsResource
   */
  vadSensitivity?: number;
}
/**
 *
 * @export
 * @interface VoiceChatStateResource
 */
export interface VoiceChatStateResource {
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatStateResource
   */
  connected?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export enum VoiceChatStateType {
  Disconnected = 'disconnected',
  Connecting = 'connecting',
  Connected = 'connected',
  Disconnecting = 'disconnecting',
  Initialized = 'initialized',
  Shuttingdown = 'shuttingdown',
}

/**
 *
 * @export
 * @interface VoiceChatUpdateCodecSettingsResource
 */
export interface VoiceChatUpdateCodecSettingsResource {
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateCodecSettingsResource
   */
  codecBandwidth?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateCodecSettingsResource
   */
  codecBitrate?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateCodecSettingsResource
   */
  codecComplexity?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateCodecSettingsResource
   */
  codecVbrMode?: number;
}
/**
 *
 * @export
 * @interface VoiceChatUpdateParticipantResource
 */
export interface VoiceChatUpdateParticipantResource {
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatUpdateParticipantResource
   */
  isMuted?: boolean;
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateParticipantResource
   */
  volume?: number;
}
/**
 *
 * @export
 * @interface VoiceChatUpdateSettingsResource
 */
export interface VoiceChatUpdateSettingsResource {
  /**
   *
   * @type {string}
   * @memberof VoiceChatUpdateSettingsResource
   */
  currentCaptureDeviceHandle?: string;
  /**
   *
   * @type {string}
   * @memberof VoiceChatUpdateSettingsResource
   */
  currentRenderDeviceHandle?: string;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatUpdateSettingsResource
   */
  localMicMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof VoiceChatUpdateSettingsResource
   */
  loopbackEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateSettingsResource
   */
  micLevel?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateSettingsResource
   */
  speakerLevel?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateSettingsResource
   */
  vadHangoverTime?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatUpdateSettingsResource
   */
  vadSensitivity?: number;
}
/**
 *
 * @export
 * @interface VoiceChatVoiceErrorCounterResource
 */
export interface VoiceChatVoiceErrorCounterResource {
  /**
   *
   * @type {number}
   * @memberof VoiceChatVoiceErrorCounterResource
   */
  count?: number;
  /**
   *
   * @type {VoiceChatVoiceErrorResource}
   * @memberof VoiceChatVoiceErrorCounterResource
   */
  error?: VoiceChatVoiceErrorResource;
  /**
   *
   * @type {number}
   * @memberof VoiceChatVoiceErrorCounterResource
   */
  timeOfLastError?: number;
}
/**
 *
 * @export
 * @interface VoiceChatVoiceErrorResource
 */
export interface VoiceChatVoiceErrorResource {
  /**
   *
   * @type {string}
   * @memberof VoiceChatVoiceErrorResource
   */
  errorString?: string;
  /**
   *
   * @type {number}
   * @memberof VoiceChatVoiceErrorResource
   */
  responseType?: number;
  /**
   *
   * @type {string}
   * @memberof VoiceChatVoiceErrorResource
   */
  responseTypeString?: string;
  /**
   *
   * @type {number}
   * @memberof VoiceChatVoiceErrorResource
   */
  returnCode?: number;
  /**
   *
   * @type {number}
   * @memberof VoiceChatVoiceErrorResource
   */
  statusCode?: number;
  /**
   *
   * @type {string}
   * @memberof VoiceChatVoiceErrorResource
   */
  statusString?: string;
}
